(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const a of i)if(a.type==="childList")for(const l of a.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function n(i){const a={};return i.integrity&&(a.integrity=i.integrity),i.referrerPolicy&&(a.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?a.credentials="include":i.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function s(i){if(i.ep)return;i.ep=!0;const a=n(i);fetch(i.href,a)}})();var Bt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function ie(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function on(t){return t instanceof Map?t.clear=t.delete=t.set=function(){throw new Error("map is read-only")}:t instanceof Set&&(t.add=t.clear=t.delete=function(){throw new Error("set is read-only")}),Object.freeze(t),Object.getOwnPropertyNames(t).forEach(e=>{const n=t[e],s=typeof n;(s==="object"||s==="function")&&!Object.isFrozen(n)&&on(n)}),t}class Ie{constructor(e){e.data===void 0&&(e.data={}),this.data=e.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function rn(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function vt(t,...e){const n=Object.create(null);for(const s in t)n[s]=t[s];return e.forEach(function(s){for(const i in s)n[i]=s[i]}),n}const es="</span>",He=t=>!!t.scope,ns=(t,{prefix:e})=>{if(t.startsWith("language:"))return t.replace("language:","language-");if(t.includes(".")){const n=t.split(".");return[`${e}${n.shift()}`,...n.map((s,i)=>`${s}${"_".repeat(i+1)}`)].join(" ")}return`${e}${t}`};class ss{constructor(e,n){this.buffer="",this.classPrefix=n.classPrefix,e.walk(this)}addText(e){this.buffer+=rn(e)}openNode(e){if(!He(e))return;const n=ns(e.scope,{prefix:this.classPrefix});this.span(n)}closeNode(e){He(e)&&(this.buffer+=es)}value(){return this.buffer}span(e){this.buffer+=`<span class="${e}">`}}const $e=(t={})=>{const e={children:[]};return Object.assign(e,t),e};class Se{constructor(){this.rootNode=$e(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(e){this.top.children.push(e)}openNode(e){const n=$e({scope:e});this.add(n),this.stack.push(n)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(e){return this.constructor._walk(e,this.rootNode)}static _walk(e,n){return typeof n=="string"?e.addText(n):n.children&&(e.openNode(n),n.children.forEach(s=>this._walk(e,s)),e.closeNode(n)),e}static _collapse(e){typeof e!="string"&&e.children&&(e.children.every(n=>typeof n=="string")?e.children=[e.children.join("")]:e.children.forEach(n=>{Se._collapse(n)}))}}class os extends Se{constructor(e){super(),this.options=e}addText(e){e!==""&&this.add(e)}startScope(e){this.openNode(e)}endScope(){this.closeNode()}__addSublanguage(e,n){const s=e.root;n&&(s.scope=`language:${n}`),this.add(s)}toHTML(){return new ss(this,this.options).value()}finalize(){return this.closeAllNodes(),!0}}function Gt(t){return t?typeof t=="string"?t:t.source:null}function cn(t){return Tt("(?=",t,")")}function rs(t){return Tt("(?:",t,")*")}function is(t){return Tt("(?:",t,")?")}function Tt(...t){return t.map(n=>Gt(n)).join("")}function cs(t){const e=t[t.length-1];return typeof e=="object"&&e.constructor===Object?(t.splice(t.length-1,1),e):{}}function Le(...t){return"("+(cs(t).capture?"":"?:")+t.map(s=>Gt(s)).join("|")+")"}function an(t){return new RegExp(t.toString()+"|").exec("").length-1}function as(t,e){const n=t&&t.exec(e);return n&&n.index===0}const ls=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function qe(t,{joinWith:e}){let n=0;return t.map(s=>{n+=1;const i=n;let a=Gt(s),l="";for(;a.length>0;){const c=ls.exec(a);if(!c){l+=a;break}l+=a.substring(0,c.index),a=a.substring(c.index+c[0].length),c[0][0]==="\\"&&c[1]?l+="\\"+String(Number(c[1])+i):(l+=c[0],c[0]==="("&&n++)}return l}).map(s=>`(${s})`).join(e)}const us=/\b\B/,ln="[a-zA-Z]\\w*",Ne="[a-zA-Z_]\\w*",un="\\b\\d+(\\.\\d+)?",hn="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",pn="\\b(0b[01]+)",hs="!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",ps=(t={})=>{const e=/^#![ ]*\//;return t.binary&&(t.begin=Tt(e,/.*\b/,t.binary,/\b.*/)),vt({scope:"meta",begin:e,end:/$/,relevance:0,"on:begin":(n,s)=>{n.index!==0&&s.ignoreMatch()}},t)},Vt={begin:"\\\\[\\s\\S]",relevance:0},fs={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[Vt]},ds={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[Vt]},gs={begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},ce=function(t,e,n={}){const s=vt({scope:"comment",begin:t,end:e,contains:[]},n);s.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const i=Le("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return s.contains.push({begin:Tt(/[ ]+/,"(",i,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),s},ms=ce("//","$"),vs=ce("/\\*","\\*/"),bs=ce("#","$"),ys={scope:"number",begin:un,relevance:0},ws={scope:"number",begin:hn,relevance:0},_s={scope:"number",begin:pn,relevance:0},xs={begin:/(?=\/[^/\n]*\/)/,contains:[{scope:"regexp",begin:/\//,end:/\/[gimuy]*/,illegal:/\n/,contains:[Vt,{begin:/\[/,end:/\]/,relevance:0,contains:[Vt]}]}]},Es={scope:"title",begin:ln,relevance:0},Ts={scope:"title",begin:Ne,relevance:0},ks={begin:"\\.\\s*"+Ne,relevance:0},Ds=function(t){return Object.assign(t,{"on:begin":(e,n)=>{n.data._beginMatch=e[1]},"on:end":(e,n)=>{n.data._beginMatch!==e[1]&&n.ignoreMatch()}})};var Qt=Object.freeze({__proto__:null,MATCH_NOTHING_RE:us,IDENT_RE:ln,UNDERSCORE_IDENT_RE:Ne,NUMBER_RE:un,C_NUMBER_RE:hn,BINARY_NUMBER_RE:pn,RE_STARTERS_RE:hs,SHEBANG:ps,BACKSLASH_ESCAPE:Vt,APOS_STRING_MODE:fs,QUOTE_STRING_MODE:ds,PHRASAL_WORDS_MODE:gs,COMMENT:ce,C_LINE_COMMENT_MODE:ms,C_BLOCK_COMMENT_MODE:vs,HASH_COMMENT_MODE:bs,NUMBER_MODE:ys,C_NUMBER_MODE:ws,BINARY_NUMBER_MODE:_s,REGEXP_MODE:xs,TITLE_MODE:Es,UNDERSCORE_TITLE_MODE:Ts,METHOD_GUARD:ks,END_SAME_AS_BEGIN:Ds});function Cs(t,e){t.input[t.index-1]==="."&&e.ignoreMatch()}function As(t,e){t.className!==void 0&&(t.scope=t.className,delete t.className)}function Ss(t,e){e&&t.beginKeywords&&(t.begin="\\b("+t.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",t.__beforeBegin=Cs,t.keywords=t.keywords||t.beginKeywords,delete t.beginKeywords,t.relevance===void 0&&(t.relevance=0))}function Ls(t,e){Array.isArray(t.illegal)&&(t.illegal=Le(...t.illegal))}function qs(t,e){if(t.match){if(t.begin||t.end)throw new Error("begin & end are not supported with match");t.begin=t.match,delete t.match}}function Ns(t,e){t.relevance===void 0&&(t.relevance=1)}const Os=(t,e)=>{if(!t.beforeMatch)return;if(t.starts)throw new Error("beforeMatch cannot be used with starts");const n=Object.assign({},t);Object.keys(t).forEach(s=>{delete t[s]}),t.keywords=n.keywords,t.begin=Tt(n.beforeMatch,cn(n.begin)),t.starts={relevance:0,contains:[Object.assign(n,{endsParent:!0})]},t.relevance=0,delete n.beforeMatch},Rs=["of","and","for","in","not","or","if","then","parent","list","value"],Fs="keyword";function fn(t,e,n=Fs){const s=Object.create(null);return typeof t=="string"?i(n,t.split(" ")):Array.isArray(t)?i(n,t):Object.keys(t).forEach(function(a){Object.assign(s,fn(t[a],e,a))}),s;function i(a,l){e&&(l=l.map(c=>c.toLowerCase())),l.forEach(function(c){const p=c.split("|");s[p[0]]=[a,js(p[0],p[1])]})}}function js(t,e){return e?Number(e):Bs(t)?0:1}function Bs(t){return Rs.includes(t.toLowerCase())}const Ue={},_t=t=>{console.error(t)},Ge=(t,...e)=>{console.log(`WARN: ${t}`,...e)},Ft=(t,e)=>{Ue[`${t}/${e}`]||(console.log(`Deprecated as of ${t}. ${e}`),Ue[`${t}/${e}`]=!0)},te=new Error;function dn(t,e,{key:n}){let s=0;const i=t[n],a={},l={};for(let c=1;c<=e.length;c++)l[c+s]=i[c],a[c+s]=!0,s+=an(e[c-1]);t[n]=l,t[n]._emit=a,t[n]._multi=!0}function Ms(t){if(Array.isArray(t.begin)){if(t.skip||t.excludeBegin||t.returnBegin)throw _t("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),te;if(typeof t.beginScope!="object"||t.beginScope===null)throw _t("beginScope must be object"),te;dn(t,t.begin,{key:"beginScope"}),t.begin=qe(t.begin,{joinWith:""})}}function Ps(t){if(Array.isArray(t.end)){if(t.skip||t.excludeEnd||t.returnEnd)throw _t("skip, excludeEnd, returnEnd not compatible with endScope: {}"),te;if(typeof t.endScope!="object"||t.endScope===null)throw _t("endScope must be object"),te;dn(t,t.end,{key:"endScope"}),t.end=qe(t.end,{joinWith:""})}}function Is(t){t.scope&&typeof t.scope=="object"&&t.scope!==null&&(t.beginScope=t.scope,delete t.scope)}function Hs(t){Is(t),typeof t.beginScope=="string"&&(t.beginScope={_wrap:t.beginScope}),typeof t.endScope=="string"&&(t.endScope={_wrap:t.endScope}),Ms(t),Ps(t)}function $s(t){function e(l,c){return new RegExp(Gt(l),"m"+(t.case_insensitive?"i":"")+(t.unicodeRegex?"u":"")+(c?"g":""))}class n{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(c,p){p.position=this.position++,this.matchIndexes[this.matchAt]=p,this.regexes.push([p,c]),this.matchAt+=an(c)+1}compile(){this.regexes.length===0&&(this.exec=()=>null);const c=this.regexes.map(p=>p[1]);this.matcherRe=e(qe(c,{joinWith:"|"}),!0),this.lastIndex=0}exec(c){this.matcherRe.lastIndex=this.lastIndex;const p=this.matcherRe.exec(c);if(!p)return null;const m=p.findIndex((C,R)=>R>0&&C!==void 0),_=this.matchIndexes[m];return p.splice(0,m),Object.assign(p,_)}}class s{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(c){if(this.multiRegexes[c])return this.multiRegexes[c];const p=new n;return this.rules.slice(c).forEach(([m,_])=>p.addRule(m,_)),p.compile(),this.multiRegexes[c]=p,p}resumingScanAtSamePosition(){return this.regexIndex!==0}considerAll(){this.regexIndex=0}addRule(c,p){this.rules.push([c,p]),p.type==="begin"&&this.count++}exec(c){const p=this.getMatcher(this.regexIndex);p.lastIndex=this.lastIndex;let m=p.exec(c);if(this.resumingScanAtSamePosition()&&!(m&&m.index===this.lastIndex)){const _=this.getMatcher(0);_.lastIndex=this.lastIndex+1,m=_.exec(c)}return m&&(this.regexIndex+=m.position+1,this.regexIndex===this.count&&this.considerAll()),m}}function i(l){const c=new s;return l.contains.forEach(p=>c.addRule(p.begin,{rule:p,type:"begin"})),l.terminatorEnd&&c.addRule(l.terminatorEnd,{type:"end"}),l.illegal&&c.addRule(l.illegal,{type:"illegal"}),c}function a(l,c){const p=l;if(l.isCompiled)return p;[As,qs,Hs,Os].forEach(_=>_(l,c)),t.compilerExtensions.forEach(_=>_(l,c)),l.__beforeBegin=null,[Ss,Ls,Ns].forEach(_=>_(l,c)),l.isCompiled=!0;let m=null;return typeof l.keywords=="object"&&l.keywords.$pattern&&(l.keywords=Object.assign({},l.keywords),m=l.keywords.$pattern,delete l.keywords.$pattern),m=m||/\w+/,l.keywords&&(l.keywords=fn(l.keywords,t.case_insensitive)),p.keywordPatternRe=e(m,!0),c&&(l.begin||(l.begin=/\B|\b/),p.beginRe=e(p.begin),!l.end&&!l.endsWithParent&&(l.end=/\B|\b/),l.end&&(p.endRe=e(p.end)),p.terminatorEnd=Gt(p.end)||"",l.endsWithParent&&c.terminatorEnd&&(p.terminatorEnd+=(l.end?"|":"")+c.terminatorEnd)),l.illegal&&(p.illegalRe=e(l.illegal)),l.contains||(l.contains=[]),l.contains=[].concat(...l.contains.map(function(_){return Us(_==="self"?l:_)})),l.contains.forEach(function(_){a(_,p)}),l.starts&&a(l.starts,c),p.matcher=i(p),p}if(t.compilerExtensions||(t.compilerExtensions=[]),t.contains&&t.contains.includes("self"))throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return t.classNameAliases=vt(t.classNameAliases||{}),a(t)}function gn(t){return t?t.endsWithParent||gn(t.starts):!1}function Us(t){return t.variants&&!t.cachedVariants&&(t.cachedVariants=t.variants.map(function(e){return vt(t,{variants:null},e)})),t.cachedVariants?t.cachedVariants:gn(t)?vt(t,{starts:t.starts?vt(t.starts):null}):Object.isFrozen(t)?vt(t):t}var Gs="11.8.0";class Vs extends Error{constructor(e,n){super(e),this.name="HTMLInjectionError",this.html=n}}const ve=rn,Ve=vt,ze=Symbol("nomatch"),zs=7,mn=function(t){const e=Object.create(null),n=Object.create(null),s=[];let i=!0;const a="Could not find the language '{}', did you forget to load/include a language module?",l={disableAutodetect:!0,name:"Plain text",contains:[]};let c={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:os};function p(f){return c.noHighlightRe.test(f)}function m(f){let y=f.className+" ";y+=f.parentNode?f.parentNode.className:"";const S=c.languageDetectRe.exec(y);if(S){const F=nt(S[1]);return F||(Ge(a.replace("{}",S[1])),Ge("Falling back to no-highlight mode for this block.",f)),F?S[1]:"no-highlight"}return y.split(/\s+/).find(F=>p(F)||nt(F))}function _(f,y,S){let F="",P="";typeof y=="object"?(F=f,S=y.ignoreIllegals,P=y.language):(Ft("10.7.0","highlight(lang, code, ...args) has been deprecated."),Ft("10.7.0",`Please use highlight(code, options) instead.
https://github.com/highlightjs/highlight.js/issues/2277`),P=f,F=y),S===void 0&&(S=!0);const Z={code:F,language:P};At("before:highlight",Z);const ct=Z.result?Z.result:C(Z.language,Z.code,S);return ct.code=Z.code,At("after:highlight",ct),ct}function C(f,y,S,F){const P=Object.create(null);function Z(g,v){return g.keywords[v]}function ct(){if(!D.keywords){G.addText(B);return}let g=0;D.keywordPatternRe.lastIndex=0;let v=D.keywordPatternRe.exec(B),A="";for(;v;){A+=B.substring(g,v.index);const L=ot.case_insensitive?v[0].toLowerCase():v[0],J=Z(D,L);if(J){const[o,r]=J;if(G.addText(A),A="",P[L]=(P[L]||0)+1,P[L]<=zs&&(Nt+=r),o.startsWith("_"))A+=v[0];else{const h=ot.classNameAliases[o]||o;st(v[0],h)}}else A+=v[0];g=D.keywordPatternRe.lastIndex,v=D.keywordPatternRe.exec(B)}A+=B.substring(g),G.addText(A)}function bt(){if(B==="")return;let g=null;if(typeof D.subLanguage=="string"){if(!e[D.subLanguage]){G.addText(B);return}g=C(D.subLanguage,B,!0,Zt[D.subLanguage]),Zt[D.subLanguage]=g._top}else g=N(B,D.subLanguage.length?D.subLanguage:null);D.relevance>0&&(Nt+=g.relevance),G.__addSublanguage(g._emitter,g.language)}function K(){D.subLanguage!=null?bt():ct(),B=""}function st(g,v){g!==""&&(G.startScope(v),G.addText(g),G.endScope())}function Lt(g,v){let A=1;const L=v.length-1;for(;A<=L;){if(!g._emit[A]){A++;continue}const J=ot.classNameAliases[g[A]]||g[A],o=v[A];J?st(o,J):(B=o,ct(),B=""),A++}}function qt(g,v){return g.scope&&typeof g.scope=="string"&&G.openNode(ot.classNameAliases[g.scope]||g.scope),g.beginScope&&(g.beginScope._wrap?(st(B,ot.classNameAliases[g.beginScope._wrap]||g.beginScope._wrap),B=""):g.beginScope._multi&&(Lt(g.beginScope,v),B="")),D=Object.create(g,{parent:{value:D}}),D}function yt(g,v,A){let L=as(g.endRe,A);if(L){if(g["on:end"]){const J=new Ie(g);g["on:end"](v,J),J.isMatchIgnored&&(L=!1)}if(L){for(;g.endsParent&&g.parent;)g=g.parent;return g}}if(g.endsWithParent)return yt(g.parent,v,A)}function Kt(g){return D.matcher.regexIndex===0?(B+=g[0],1):(Ot=!0,0)}function Yt(g){const v=g[0],A=g.rule,L=new Ie(A),J=[A.__beforeBegin,A["on:begin"]];for(const o of J)if(o&&(o(g,L),L.isMatchIgnored))return Kt(v);return A.skip?B+=v:(A.excludeBegin&&(B+=v),K(),!A.returnBegin&&!A.excludeBegin&&(B=v)),qt(A,g),A.returnBegin?0:v.length}function de(g){const v=g[0],A=y.substring(g.index),L=yt(D,g,A);if(!L)return ze;const J=D;D.endScope&&D.endScope._wrap?(K(),st(v,D.endScope._wrap)):D.endScope&&D.endScope._multi?(K(),Lt(D.endScope,g)):J.skip?B+=v:(J.returnEnd||J.excludeEnd||(B+=v),K(),J.excludeEnd&&(B=v));do D.scope&&G.closeNode(),!D.skip&&!D.subLanguage&&(Nt+=D.relevance),D=D.parent;while(D!==L.parent);return L.starts&&qt(L.starts,g),J.returnEnd?0:v.length}function ge(){const g=[];for(let v=D;v!==ot;v=v.parent)v.scope&&g.unshift(v.scope);g.forEach(v=>G.openNode(v))}let wt={};function Ht(g,v){const A=v&&v[0];if(B+=g,A==null)return K(),0;if(wt.type==="begin"&&v.type==="end"&&wt.index===v.index&&A===""){if(B+=y.slice(v.index,v.index+1),!i){const L=new Error(`0 width match regex (${f})`);throw L.languageName=f,L.badRule=wt.rule,L}return 1}if(wt=v,v.type==="begin")return Yt(v);if(v.type==="illegal"&&!S){const L=new Error('Illegal lexeme "'+A+'" for mode "'+(D.scope||"<unnamed>")+'"');throw L.mode=D,L}else if(v.type==="end"){const L=de(v);if(L!==ze)return L}if(v.type==="illegal"&&A==="")return 1;if(Ut>1e5&&Ut>v.index*3)throw new Error("potential infinite loop, way more iterations than matches");return B+=A,A.length}const ot=nt(f);if(!ot)throw _t(a.replace("{}",f)),new Error('Unknown language: "'+f+'"');const me=$s(ot);let $t="",D=F||me;const Zt={},G=new c.__emitter(c);ge();let B="",Nt=0,pt=0,Ut=0,Ot=!1;try{if(ot.__emitTokens)ot.__emitTokens(y,G);else{for(D.matcher.considerAll();;){Ut++,Ot?Ot=!1:D.matcher.considerAll(),D.matcher.lastIndex=pt;const g=D.matcher.exec(y);if(!g)break;const v=y.substring(pt,g.index),A=Ht(v,g);pt=g.index+A}Ht(y.substring(pt))}return G.finalize(),$t=G.toHTML(),{language:f,value:$t,relevance:Nt,illegal:!1,_emitter:G,_top:D}}catch(g){if(g.message&&g.message.includes("Illegal"))return{language:f,value:ve(y),illegal:!0,relevance:0,_illegalBy:{message:g.message,index:pt,context:y.slice(pt-100,pt+100),mode:g.mode,resultSoFar:$t},_emitter:G};if(i)return{language:f,value:ve(y),illegal:!1,relevance:0,errorRaised:g,_emitter:G,_top:D};throw g}}function R(f){const y={value:ve(f),illegal:!1,relevance:0,_top:l,_emitter:new c.__emitter(c)};return y._emitter.addText(f),y}function N(f,y){y=y||c.languages||Object.keys(e);const S=R(f),F=y.filter(nt).filter(Wt).map(K=>C(K,f,!1));F.unshift(S);const P=F.sort((K,st)=>{if(K.relevance!==st.relevance)return st.relevance-K.relevance;if(K.language&&st.language){if(nt(K.language).supersetOf===st.language)return 1;if(nt(st.language).supersetOf===K.language)return-1}return 0}),[Z,ct]=P,bt=Z;return bt.secondBest=ct,bt}function I(f,y,S){const F=y&&n[y]||S;f.classList.add("hljs"),f.classList.add(`language-${F}`)}function X(f){let y=null;const S=m(f);if(p(S))return;if(At("before:highlightElement",{el:f,language:S}),f.children.length>0&&(c.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(f)),c.throwUnescapedHTML))throw new Vs("One of your code blocks includes unescaped HTML.",f.innerHTML);y=f;const F=y.textContent,P=S?_(F,{language:S,ignoreIllegals:!0}):N(F);f.innerHTML=P.value,I(f,S,P.language),f.result={language:P.language,re:P.relevance,relevance:P.relevance},P.secondBest&&(f.secondBest={language:P.secondBest.language,relevance:P.secondBest.relevance}),At("after:highlightElement",{el:f,result:P,text:F})}function it(f){c=Ve(c,f)}const x=()=>{q(),Ft("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")};function E(){q(),Ft("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")}let k=!1;function q(){if(document.readyState==="loading"){k=!0;return}document.querySelectorAll(c.cssSelector).forEach(X)}function ut(){k&&q()}typeof window<"u"&&window.addEventListener&&window.addEventListener("DOMContentLoaded",ut,!1);function et(f,y){let S=null;try{S=y(t)}catch(F){if(_t("Language definition for '{}' could not be registered.".replace("{}",f)),i)_t(F);else throw F;S=l}S.name||(S.name=f),e[f]=S,S.rawDefinition=y.bind(null,t),S.aliases&&ht(S.aliases,{languageName:f})}function U(f){delete e[f];for(const y of Object.keys(n))n[y]===f&&delete n[y]}function Ct(){return Object.keys(e)}function nt(f){return f=(f||"").toLowerCase(),e[f]||e[n[f]]}function ht(f,{languageName:y}){typeof f=="string"&&(f=[f]),f.forEach(S=>{n[S.toLowerCase()]=y})}function Wt(f){const y=nt(f);return y&&!y.disableAutodetect}function Xt(f){f["before:highlightBlock"]&&!f["before:highlightElement"]&&(f["before:highlightElement"]=y=>{f["before:highlightBlock"](Object.assign({block:y.el},y))}),f["after:highlightBlock"]&&!f["after:highlightElement"]&&(f["after:highlightElement"]=y=>{f["after:highlightBlock"](Object.assign({block:y.el},y))})}function mt(f){Xt(f),s.push(f)}function fe(f){const y=s.indexOf(f);y!==-1&&s.splice(y,1)}function At(f,y){const S=f;s.forEach(function(F){F[S]&&F[S](y)})}function St(f){return Ft("10.7.0","highlightBlock will be removed entirely in v12.0"),Ft("10.7.0","Please use highlightElement now."),X(f)}Object.assign(t,{highlight:_,highlightAuto:N,highlightAll:q,highlightElement:X,highlightBlock:St,configure:it,initHighlighting:x,initHighlightingOnLoad:E,registerLanguage:et,unregisterLanguage:U,listLanguages:Ct,getLanguage:nt,registerAliases:ht,autoDetection:Wt,inherit:Ve,addPlugin:mt,removePlugin:fe}),t.debugMode=function(){i=!1},t.safeMode=function(){i=!0},t.versionString=Gs,t.regex={concat:Tt,lookahead:cn,either:Le,optional:is,anyNumberOfTimes:rs};for(const f in Qt)typeof Qt[f]=="object"&&on(Qt[f]);return Object.assign(t,Qt),t},Mt=mn({});Mt.newInstance=()=>mn({});var Js=Mt;Mt.HighlightJS=Mt;Mt.default=Mt;const vn=ie(Js);function Ws(t){const e=t.regex,n={},s={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[n]}]};Object.assign(n,{className:"variable",variants:[{begin:e.concat(/\$[\w\d#@][\w\d_]*/,"(?![\\w\\d])(?![$])")},s]});const i={className:"subst",begin:/\$\(/,end:/\)/,contains:[t.BACKSLASH_ESCAPE]},a={begin:/<<-?\s*(?=\w+)/,starts:{contains:[t.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}},l={className:"string",begin:/"/,end:/"/,contains:[t.BACKSLASH_ESCAPE,n,i]};i.contains.push(l);const c={className:"",begin:/\\"/},p={className:"string",begin:/'/,end:/'/},m={begin:/\$?\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},t.NUMBER_MODE,n]},_=["fish","bash","zsh","sh","csh","ksh","tcsh","dash","scsh"],C=t.SHEBANG({binary:`(${_.join("|")})`,relevance:10}),R={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[t.inherit(t.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0},N=["if","then","else","elif","fi","for","while","until","in","do","done","case","esac","function","select"],I=["true","false"],X={match:/(\/[a-z._-]+)+/},it=["break","cd","continue","eval","exec","exit","export","getopts","hash","pwd","readonly","return","shift","test","times","trap","umask","unset"],x=["alias","bind","builtin","caller","command","declare","echo","enable","help","let","local","logout","mapfile","printf","read","readarray","source","type","typeset","ulimit","unalias"],E=["autoload","bg","bindkey","bye","cap","chdir","clone","comparguments","compcall","compctl","compdescribe","compfiles","compgroups","compquote","comptags","comptry","compvalues","dirs","disable","disown","echotc","echoti","emulate","fc","fg","float","functions","getcap","getln","history","integer","jobs","kill","limit","log","noglob","popd","print","pushd","pushln","rehash","sched","setcap","setopt","stat","suspend","ttyctl","unfunction","unhash","unlimit","unsetopt","vared","wait","whence","where","which","zcompile","zformat","zftp","zle","zmodload","zparseopts","zprof","zpty","zregexparse","zsocket","zstyle","ztcp"],k=["chcon","chgrp","chown","chmod","cp","dd","df","dir","dircolors","ln","ls","mkdir","mkfifo","mknod","mktemp","mv","realpath","rm","rmdir","shred","sync","touch","truncate","vdir","b2sum","base32","base64","cat","cksum","comm","csplit","cut","expand","fmt","fold","head","join","md5sum","nl","numfmt","od","paste","ptx","pr","sha1sum","sha224sum","sha256sum","sha384sum","sha512sum","shuf","sort","split","sum","tac","tail","tr","tsort","unexpand","uniq","wc","arch","basename","chroot","date","dirname","du","echo","env","expr","factor","groups","hostid","id","link","logname","nice","nohup","nproc","pathchk","pinky","printenv","printf","pwd","readlink","runcon","seq","sleep","stat","stdbuf","stty","tee","test","timeout","tty","uname","unlink","uptime","users","who","whoami","yes"];return{name:"Bash",aliases:["sh"],keywords:{$pattern:/\b[a-z][a-z0-9._-]+\b/,keyword:N,literal:I,built_in:[...it,...x,"set","shopt",...E,...k]},contains:[C,t.SHEBANG(),R,m,t.HASH_COMMENT_MODE,a,X,l,c,p,n]}}var bn={exports:{}};/*!
 * routie - a tiny hash router
 * v0.3.2
 * http://projects.jga.me/routie
 * copyright Greg Allen 2016
 * MIT License
*/(function(t){var e=function(n,s){var i=[],a={},l="routie",c=n[l],p=function(x,E){this.name=E,this.path=x,this.keys=[],this.fns=[],this.params={},this.regex=m(this.path,this.keys,!1,!1)};p.prototype.addHandler=function(x){this.fns.push(x)},p.prototype.removeHandler=function(x){for(var E=0,k=this.fns.length;E<k;E++){var q=this.fns[E];if(x==q){this.fns.splice(E,1);return}}},p.prototype.run=function(x){for(var E=0,k=this.fns.length;E<k;E++)this.fns[E].apply(this,x)},p.prototype.match=function(x,E){var k=this.regex.exec(x);if(!k)return!1;for(var q=1,ut=k.length;q<ut;++q){var et=this.keys[q-1],U=typeof k[q]=="string"?decodeURIComponent(k[q]):k[q];et&&(this.params[et.name]=U),E.push(U)}return!0},p.prototype.toURL=function(x){var E=this.path;for(var k in x)E=E.replace("/:"+k,"/"+x[k]);if(E=E.replace(/\/:.*\?/g,"/").replace(/\?/g,""),E.indexOf(":")!=-1)throw new Error("missing parameters for url: "+E);return E};var m=function(x,E,k,q){return x instanceof RegExp?x:(x instanceof Array&&(x="("+x.join("|")+")"),x=x.concat(q?"":"/?").replace(/\/\(/g,"(?:/").replace(/\+/g,"__plus__").replace(/(\/)?(\.)?:(\w+)(?:(\(.*?\)))?(\?)?/g,function(ut,et,U,Ct,nt,ht){return E.push({name:Ct,optional:!!ht}),et=et||"",""+(ht?"":et)+"(?:"+(ht?et:"")+(U||"")+(nt||U&&"([^/.]+?)"||"([^/]+?)")+")"+(ht||"")}).replace(/([\/.])/g,"\\$1").replace(/__plus__/g,"(.+)").replace(/\*/g,"(.*)"),new RegExp("^"+x+"$",k?"":"i"))},_=function(x,E){var k=x.split(" "),q=k.length==2?k[0]:null;x=k.length==2?k[1]:k[0],a[x]||(a[x]=new p(x,q),i.push(a[x])),a[x].addHandler(E)},C=function(x,E){if(typeof E=="function")_(x,E),C.reload();else if(typeof x=="object"){for(var k in x)_(k,x[k]);C.reload()}else typeof E>"u"&&C.navigate(x)};C.lookup=function(x,E){for(var k=0,q=i.length;k<q;k++){var ut=i[k];if(ut.name==x)return ut.toURL(E)}},C.remove=function(x,E){var k=a[x];k&&k.removeHandler(E)},C.removeAll=function(){a={},i=[]},C.navigate=function(x,E){E=E||{};var k=E.silent||!1;k&&it(),setTimeout(function(){window.location.hash=x,k&&setTimeout(function(){X()},1)},1)},C.noConflict=function(){return n[l]=c,C};var R=function(){return window.location.hash.substring(1)},N=function(x,E){var k=[];return E.match(x,k)?(E.run(k),!0):!1},I=C.reload=function(){for(var x=R(),E=0,k=i.length;E<k;E++){var q=i[E];if(N(x,q))return}},X=function(){n.addEventListener?n.addEventListener("hashchange",I,!1):n.attachEvent("onhashchange",I)},it=function(){n.removeEventListener?n.removeEventListener("hashchange",I):n.detachEvent("onhashchange",I)};if(X(),s)return C;n[l]=C};t.exports=e(window,!0)})(bn);var Xs=bn.exports;const ae=ie(Xs);var yn={exports:{}};(function(t){(function(){function e(o,r,h){return o.call.apply(o.bind,arguments)}function n(o,r,h){if(!o)throw Error();if(2<arguments.length){var u=Array.prototype.slice.call(arguments,2);return function(){var d=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(d,u),o.apply(r,d)}}return function(){return o.apply(r,arguments)}}function s(o,r,h){return s=Function.prototype.bind&&Function.prototype.bind.toString().indexOf("native code")!=-1?e:n,s.apply(null,arguments)}var i=Date.now||function(){return+new Date};function a(o,r){this.a=o,this.o=r||o,this.c=this.o.document}var l=!!window.FontFace;function c(o,r,h,u){if(r=o.c.createElement(r),h)for(var d in h)h.hasOwnProperty(d)&&(d=="style"?r.style.cssText=h[d]:r.setAttribute(d,h[d]));return u&&r.appendChild(o.c.createTextNode(u)),r}function p(o,r,h){o=o.c.getElementsByTagName(r)[0],o||(o=document.documentElement),o.insertBefore(h,o.lastChild)}function m(o){o.parentNode&&o.parentNode.removeChild(o)}function _(o,r,h){r=r||[],h=h||[];for(var u=o.className.split(/\s+/),d=0;d<r.length;d+=1){for(var w=!1,T=0;T<u.length;T+=1)if(r[d]===u[T]){w=!0;break}w||u.push(r[d])}for(r=[],d=0;d<u.length;d+=1){for(w=!1,T=0;T<h.length;T+=1)if(u[d]===h[T]){w=!0;break}w||r.push(u[d])}o.className=r.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function C(o,r){for(var h=o.className.split(/\s+/),u=0,d=h.length;u<d;u++)if(h[u]==r)return!0;return!1}function R(o){return o.o.location.hostname||o.a.location.hostname}function N(o,r,h){function u(){O&&d&&w&&(O(T),O=null)}r=c(o,"link",{rel:"stylesheet",href:r,media:"all"});var d=!1,w=!0,T=null,O=h||null;l?(r.onload=function(){d=!0,u()},r.onerror=function(){d=!0,T=Error("Stylesheet failed to load"),u()}):setTimeout(function(){d=!0,u()},0),p(o,"head",r)}function I(o,r,h,u){var d=o.c.getElementsByTagName("head")[0];if(d){var w=c(o,"script",{src:r}),T=!1;return w.onload=w.onreadystatechange=function(){T||this.readyState&&this.readyState!="loaded"&&this.readyState!="complete"||(T=!0,h&&h(null),w.onload=w.onreadystatechange=null,w.parentNode.tagName=="HEAD"&&d.removeChild(w))},d.appendChild(w),setTimeout(function(){T||(T=!0,h&&h(Error("Script load timeout")))},u||5e3),w}return null}function X(){this.a=0,this.c=null}function it(o){return o.a++,function(){o.a--,E(o)}}function x(o,r){o.c=r,E(o)}function E(o){o.a==0&&o.c&&(o.c(),o.c=null)}function k(o){this.a=o||"-"}k.prototype.c=function(o){for(var r=[],h=0;h<arguments.length;h++)r.push(arguments[h].replace(/[\W_]+/g,"").toLowerCase());return r.join(this.a)};function q(o,r){this.c=o,this.f=4,this.a="n";var h=(r||"n4").match(/^([nio])([1-9])$/i);h&&(this.a=h[1],this.f=parseInt(h[2],10))}function ut(o){return Ct(o)+" "+(o.f+"00")+" 300px "+et(o.c)}function et(o){var r=[];o=o.split(/,\s*/);for(var h=0;h<o.length;h++){var u=o[h].replace(/['"]/g,"");u.indexOf(" ")!=-1||/^\d/.test(u)?r.push("'"+u+"'"):r.push(u)}return r.join(",")}function U(o){return o.a+o.f}function Ct(o){var r="normal";return o.a==="o"?r="oblique":o.a==="i"&&(r="italic"),r}function nt(o){var r=4,h="n",u=null;return o&&((u=o.match(/(normal|oblique|italic)/i))&&u[1]&&(h=u[1].substr(0,1).toLowerCase()),(u=o.match(/([1-9]00|normal|bold)/i))&&u[1]&&(/bold/i.test(u[1])?r=7:/[1-9]00/.test(u[1])&&(r=parseInt(u[1].substr(0,1),10)))),h+r}function ht(o,r){this.c=o,this.f=o.o.document.documentElement,this.h=r,this.a=new k("-"),this.j=r.events!==!1,this.g=r.classes!==!1}function Wt(o){o.g&&_(o.f,[o.a.c("wf","loading")]),mt(o,"loading")}function Xt(o){if(o.g){var r=C(o.f,o.a.c("wf","active")),h=[],u=[o.a.c("wf","loading")];r||h.push(o.a.c("wf","inactive")),_(o.f,h,u)}mt(o,"inactive")}function mt(o,r,h){o.j&&o.h[r]&&(h?o.h[r](h.c,U(h)):o.h[r]())}function fe(){this.c={}}function At(o,r,h){var u=[],d;for(d in r)if(r.hasOwnProperty(d)){var w=o.c[d];w&&u.push(w(r[d],h))}return u}function St(o,r){this.c=o,this.f=r,this.a=c(this.c,"span",{"aria-hidden":"true"},this.f)}function f(o){p(o.c,"body",o.a)}function y(o){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+et(o.c)+";"+("font-style:"+Ct(o)+";font-weight:"+(o.f+"00")+";")}function S(o,r,h,u,d,w){this.g=o,this.j=r,this.a=u,this.c=h,this.f=d||3e3,this.h=w||void 0}S.prototype.start=function(){var o=this.c.o.document,r=this,h=i(),u=new Promise(function(T,O){function j(){i()-h>=r.f?O():o.fonts.load(ut(r.a),r.h).then(function(H){1<=H.length?T():setTimeout(j,25)},function(){O()})}j()}),d=null,w=new Promise(function(T,O){d=setTimeout(O,r.f)});Promise.race([w,u]).then(function(){d&&(clearTimeout(d),d=null),r.g(r.a)},function(){r.j(r.a)})};function F(o,r,h,u,d,w,T){this.v=o,this.B=r,this.c=h,this.a=u,this.s=T||"BESbswy",this.f={},this.w=d||3e3,this.u=w||null,this.m=this.j=this.h=this.g=null,this.g=new St(this.c,this.s),this.h=new St(this.c,this.s),this.j=new St(this.c,this.s),this.m=new St(this.c,this.s),o=new q(this.a.c+",serif",U(this.a)),o=y(o),this.g.a.style.cssText=o,o=new q(this.a.c+",sans-serif",U(this.a)),o=y(o),this.h.a.style.cssText=o,o=new q("serif",U(this.a)),o=y(o),this.j.a.style.cssText=o,o=new q("sans-serif",U(this.a)),o=y(o),this.m.a.style.cssText=o,f(this.g),f(this.h),f(this.j),f(this.m)}var P={D:"serif",C:"sans-serif"},Z=null;function ct(){if(Z===null){var o=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);Z=!!o&&(536>parseInt(o[1],10)||parseInt(o[1],10)===536&&11>=parseInt(o[2],10))}return Z}F.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.m.a.offsetWidth,this.A=i(),K(this)};function bt(o,r,h){for(var u in P)if(P.hasOwnProperty(u)&&r===o.f[P[u]]&&h===o.f[P[u]])return!0;return!1}function K(o){var r=o.g.a.offsetWidth,h=o.h.a.offsetWidth,u;(u=r===o.f.serif&&h===o.f["sans-serif"])||(u=ct()&&bt(o,r,h)),u?i()-o.A>=o.w?ct()&&bt(o,r,h)&&(o.u===null||o.u.hasOwnProperty(o.a.c))?Lt(o,o.v):Lt(o,o.B):st(o):Lt(o,o.v)}function st(o){setTimeout(s(function(){K(this)},o),50)}function Lt(o,r){setTimeout(s(function(){m(this.g.a),m(this.h.a),m(this.j.a),m(this.m.a),r(this.a)},o),0)}function qt(o,r,h){this.c=o,this.a=r,this.f=0,this.m=this.j=!1,this.s=h}var yt=null;qt.prototype.g=function(o){var r=this.a;r.g&&_(r.f,[r.a.c("wf",o.c,U(o).toString(),"active")],[r.a.c("wf",o.c,U(o).toString(),"loading"),r.a.c("wf",o.c,U(o).toString(),"inactive")]),mt(r,"fontactive",o),this.m=!0,Kt(this)},qt.prototype.h=function(o){var r=this.a;if(r.g){var h=C(r.f,r.a.c("wf",o.c,U(o).toString(),"active")),u=[],d=[r.a.c("wf",o.c,U(o).toString(),"loading")];h||u.push(r.a.c("wf",o.c,U(o).toString(),"inactive")),_(r.f,u,d)}mt(r,"fontinactive",o),Kt(this)};function Kt(o){--o.f==0&&o.j&&(o.m?(o=o.a,o.g&&_(o.f,[o.a.c("wf","active")],[o.a.c("wf","loading"),o.a.c("wf","inactive")]),mt(o,"active")):Xt(o.a))}function Yt(o){this.j=o,this.a=new fe,this.h=0,this.f=this.g=!0}Yt.prototype.load=function(o){this.c=new a(this.j,o.context||this.j),this.g=o.events!==!1,this.f=o.classes!==!1,ge(this,new ht(this.c,o),o)};function de(o,r,h,u,d){var w=--o.h==0;(o.f||o.g)&&setTimeout(function(){var T=d||null,O=u||null||{};if(h.length===0&&w)Xt(r.a);else{r.f+=h.length,w&&(r.j=w);var j,H=[];for(j=0;j<h.length;j++){var $=h[j],Q=O[$.c],at=r.a,Rt=$;if(at.g&&_(at.f,[at.a.c("wf",Rt.c,U(Rt).toString(),"loading")]),mt(at,"fontloading",Rt),at=null,yt===null)if(window.FontFace){var Rt=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),ts=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);yt=Rt?42<parseInt(Rt[1],10):!ts}else yt=!1;yt?at=new S(s(r.g,r),s(r.h,r),r.c,$,r.s,Q):at=new F(s(r.g,r),s(r.h,r),r.c,$,r.s,T,Q),H.push(at)}for(j=0;j<H.length;j++)H[j].start()}},0)}function ge(o,r,h){var d=[],u=h.timeout;Wt(r);var d=At(o.a,h,o.c),w=new qt(o.c,r,u);for(o.h=d.length,r=0,h=d.length;r<h;r++)d[r].load(function(T,O,j){de(o,w,T,O,j)})}function wt(o,r){this.c=o,this.a=r}wt.prototype.load=function(o){function r(){if(w["__mti_fntLst"+u]){var T=w["__mti_fntLst"+u](),O=[],j;if(T)for(var H=0;H<T.length;H++){var $=T[H].fontfamily;T[H].fontStyle!=null&&T[H].fontWeight!=null?(j=T[H].fontStyle+T[H].fontWeight,O.push(new q($,j))):O.push(new q($))}o(O)}else setTimeout(function(){r()},50)}var h=this,u=h.a.projectId,d=h.a.version;if(u){var w=h.c.o;I(this.c,(h.a.api||"https://fast.fonts.net/jsapi")+"/"+u+".js"+(d?"?v="+d:""),function(T){T?o([]):(w["__MonotypeConfiguration__"+u]=function(){return h.a},r())}).id="__MonotypeAPIScript__"+u}else o([])};function Ht(o,r){this.c=o,this.a=r}Ht.prototype.load=function(o){var r,h,u=this.a.urls||[],d=this.a.families||[],w=this.a.testStrings||{},T=new X;for(r=0,h=u.length;r<h;r++)N(this.c,u[r],it(T));var O=[];for(r=0,h=d.length;r<h;r++)if(u=d[r].split(":"),u[1])for(var j=u[1].split(","),H=0;H<j.length;H+=1)O.push(new q(u[0],j[H]));else O.push(new q(u[0]));x(T,function(){o(O,w)})};function ot(o,r){o?this.c=o:this.c=me,this.a=[],this.f=[],this.g=r||""}var me="https://fonts.googleapis.com/css";function $t(o,r){for(var h=r.length,u=0;u<h;u++){var d=r[u].split(":");d.length==3&&o.f.push(d.pop());var w="";d.length==2&&d[1]!=""&&(w=":"),o.a.push(d.join(w))}}function D(o){if(o.a.length==0)throw Error("No fonts to load!");if(o.c.indexOf("kit=")!=-1)return o.c;for(var r=o.a.length,h=[],u=0;u<r;u++)h.push(o.a[u].replace(/ /g,"+"));return r=o.c+"?family="+h.join("%7C"),0<o.f.length&&(r+="&subset="+o.f.join(",")),0<o.g.length&&(r+="&text="+encodeURIComponent(o.g)),r}function Zt(o){this.f=o,this.a=[],this.c={}}var G={latin:"BESbswy","latin-ext":"çöüğş",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},B={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},Nt={i:"i",italic:"i",n:"n",normal:"n"},pt=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;function Ut(o){for(var r=o.f.length,h=0;h<r;h++){var u=o.f[h].split(":"),d=u[0].replace(/\+/g," "),w=["n4"];if(2<=u.length){var T,O=u[1];if(T=[],O)for(var O=O.split(","),j=O.length,H=0;H<j;H++){var $;if($=O[H],$.match(/^[\w-]+$/)){var Q=pt.exec($.toLowerCase());if(Q==null)$="";else{if($=Q[2],$=$==null||$==""?"n":Nt[$],Q=Q[1],Q==null||Q=="")Q="4";else var at=B[Q],Q=at||(isNaN(Q)?"4":Q.substr(0,1));$=[$,Q].join("")}}else $="";$&&T.push($)}0<T.length&&(w=T),u.length==3&&(u=u[2],T=[],u=u?u.split(","):T,0<u.length&&(u=G[u[0]])&&(o.c[d]=u))}for(o.c[d]||(u=G[d])&&(o.c[d]=u),u=0;u<w.length;u+=1)o.a.push(new q(d,w[u]))}}function Ot(o,r){this.c=o,this.a=r}var g={Arimo:!0,Cousine:!0,Tinos:!0};Ot.prototype.load=function(o){var r=new X,h=this.c,u=new ot(this.a.api,this.a.text),d=this.a.families;$t(u,d);var w=new Zt(d);Ut(w),N(h,D(u),it(r)),x(r,function(){o(w.a,w.c,g)})};function v(o,r){this.c=o,this.a=r}v.prototype.load=function(o){var r=this.a.id,h=this.c.o;r?I(this.c,(this.a.api||"https://use.typekit.net")+"/"+r+".js",function(u){if(u)o([]);else if(h.Typekit&&h.Typekit.config&&h.Typekit.config.fn){u=h.Typekit.config.fn;for(var d=[],w=0;w<u.length;w+=2)for(var T=u[w],O=u[w+1],j=0;j<O.length;j++)d.push(new q(T,O[j]));try{h.Typekit.load({events:!1,classes:!1,async:!0})}catch{}o(d)}},2e3):o([])};function A(o,r){this.c=o,this.f=r,this.a=[]}A.prototype.load=function(o){var r=this.f.id,h=this.c.o,u=this;r?(h.__webfontfontdeckmodule__||(h.__webfontfontdeckmodule__={}),h.__webfontfontdeckmodule__[r]=function(d,w){for(var T=0,O=w.fonts.length;T<O;++T){var j=w.fonts[T];u.a.push(new q(j.name,nt("font-weight:"+j.weight+";font-style:"+j.style)))}o(u.a)},I(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+R(this.c)+"/"+r+".js",function(d){d&&o([])})):o([])};var L=new Yt(window);L.a.c.custom=function(o,r){return new Ht(r,o)},L.a.c.fontdeck=function(o,r){return new A(r,o)},L.a.c.monotype=function(o,r){return new wt(r,o)},L.a.c.typekit=function(o,r){return new v(r,o)},L.a.c.google=function(o,r){return new Ot(r,o)};var J={load:s(L.load,L)};t.exports?t.exports=J:(window.WebFont=J,window.WebFontConfig&&L.load(window.WebFontConfig))})()})(yn);var Ks=yn.exports;const Ys=ie(Ks);function wn(t){switch(t._type){case"document":case"block_quote":case"list":case"item":case"paragraph":case"heading":case"emph":case"strong":case"link":case"image":case"custom_inline":case"custom_block":return!0;default:return!1}}var Zs=function(t,e){this.current=t,this.entering=e===!0},Qs=function(){var t=this.current,e=this.entering;if(t===null)return null;var n=wn(t);return e&&n?t._firstChild?(this.current=t._firstChild,this.entering=!0):this.entering=!1:t===this.root?this.current=null:t._next===null?(this.current=t._parent,this.entering=!1):(this.current=t._next,this.entering=!0),{entering:e,node:t}},to=function(t){return{current:t,root:t,entering:!0,next:Qs,resumeAt:Zs}},z=function(t,e){this._type=t,this._parent=null,this._firstChild=null,this._lastChild=null,this._prev=null,this._next=null,this._sourcepos=e,this._lastLineBlank=!1,this._lastLineChecked=!1,this._open=!0,this._string_content=null,this._literal=null,this._listData={},this._info=null,this._destination=null,this._title=null,this._isFenced=!1,this._fenceChar=null,this._fenceLength=0,this._fenceOffset=null,this._level=null,this._onEnter=null,this._onExit=null},W=z.prototype;Object.defineProperty(W,"isContainer",{get:function(){return wn(this)}});Object.defineProperty(W,"type",{get:function(){return this._type}});Object.defineProperty(W,"firstChild",{get:function(){return this._firstChild}});Object.defineProperty(W,"lastChild",{get:function(){return this._lastChild}});Object.defineProperty(W,"next",{get:function(){return this._next}});Object.defineProperty(W,"prev",{get:function(){return this._prev}});Object.defineProperty(W,"parent",{get:function(){return this._parent}});Object.defineProperty(W,"sourcepos",{get:function(){return this._sourcepos}});Object.defineProperty(W,"literal",{get:function(){return this._literal},set:function(t){this._literal=t}});Object.defineProperty(W,"destination",{get:function(){return this._destination},set:function(t){this._destination=t}});Object.defineProperty(W,"title",{get:function(){return this._title},set:function(t){this._title=t}});Object.defineProperty(W,"info",{get:function(){return this._info},set:function(t){this._info=t}});Object.defineProperty(W,"level",{get:function(){return this._level},set:function(t){this._level=t}});Object.defineProperty(W,"listType",{get:function(){return this._listData.type},set:function(t){this._listData.type=t}});Object.defineProperty(W,"listTight",{get:function(){return this._listData.tight},set:function(t){this._listData.tight=t}});Object.defineProperty(W,"listStart",{get:function(){return this._listData.start},set:function(t){this._listData.start=t}});Object.defineProperty(W,"listDelimiter",{get:function(){return this._listData.delimiter},set:function(t){this._listData.delimiter=t}});Object.defineProperty(W,"onEnter",{get:function(){return this._onEnter},set:function(t){this._onEnter=t}});Object.defineProperty(W,"onExit",{get:function(){return this._onExit},set:function(t){this._onExit=t}});z.prototype.appendChild=function(t){t.unlink(),t._parent=this,this._lastChild?(this._lastChild._next=t,t._prev=this._lastChild,this._lastChild=t):(this._firstChild=t,this._lastChild=t)};z.prototype.prependChild=function(t){t.unlink(),t._parent=this,this._firstChild?(this._firstChild._prev=t,t._next=this._firstChild,this._firstChild=t):(this._firstChild=t,this._lastChild=t)};z.prototype.unlink=function(){this._prev?this._prev._next=this._next:this._parent&&(this._parent._firstChild=this._next),this._next?this._next._prev=this._prev:this._parent&&(this._parent._lastChild=this._prev),this._parent=null,this._next=null,this._prev=null};z.prototype.insertAfter=function(t){t.unlink(),t._next=this._next,t._next&&(t._next._prev=t),t._prev=this,this._next=t,t._parent=this._parent,t._next||(t._parent._lastChild=t)};z.prototype.insertBefore=function(t){t.unlink(),t._prev=this._prev,t._prev&&(t._prev._next=t),t._next=this,this._prev=t,t._parent=this._parent,t._prev||(t._parent._firstChild=t)};z.prototype.walker=function(){var t=new to(this);return t};var Je={};function eo(t){var e,n,s=Je[t];if(s)return s;for(s=Je[t]=[],e=0;e<128;e++)n=String.fromCharCode(e),/^[0-9a-z]$/i.test(n)?s.push(n):s.push("%"+("0"+e.toString(16).toUpperCase()).slice(-2));for(e=0;e<t.length;e++)s[t.charCodeAt(e)]=t[e];return s}function le(t,e,n){var s,i,a,l,c,p="";for(typeof e!="string"&&(n=e,e=le.defaultChars),typeof n>"u"&&(n=!0),c=eo(e),s=0,i=t.length;s<i;s++){if(a=t.charCodeAt(s),n&&a===37&&s+2<i&&/^[0-9a-f]{2}$/i.test(t.slice(s+1,s+3))){p+=t.slice(s,s+3),s+=2;continue}if(a<128){p+=c[a];continue}if(a>=55296&&a<=57343){if(a>=55296&&a<=56319&&s+1<i&&(l=t.charCodeAt(s+1),l>=56320&&l<=57343)){p+=encodeURIComponent(t[s]+t[s+1]),s++;continue}p+="%EF%BF%BD";continue}p+=encodeURIComponent(t[s])}return p}le.defaultChars=";/?:@&=+$,-_.!~*'()#";le.componentChars="-_.!~*'()";var no=le;const so=ie(no);var Oe={},dt={};const oo="Á",ro="á",io="Ă",co="ă",ao="∾",lo="∿",uo="∾̳",ho="Â",po="â",fo="´",go="А",mo="а",vo="Æ",bo="æ",yo="⁡",wo="𝔄",_o="𝔞",xo="À",Eo="à",To="ℵ",ko="ℵ",Do="Α",Co="α",Ao="Ā",So="ā",Lo="⨿",qo="&",No="&",Oo="⩕",Ro="⩓",Fo="∧",jo="⩜",Bo="⩘",Mo="⩚",Po="∠",Io="⦤",Ho="∠",$o="⦨",Uo="⦩",Go="⦪",Vo="⦫",zo="⦬",Jo="⦭",Wo="⦮",Xo="⦯",Ko="∡",Yo="∟",Zo="⊾",Qo="⦝",tr="∢",er="Å",nr="⍼",sr="Ą",or="ą",rr="𝔸",ir="𝕒",cr="⩯",ar="≈",lr="⩰",ur="≊",hr="≋",pr="'",fr="⁡",dr="≈",gr="≊",mr="Å",vr="å",br="𝒜",yr="𝒶",wr="≔",_r="*",xr="≈",Er="≍",Tr="Ã",kr="ã",Dr="Ä",Cr="ä",Ar="∳",Sr="⨑",Lr="≌",qr="϶",Nr="‵",Or="∽",Rr="⋍",Fr="∖",jr="⫧",Br="⊽",Mr="⌅",Pr="⌆",Ir="⌅",Hr="⎵",$r="⎶",Ur="≌",Gr="Б",Vr="б",zr="„",Jr="∵",Wr="∵",Xr="∵",Kr="⦰",Yr="϶",Zr="ℬ",Qr="ℬ",ti="Β",ei="β",ni="ℶ",si="≬",oi="𝔅",ri="𝔟",ii="⋂",ci="◯",ai="⋃",li="⨀",ui="⨁",hi="⨂",pi="⨆",fi="★",di="▽",gi="△",mi="⨄",vi="⋁",bi="⋀",yi="⤍",wi="⧫",_i="▪",xi="▴",Ei="▾",Ti="◂",ki="▸",Di="␣",Ci="▒",Ai="░",Si="▓",Li="█",qi="=⃥",Ni="≡⃥",Oi="⫭",Ri="⌐",Fi="𝔹",ji="𝕓",Bi="⊥",Mi="⊥",Pi="⋈",Ii="⧉",Hi="┐",$i="╕",Ui="╖",Gi="╗",Vi="┌",zi="╒",Ji="╓",Wi="╔",Xi="─",Ki="═",Yi="┬",Zi="╤",Qi="╥",tc="╦",ec="┴",nc="╧",sc="╨",oc="╩",rc="⊟",ic="⊞",cc="⊠",ac="┘",lc="╛",uc="╜",hc="╝",pc="└",fc="╘",dc="╙",gc="╚",mc="│",vc="║",bc="┼",yc="╪",wc="╫",_c="╬",xc="┤",Ec="╡",Tc="╢",kc="╣",Dc="├",Cc="╞",Ac="╟",Sc="╠",Lc="‵",qc="˘",Nc="˘",Oc="¦",Rc="𝒷",Fc="ℬ",jc="⁏",Bc="∽",Mc="⋍",Pc="⧅",Ic="\\",Hc="⟈",$c="•",Uc="•",Gc="≎",Vc="⪮",zc="≏",Jc="≎",Wc="≏",Xc="Ć",Kc="ć",Yc="⩄",Zc="⩉",Qc="⩋",ta="∩",ea="⋒",na="⩇",sa="⩀",oa="ⅅ",ra="∩︀",ia="⁁",ca="ˇ",aa="ℭ",la="⩍",ua="Č",ha="č",pa="Ç",fa="ç",da="Ĉ",ga="ĉ",ma="∰",va="⩌",ba="⩐",ya="Ċ",wa="ċ",_a="¸",xa="¸",Ea="⦲",Ta="¢",ka="·",Da="·",Ca="𝔠",Aa="ℭ",Sa="Ч",La="ч",qa="✓",Na="✓",Oa="Χ",Ra="χ",Fa="ˆ",ja="≗",Ba="↺",Ma="↻",Pa="⊛",Ia="⊚",Ha="⊝",$a="⊙",Ua="®",Ga="Ⓢ",Va="⊖",za="⊕",Ja="⊗",Wa="○",Xa="⧃",Ka="≗",Ya="⨐",Za="⫯",Qa="⧂",tl="∲",el="”",nl="’",sl="♣",ol="♣",rl=":",il="∷",cl="⩴",al="≔",ll="≔",ul=",",hl="@",pl="∁",fl="∘",dl="∁",gl="ℂ",ml="≅",vl="⩭",bl="≡",yl="∮",wl="∯",_l="∮",xl="𝕔",El="ℂ",Tl="∐",kl="∐",Dl="©",Cl="©",Al="℗",Sl="∳",Ll="↵",ql="✗",Nl="⨯",Ol="𝒞",Rl="𝒸",Fl="⫏",jl="⫑",Bl="⫐",Ml="⫒",Pl="⋯",Il="⤸",Hl="⤵",$l="⋞",Ul="⋟",Gl="↶",Vl="⤽",zl="⩈",Jl="⩆",Wl="≍",Xl="∪",Kl="⋓",Yl="⩊",Zl="⊍",Ql="⩅",tu="∪︀",eu="↷",nu="⤼",su="⋞",ou="⋟",ru="⋎",iu="⋏",cu="¤",au="↶",lu="↷",uu="⋎",hu="⋏",pu="∲",fu="∱",du="⌭",gu="†",mu="‡",vu="ℸ",bu="↓",yu="↡",wu="⇓",_u="‐",xu="⫤",Eu="⊣",Tu="⤏",ku="˝",Du="Ď",Cu="ď",Au="Д",Su="д",Lu="‡",qu="⇊",Nu="ⅅ",Ou="ⅆ",Ru="⤑",Fu="⩷",ju="°",Bu="∇",Mu="Δ",Pu="δ",Iu="⦱",Hu="⥿",$u="𝔇",Uu="𝔡",Gu="⥥",Vu="⇃",zu="⇂",Ju="´",Wu="˙",Xu="˝",Ku="`",Yu="˜",Zu="⋄",Qu="⋄",th="⋄",eh="♦",nh="♦",sh="¨",oh="ⅆ",rh="ϝ",ih="⋲",ch="÷",ah="÷",lh="⋇",uh="⋇",hh="Ђ",ph="ђ",fh="⌞",dh="⌍",gh="$",mh="𝔻",vh="𝕕",bh="¨",yh="˙",wh="⃜",_h="≐",xh="≑",Eh="≐",Th="∸",kh="∔",Dh="⊡",Ch="⌆",Ah="∯",Sh="¨",Lh="⇓",qh="⇐",Nh="⇔",Oh="⫤",Rh="⟸",Fh="⟺",jh="⟹",Bh="⇒",Mh="⊨",Ph="⇑",Ih="⇕",Hh="∥",$h="⤓",Uh="↓",Gh="↓",Vh="⇓",zh="⇵",Jh="̑",Wh="⇊",Xh="⇃",Kh="⇂",Yh="⥐",Zh="⥞",Qh="⥖",tp="↽",ep="⥟",np="⥗",sp="⇁",op="↧",rp="⊤",ip="⤐",cp="⌟",ap="⌌",lp="𝒟",up="𝒹",hp="Ѕ",pp="ѕ",fp="⧶",dp="Đ",gp="đ",mp="⋱",vp="▿",bp="▾",yp="⇵",wp="⥯",_p="⦦",xp="Џ",Ep="џ",Tp="⟿",kp="É",Dp="é",Cp="⩮",Ap="Ě",Sp="ě",Lp="Ê",qp="ê",Np="≖",Op="≕",Rp="Э",Fp="э",jp="⩷",Bp="Ė",Mp="ė",Pp="≑",Ip="ⅇ",Hp="≒",$p="𝔈",Up="𝔢",Gp="⪚",Vp="È",zp="è",Jp="⪖",Wp="⪘",Xp="⪙",Kp="∈",Yp="⏧",Zp="ℓ",Qp="⪕",tf="⪗",ef="Ē",nf="ē",sf="∅",of="∅",rf="◻",cf="∅",af="▫",lf=" ",uf=" ",hf=" ",pf="Ŋ",ff="ŋ",df=" ",gf="Ę",mf="ę",vf="𝔼",bf="𝕖",yf="⋕",wf="⧣",_f="⩱",xf="ε",Ef="Ε",Tf="ε",kf="ϵ",Df="≖",Cf="≕",Af="≂",Sf="⪖",Lf="⪕",qf="⩵",Nf="=",Of="≂",Rf="≟",Ff="⇌",jf="≡",Bf="⩸",Mf="⧥",Pf="⥱",If="≓",Hf="ℯ",$f="ℰ",Uf="≐",Gf="⩳",Vf="≂",zf="Η",Jf="η",Wf="Ð",Xf="ð",Kf="Ë",Yf="ë",Zf="€",Qf="!",td="∃",ed="∃",nd="ℰ",sd="ⅇ",od="ⅇ",rd="≒",id="Ф",cd="ф",ad="♀",ld="ﬃ",ud="ﬀ",hd="ﬄ",pd="𝔉",fd="𝔣",dd="ﬁ",gd="◼",md="▪",vd="fj",bd="♭",yd="ﬂ",wd="▱",_d="ƒ",xd="𝔽",Ed="𝕗",Td="∀",kd="∀",Dd="⋔",Cd="⫙",Ad="ℱ",Sd="⨍",Ld="½",qd="⅓",Nd="¼",Od="⅕",Rd="⅙",Fd="⅛",jd="⅔",Bd="⅖",Md="¾",Pd="⅗",Id="⅜",Hd="⅘",$d="⅚",Ud="⅝",Gd="⅞",Vd="⁄",zd="⌢",Jd="𝒻",Wd="ℱ",Xd="ǵ",Kd="Γ",Yd="γ",Zd="Ϝ",Qd="ϝ",tg="⪆",eg="Ğ",ng="ğ",sg="Ģ",og="Ĝ",rg="ĝ",ig="Г",cg="г",ag="Ġ",lg="ġ",ug="≥",hg="≧",pg="⪌",fg="⋛",dg="≥",gg="≧",mg="⩾",vg="⪩",bg="⩾",yg="⪀",wg="⪂",_g="⪄",xg="⋛︀",Eg="⪔",Tg="𝔊",kg="𝔤",Dg="≫",Cg="⋙",Ag="⋙",Sg="ℷ",Lg="Ѓ",qg="ѓ",Ng="⪥",Og="≷",Rg="⪒",Fg="⪤",jg="⪊",Bg="⪊",Mg="⪈",Pg="≩",Ig="⪈",Hg="≩",$g="⋧",Ug="𝔾",Gg="𝕘",Vg="`",zg="≥",Jg="⋛",Wg="≧",Xg="⪢",Kg="≷",Yg="⩾",Zg="≳",Qg="𝒢",tm="ℊ",em="≳",nm="⪎",sm="⪐",om="⪧",rm="⩺",im=">",cm=">",am="≫",lm="⋗",um="⦕",hm="⩼",pm="⪆",fm="⥸",dm="⋗",gm="⋛",mm="⪌",vm="≷",bm="≳",ym="≩︀",wm="≩︀",_m="ˇ",xm=" ",Em="½",Tm="ℋ",km="Ъ",Dm="ъ",Cm="⥈",Am="↔",Sm="⇔",Lm="↭",qm="^",Nm="ℏ",Om="Ĥ",Rm="ĥ",Fm="♥",jm="♥",Bm="…",Mm="⊹",Pm="𝔥",Im="ℌ",Hm="ℋ",$m="⤥",Um="⤦",Gm="⇿",Vm="∻",zm="↩",Jm="↪",Wm="𝕙",Xm="ℍ",Km="―",Ym="─",Zm="𝒽",Qm="ℋ",tv="ℏ",ev="Ħ",nv="ħ",sv="≎",ov="≏",rv="⁃",iv="‐",cv="Í",av="í",lv="⁣",uv="Î",hv="î",pv="И",fv="и",dv="İ",gv="Е",mv="е",vv="¡",bv="⇔",yv="𝔦",wv="ℑ",_v="Ì",xv="ì",Ev="ⅈ",Tv="⨌",kv="∭",Dv="⧜",Cv="℩",Av="Ĳ",Sv="ĳ",Lv="Ī",qv="ī",Nv="ℑ",Ov="ⅈ",Rv="ℐ",Fv="ℑ",jv="ı",Bv="ℑ",Mv="⊷",Pv="Ƶ",Iv="⇒",Hv="℅",$v="∞",Uv="⧝",Gv="ı",Vv="⊺",zv="∫",Jv="∬",Wv="ℤ",Xv="∫",Kv="⊺",Yv="⋂",Zv="⨗",Qv="⨼",t0="⁣",e0="⁢",n0="Ё",s0="ё",o0="Į",r0="į",i0="𝕀",c0="𝕚",a0="Ι",l0="ι",u0="⨼",h0="¿",p0="𝒾",f0="ℐ",d0="∈",g0="⋵",m0="⋹",v0="⋴",b0="⋳",y0="∈",w0="⁢",_0="Ĩ",x0="ĩ",E0="І",T0="і",k0="Ï",D0="ï",C0="Ĵ",A0="ĵ",S0="Й",L0="й",q0="𝔍",N0="𝔧",O0="ȷ",R0="𝕁",F0="𝕛",j0="𝒥",B0="𝒿",M0="Ј",P0="ј",I0="Є",H0="є",$0="Κ",U0="κ",G0="ϰ",V0="Ķ",z0="ķ",J0="К",W0="к",X0="𝔎",K0="𝔨",Y0="ĸ",Z0="Х",Q0="х",tb="Ќ",eb="ќ",nb="𝕂",sb="𝕜",ob="𝒦",rb="𝓀",ib="⇚",cb="Ĺ",ab="ĺ",lb="⦴",ub="ℒ",hb="Λ",pb="λ",fb="⟨",db="⟪",gb="⦑",mb="⟨",vb="⪅",bb="ℒ",yb="«",wb="⇤",_b="⤟",xb="←",Eb="↞",Tb="⇐",kb="⤝",Db="↩",Cb="↫",Ab="⤹",Sb="⥳",Lb="↢",qb="⤙",Nb="⤛",Ob="⪫",Rb="⪭",Fb="⪭︀",jb="⤌",Bb="⤎",Mb="❲",Pb="{",Ib="[",Hb="⦋",$b="⦏",Ub="⦍",Gb="Ľ",Vb="ľ",zb="Ļ",Jb="ļ",Wb="⌈",Xb="{",Kb="Л",Yb="л",Zb="⤶",Qb="“",t1="„",e1="⥧",n1="⥋",s1="↲",o1="≤",r1="≦",i1="⟨",c1="⇤",a1="←",l1="←",u1="⇐",h1="⇆",p1="↢",f1="⌈",d1="⟦",g1="⥡",m1="⥙",v1="⇃",b1="⌊",y1="↽",w1="↼",_1="⇇",x1="↔",E1="↔",T1="⇔",k1="⇆",D1="⇋",C1="↭",A1="⥎",S1="↤",L1="⊣",q1="⥚",N1="⋋",O1="⧏",R1="⊲",F1="⊴",j1="⥑",B1="⥠",M1="⥘",P1="↿",I1="⥒",H1="↼",$1="⪋",U1="⋚",G1="≤",V1="≦",z1="⩽",J1="⪨",W1="⩽",X1="⩿",K1="⪁",Y1="⪃",Z1="⋚︀",Q1="⪓",ty="⪅",ey="⋖",ny="⋚",sy="⪋",oy="⋚",ry="≦",iy="≶",cy="≶",ay="⪡",ly="≲",uy="⩽",hy="≲",py="⥼",fy="⌊",dy="𝔏",gy="𝔩",my="≶",vy="⪑",by="⥢",yy="↽",wy="↼",_y="⥪",xy="▄",Ey="Љ",Ty="љ",ky="⇇",Dy="≪",Cy="⋘",Ay="⌞",Sy="⇚",Ly="⥫",qy="◺",Ny="Ŀ",Oy="ŀ",Ry="⎰",Fy="⎰",jy="⪉",By="⪉",My="⪇",Py="≨",Iy="⪇",Hy="≨",$y="⋦",Uy="⟬",Gy="⇽",Vy="⟦",zy="⟵",Jy="⟵",Wy="⟸",Xy="⟷",Ky="⟷",Yy="⟺",Zy="⟼",Qy="⟶",tw="⟶",ew="⟹",nw="↫",sw="↬",ow="⦅",rw="𝕃",iw="𝕝",cw="⨭",aw="⨴",lw="∗",uw="_",hw="↙",pw="↘",fw="◊",dw="◊",gw="⧫",mw="(",vw="⦓",bw="⇆",yw="⌟",ww="⇋",_w="⥭",xw="‎",Ew="⊿",Tw="‹",kw="𝓁",Dw="ℒ",Cw="↰",Aw="↰",Sw="≲",Lw="⪍",qw="⪏",Nw="[",Ow="‘",Rw="‚",Fw="Ł",jw="ł",Bw="⪦",Mw="⩹",Pw="<",Iw="<",Hw="≪",$w="⋖",Uw="⋋",Gw="⋉",Vw="⥶",zw="⩻",Jw="◃",Ww="⊴",Xw="◂",Kw="⦖",Yw="⥊",Zw="⥦",Qw="≨︀",t_="≨︀",e_="¯",n_="♂",s_="✠",o_="✠",r_="↦",i_="↦",c_="↧",a_="↤",l_="↥",u_="▮",h_="⨩",p_="М",f_="м",d_="—",g_="∺",m_="∡",v_=" ",b_="ℳ",y_="𝔐",w_="𝔪",__="℧",x_="µ",E_="*",T_="⫰",k_="∣",D_="·",C_="⊟",A_="−",S_="∸",L_="⨪",q_="∓",N_="⫛",O_="…",R_="∓",F_="⊧",j_="𝕄",B_="𝕞",M_="∓",P_="𝓂",I_="ℳ",H_="∾",$_="Μ",U_="μ",G_="⊸",V_="⊸",z_="∇",J_="Ń",W_="ń",X_="∠⃒",K_="≉",Y_="⩰̸",Z_="≋̸",Q_="ŉ",tx="≉",ex="♮",nx="ℕ",sx="♮",ox=" ",rx="≎̸",ix="≏̸",cx="⩃",ax="Ň",lx="ň",ux="Ņ",hx="ņ",px="≇",fx="⩭̸",dx="⩂",gx="Н",mx="н",vx="–",bx="⤤",yx="↗",wx="⇗",_x="↗",xx="≠",Ex="≐̸",Tx="​",kx="​",Dx="​",Cx="​",Ax="≢",Sx="⤨",Lx="≂̸",qx="≫",Nx="≪",Ox=`
`,Rx="∄",Fx="∄",jx="𝔑",Bx="𝔫",Mx="≧̸",Px="≱",Ix="≱",Hx="≧̸",$x="⩾̸",Ux="⩾̸",Gx="⋙̸",Vx="≵",zx="≫⃒",Jx="≯",Wx="≯",Xx="≫̸",Kx="↮",Yx="⇎",Zx="⫲",Qx="∋",tE="⋼",eE="⋺",nE="∋",sE="Њ",oE="њ",rE="↚",iE="⇍",cE="‥",aE="≦̸",lE="≰",uE="↚",hE="⇍",pE="↮",fE="⇎",dE="≰",gE="≦̸",mE="⩽̸",vE="⩽̸",bE="≮",yE="⋘̸",wE="≴",_E="≪⃒",xE="≮",EE="⋪",TE="⋬",kE="≪̸",DE="∤",CE="⁠",AE=" ",SE="𝕟",LE="ℕ",qE="⫬",NE="¬",OE="≢",RE="≭",FE="∦",jE="∉",BE="≠",ME="≂̸",PE="∄",IE="≯",HE="≱",$E="≧̸",UE="≫̸",GE="≹",VE="⩾̸",zE="≵",JE="≎̸",WE="≏̸",XE="∉",KE="⋵̸",YE="⋹̸",ZE="∉",QE="⋷",tT="⋶",eT="⧏̸",nT="⋪",sT="⋬",oT="≮",rT="≰",iT="≸",cT="≪̸",aT="⩽̸",lT="≴",uT="⪢̸",hT="⪡̸",pT="∌",fT="∌",dT="⋾",gT="⋽",mT="⊀",vT="⪯̸",bT="⋠",yT="∌",wT="⧐̸",_T="⋫",xT="⋭",ET="⊏̸",TT="⋢",kT="⊐̸",DT="⋣",CT="⊂⃒",AT="⊈",ST="⊁",LT="⪰̸",qT="⋡",NT="≿̸",OT="⊃⃒",RT="⊉",FT="≁",jT="≄",BT="≇",MT="≉",PT="∤",IT="∦",HT="∦",$T="⫽⃥",UT="∂̸",GT="⨔",VT="⊀",zT="⋠",JT="⊀",WT="⪯̸",XT="⪯̸",KT="⤳̸",YT="↛",ZT="⇏",QT="↝̸",t2="↛",e2="⇏",n2="⋫",s2="⋭",o2="⊁",r2="⋡",i2="⪰̸",c2="𝒩",a2="𝓃",l2="∤",u2="∦",h2="≁",p2="≄",f2="≄",d2="∤",g2="∦",m2="⋢",v2="⋣",b2="⊄",y2="⫅̸",w2="⊈",_2="⊂⃒",x2="⊈",E2="⫅̸",T2="⊁",k2="⪰̸",D2="⊅",C2="⫆̸",A2="⊉",S2="⊃⃒",L2="⊉",q2="⫆̸",N2="≹",O2="Ñ",R2="ñ",F2="≸",j2="⋪",B2="⋬",M2="⋫",P2="⋭",I2="Ν",H2="ν",$2="#",U2="№",G2=" ",V2="≍⃒",z2="⊬",J2="⊭",W2="⊮",X2="⊯",K2="≥⃒",Y2=">⃒",Z2="⤄",Q2="⧞",tk="⤂",ek="≤⃒",nk="<⃒",sk="⊴⃒",ok="⤃",rk="⊵⃒",ik="∼⃒",ck="⤣",ak="↖",lk="⇖",uk="↖",hk="⤧",pk="Ó",fk="ó",dk="⊛",gk="Ô",mk="ô",vk="⊚",bk="О",yk="о",wk="⊝",_k="Ő",xk="ő",Ek="⨸",Tk="⊙",kk="⦼",Dk="Œ",Ck="œ",Ak="⦿",Sk="𝔒",Lk="𝔬",qk="˛",Nk="Ò",Ok="ò",Rk="⧁",Fk="⦵",jk="Ω",Bk="∮",Mk="↺",Pk="⦾",Ik="⦻",Hk="‾",$k="⧀",Uk="Ō",Gk="ō",Vk="Ω",zk="ω",Jk="Ο",Wk="ο",Xk="⦶",Kk="⊖",Yk="𝕆",Zk="𝕠",Qk="⦷",tD="“",eD="‘",nD="⦹",sD="⊕",oD="↻",rD="⩔",iD="∨",cD="⩝",aD="ℴ",lD="ℴ",uD="ª",hD="º",pD="⊶",fD="⩖",dD="⩗",gD="⩛",mD="Ⓢ",vD="𝒪",bD="ℴ",yD="Ø",wD="ø",_D="⊘",xD="Õ",ED="õ",TD="⨶",kD="⨷",DD="⊗",CD="Ö",AD="ö",SD="⌽",LD="‾",qD="⏞",ND="⎴",OD="⏜",RD="¶",FD="∥",jD="∥",BD="⫳",MD="⫽",PD="∂",ID="∂",HD="П",$D="п",UD="%",GD=".",VD="‰",zD="⊥",JD="‱",WD="𝔓",XD="𝔭",KD="Φ",YD="φ",ZD="ϕ",QD="ℳ",tC="☎",eC="Π",nC="π",sC="⋔",oC="ϖ",rC="ℏ",iC="ℎ",cC="ℏ",aC="⨣",lC="⊞",uC="⨢",hC="+",pC="∔",fC="⨥",dC="⩲",gC="±",mC="±",vC="⨦",bC="⨧",yC="±",wC="ℌ",_C="⨕",xC="𝕡",EC="ℙ",TC="£",kC="⪷",DC="⪻",CC="≺",AC="≼",SC="⪷",LC="≺",qC="≼",NC="≺",OC="⪯",RC="≼",FC="≾",jC="⪯",BC="⪹",MC="⪵",PC="⋨",IC="⪯",HC="⪳",$C="≾",UC="′",GC="″",VC="ℙ",zC="⪹",JC="⪵",WC="⋨",XC="∏",KC="∏",YC="⌮",ZC="⌒",QC="⌓",tA="∝",eA="∝",nA="∷",sA="∝",oA="≾",rA="⊰",iA="𝒫",cA="𝓅",aA="Ψ",lA="ψ",uA=" ",hA="𝔔",pA="𝔮",fA="⨌",dA="𝕢",gA="ℚ",mA="⁗",vA="𝒬",bA="𝓆",yA="ℍ",wA="⨖",_A="?",xA="≟",EA='"',TA='"',kA="⇛",DA="∽̱",CA="Ŕ",AA="ŕ",SA="√",LA="⦳",qA="⟩",NA="⟫",OA="⦒",RA="⦥",FA="⟩",jA="»",BA="⥵",MA="⇥",PA="⤠",IA="⤳",HA="→",$A="↠",UA="⇒",GA="⤞",VA="↪",zA="↬",JA="⥅",WA="⥴",XA="⤖",KA="↣",YA="↝",ZA="⤚",QA="⤜",tS="∶",eS="ℚ",nS="⤍",sS="⤏",oS="⤐",rS="❳",iS="}",cS="]",aS="⦌",lS="⦎",uS="⦐",hS="Ř",pS="ř",fS="Ŗ",dS="ŗ",gS="⌉",mS="}",vS="Р",bS="р",yS="⤷",wS="⥩",_S="”",xS="”",ES="↳",TS="ℜ",kS="ℛ",DS="ℜ",CS="ℝ",AS="ℜ",SS="▭",LS="®",qS="®",NS="∋",OS="⇋",RS="⥯",FS="⥽",jS="⌋",BS="𝔯",MS="ℜ",PS="⥤",IS="⇁",HS="⇀",$S="⥬",US="Ρ",GS="ρ",VS="ϱ",zS="⟩",JS="⇥",WS="→",XS="→",KS="⇒",YS="⇄",ZS="↣",QS="⌉",tL="⟧",eL="⥝",nL="⥕",sL="⇂",oL="⌋",rL="⇁",iL="⇀",cL="⇄",aL="⇌",lL="⇉",uL="↝",hL="↦",pL="⊢",fL="⥛",dL="⋌",gL="⧐",mL="⊳",vL="⊵",bL="⥏",yL="⥜",wL="⥔",_L="↾",xL="⥓",EL="⇀",TL="˚",kL="≓",DL="⇄",CL="⇌",AL="‏",SL="⎱",LL="⎱",qL="⫮",NL="⟭",OL="⇾",RL="⟧",FL="⦆",jL="𝕣",BL="ℝ",ML="⨮",PL="⨵",IL="⥰",HL=")",$L="⦔",UL="⨒",GL="⇉",VL="⇛",zL="›",JL="𝓇",WL="ℛ",XL="↱",KL="↱",YL="]",ZL="’",QL="’",tq="⋌",eq="⋊",nq="▹",sq="⊵",oq="▸",rq="⧎",iq="⧴",cq="⥨",aq="℞",lq="Ś",uq="ś",hq="‚",pq="⪸",fq="Š",dq="š",gq="⪼",mq="≻",vq="≽",bq="⪰",yq="⪴",wq="Ş",_q="ş",xq="Ŝ",Eq="ŝ",Tq="⪺",kq="⪶",Dq="⋩",Cq="⨓",Aq="≿",Sq="С",Lq="с",qq="⊡",Nq="⋅",Oq="⩦",Rq="⤥",Fq="↘",jq="⇘",Bq="↘",Mq="§",Pq=";",Iq="⤩",Hq="∖",$q="∖",Uq="✶",Gq="𝔖",Vq="𝔰",zq="⌢",Jq="♯",Wq="Щ",Xq="щ",Kq="Ш",Yq="ш",Zq="↓",Qq="←",tN="∣",eN="∥",nN="→",sN="↑",oN="­",rN="Σ",iN="σ",cN="ς",aN="ς",lN="∼",uN="⩪",hN="≃",pN="≃",fN="⪞",dN="⪠",gN="⪝",mN="⪟",vN="≆",bN="⨤",yN="⥲",wN="←",_N="∘",xN="∖",EN="⨳",TN="⧤",kN="∣",DN="⌣",CN="⪪",AN="⪬",SN="⪬︀",LN="Ь",qN="ь",NN="⌿",ON="⧄",RN="/",FN="𝕊",jN="𝕤",BN="♠",MN="♠",PN="∥",IN="⊓",HN="⊓︀",$N="⊔",UN="⊔︀",GN="√",VN="⊏",zN="⊑",JN="⊏",WN="⊑",XN="⊐",KN="⊒",YN="⊐",ZN="⊒",QN="□",tO="□",eO="⊓",nO="⊏",sO="⊑",oO="⊐",rO="⊒",iO="⊔",cO="▪",aO="□",lO="▪",uO="→",hO="𝒮",pO="𝓈",fO="∖",dO="⌣",gO="⋆",mO="⋆",vO="☆",bO="★",yO="ϵ",wO="ϕ",_O="¯",xO="⊂",EO="⋐",TO="⪽",kO="⫅",DO="⊆",CO="⫃",AO="⫁",SO="⫋",LO="⊊",qO="⪿",NO="⥹",OO="⊂",RO="⋐",FO="⊆",jO="⫅",BO="⊆",MO="⊊",PO="⫋",IO="⫇",HO="⫕",$O="⫓",UO="⪸",GO="≻",VO="≽",zO="≻",JO="⪰",WO="≽",XO="≿",KO="⪰",YO="⪺",ZO="⪶",QO="⋩",tR="≿",eR="∋",nR="∑",sR="∑",oR="♪",rR="¹",iR="²",cR="³",aR="⊃",lR="⋑",uR="⪾",hR="⫘",pR="⫆",fR="⊇",dR="⫄",gR="⊃",mR="⊇",vR="⟉",bR="⫗",yR="⥻",wR="⫂",_R="⫌",xR="⊋",ER="⫀",TR="⊃",kR="⋑",DR="⊇",CR="⫆",AR="⊋",SR="⫌",LR="⫈",qR="⫔",NR="⫖",OR="⤦",RR="↙",FR="⇙",jR="↙",BR="⤪",MR="ß",PR="	",IR="⌖",HR="Τ",$R="τ",UR="⎴",GR="Ť",VR="ť",zR="Ţ",JR="ţ",WR="Т",XR="т",KR="⃛",YR="⌕",ZR="𝔗",QR="𝔱",t3="∴",e3="∴",n3="∴",s3="Θ",o3="θ",r3="ϑ",i3="ϑ",c3="≈",a3="∼",l3="  ",u3=" ",h3=" ",p3="≈",f3="∼",d3="Þ",g3="þ",m3="˜",v3="∼",b3="≃",y3="≅",w3="≈",_3="⨱",x3="⊠",E3="×",T3="⨰",k3="∭",D3="⤨",C3="⌶",A3="⫱",S3="⊤",L3="𝕋",q3="𝕥",N3="⫚",O3="⤩",R3="‴",F3="™",j3="™",B3="▵",M3="▿",P3="◃",I3="⊴",H3="≜",$3="▹",U3="⊵",G3="◬",V3="≜",z3="⨺",J3="⃛",W3="⨹",X3="⧍",K3="⨻",Y3="⏢",Z3="𝒯",Q3="𝓉",t4="Ц",e4="ц",n4="Ћ",s4="ћ",o4="Ŧ",r4="ŧ",i4="≬",c4="↞",a4="↠",l4="Ú",u4="ú",h4="↑",p4="↟",f4="⇑",d4="⥉",g4="Ў",m4="ў",v4="Ŭ",b4="ŭ",y4="Û",w4="û",_4="У",x4="у",E4="⇅",T4="Ű",k4="ű",D4="⥮",C4="⥾",A4="𝔘",S4="𝔲",L4="Ù",q4="ù",N4="⥣",O4="↿",R4="↾",F4="▀",j4="⌜",B4="⌜",M4="⌏",P4="◸",I4="Ū",H4="ū",$4="¨",U4="_",G4="⏟",V4="⎵",z4="⏝",J4="⋃",W4="⊎",X4="Ų",K4="ų",Y4="𝕌",Z4="𝕦",Q4="⤒",tF="↑",eF="↑",nF="⇑",sF="⇅",oF="↕",rF="↕",iF="⇕",cF="⥮",aF="↿",lF="↾",uF="⊎",hF="↖",pF="↗",fF="υ",dF="ϒ",gF="ϒ",mF="Υ",vF="υ",bF="↥",yF="⊥",wF="⇈",_F="⌝",xF="⌝",EF="⌎",TF="Ů",kF="ů",DF="◹",CF="𝒰",AF="𝓊",SF="⋰",LF="Ũ",qF="ũ",NF="▵",OF="▴",RF="⇈",FF="Ü",jF="ü",BF="⦧",MF="⦜",PF="ϵ",IF="ϰ",HF="∅",$F="ϕ",UF="ϖ",GF="∝",VF="↕",zF="⇕",JF="ϱ",WF="ς",XF="⊊︀",KF="⫋︀",YF="⊋︀",ZF="⫌︀",QF="ϑ",tj="⊲",ej="⊳",nj="⫨",sj="⫫",oj="⫩",rj="В",ij="в",cj="⊢",aj="⊨",lj="⊩",uj="⊫",hj="⫦",pj="⊻",fj="∨",dj="⋁",gj="≚",mj="⋮",vj="|",bj="‖",yj="|",wj="‖",_j="∣",xj="|",Ej="❘",Tj="≀",kj=" ",Dj="𝔙",Cj="𝔳",Aj="⊲",Sj="⊂⃒",Lj="⊃⃒",qj="𝕍",Nj="𝕧",Oj="∝",Rj="⊳",Fj="𝒱",jj="𝓋",Bj="⫋︀",Mj="⊊︀",Pj="⫌︀",Ij="⊋︀",Hj="⊪",$j="⦚",Uj="Ŵ",Gj="ŵ",Vj="⩟",zj="∧",Jj="⋀",Wj="≙",Xj="℘",Kj="𝔚",Yj="𝔴",Zj="𝕎",Qj="𝕨",tB="℘",eB="≀",nB="≀",sB="𝒲",oB="𝓌",rB="⋂",iB="◯",cB="⋃",aB="▽",lB="𝔛",uB="𝔵",hB="⟷",pB="⟺",fB="Ξ",dB="ξ",gB="⟵",mB="⟸",vB="⟼",bB="⋻",yB="⨀",wB="𝕏",_B="𝕩",xB="⨁",EB="⨂",TB="⟶",kB="⟹",DB="𝒳",CB="𝓍",AB="⨆",SB="⨄",LB="△",qB="⋁",NB="⋀",OB="Ý",RB="ý",FB="Я",jB="я",BB="Ŷ",MB="ŷ",PB="Ы",IB="ы",HB="¥",$B="𝔜",UB="𝔶",GB="Ї",VB="ї",zB="𝕐",JB="𝕪",WB="𝒴",XB="𝓎",KB="Ю",YB="ю",ZB="ÿ",QB="Ÿ",tM="Ź",eM="ź",nM="Ž",sM="ž",oM="З",rM="з",iM="Ż",cM="ż",aM="ℨ",lM="​",uM="Ζ",hM="ζ",pM="𝔷",fM="ℨ",dM="Ж",gM="ж",mM="⇝",vM="𝕫",bM="ℤ",yM="𝒵",wM="𝓏",_M="‍",xM="‌",_n={Aacute:oo,aacute:ro,Abreve:io,abreve:co,ac:ao,acd:lo,acE:uo,Acirc:ho,acirc:po,acute:fo,Acy:go,acy:mo,AElig:vo,aelig:bo,af:yo,Afr:wo,afr:_o,Agrave:xo,agrave:Eo,alefsym:To,aleph:ko,Alpha:Do,alpha:Co,Amacr:Ao,amacr:So,amalg:Lo,amp:qo,AMP:No,andand:Oo,And:Ro,and:Fo,andd:jo,andslope:Bo,andv:Mo,ang:Po,ange:Io,angle:Ho,angmsdaa:$o,angmsdab:Uo,angmsdac:Go,angmsdad:Vo,angmsdae:zo,angmsdaf:Jo,angmsdag:Wo,angmsdah:Xo,angmsd:Ko,angrt:Yo,angrtvb:Zo,angrtvbd:Qo,angsph:tr,angst:er,angzarr:nr,Aogon:sr,aogon:or,Aopf:rr,aopf:ir,apacir:cr,ap:ar,apE:lr,ape:ur,apid:hr,apos:pr,ApplyFunction:fr,approx:dr,approxeq:gr,Aring:mr,aring:vr,Ascr:br,ascr:yr,Assign:wr,ast:_r,asymp:xr,asympeq:Er,Atilde:Tr,atilde:kr,Auml:Dr,auml:Cr,awconint:Ar,awint:Sr,backcong:Lr,backepsilon:qr,backprime:Nr,backsim:Or,backsimeq:Rr,Backslash:Fr,Barv:jr,barvee:Br,barwed:Mr,Barwed:Pr,barwedge:Ir,bbrk:Hr,bbrktbrk:$r,bcong:Ur,Bcy:Gr,bcy:Vr,bdquo:zr,becaus:Jr,because:Wr,Because:Xr,bemptyv:Kr,bepsi:Yr,bernou:Zr,Bernoullis:Qr,Beta:ti,beta:ei,beth:ni,between:si,Bfr:oi,bfr:ri,bigcap:ii,bigcirc:ci,bigcup:ai,bigodot:li,bigoplus:ui,bigotimes:hi,bigsqcup:pi,bigstar:fi,bigtriangledown:di,bigtriangleup:gi,biguplus:mi,bigvee:vi,bigwedge:bi,bkarow:yi,blacklozenge:wi,blacksquare:_i,blacktriangle:xi,blacktriangledown:Ei,blacktriangleleft:Ti,blacktriangleright:ki,blank:Di,blk12:Ci,blk14:Ai,blk34:Si,block:Li,bne:qi,bnequiv:Ni,bNot:Oi,bnot:Ri,Bopf:Fi,bopf:ji,bot:Bi,bottom:Mi,bowtie:Pi,boxbox:Ii,boxdl:Hi,boxdL:$i,boxDl:Ui,boxDL:Gi,boxdr:Vi,boxdR:zi,boxDr:Ji,boxDR:Wi,boxh:Xi,boxH:Ki,boxhd:Yi,boxHd:Zi,boxhD:Qi,boxHD:tc,boxhu:ec,boxHu:nc,boxhU:sc,boxHU:oc,boxminus:rc,boxplus:ic,boxtimes:cc,boxul:ac,boxuL:lc,boxUl:uc,boxUL:hc,boxur:pc,boxuR:fc,boxUr:dc,boxUR:gc,boxv:mc,boxV:vc,boxvh:bc,boxvH:yc,boxVh:wc,boxVH:_c,boxvl:xc,boxvL:Ec,boxVl:Tc,boxVL:kc,boxvr:Dc,boxvR:Cc,boxVr:Ac,boxVR:Sc,bprime:Lc,breve:qc,Breve:Nc,brvbar:Oc,bscr:Rc,Bscr:Fc,bsemi:jc,bsim:Bc,bsime:Mc,bsolb:Pc,bsol:Ic,bsolhsub:Hc,bull:$c,bullet:Uc,bump:Gc,bumpE:Vc,bumpe:zc,Bumpeq:Jc,bumpeq:Wc,Cacute:Xc,cacute:Kc,capand:Yc,capbrcup:Zc,capcap:Qc,cap:ta,Cap:ea,capcup:na,capdot:sa,CapitalDifferentialD:oa,caps:ra,caret:ia,caron:ca,Cayleys:aa,ccaps:la,Ccaron:ua,ccaron:ha,Ccedil:pa,ccedil:fa,Ccirc:da,ccirc:ga,Cconint:ma,ccups:va,ccupssm:ba,Cdot:ya,cdot:wa,cedil:_a,Cedilla:xa,cemptyv:Ea,cent:Ta,centerdot:ka,CenterDot:Da,cfr:Ca,Cfr:Aa,CHcy:Sa,chcy:La,check:qa,checkmark:Na,Chi:Oa,chi:Ra,circ:Fa,circeq:ja,circlearrowleft:Ba,circlearrowright:Ma,circledast:Pa,circledcirc:Ia,circleddash:Ha,CircleDot:$a,circledR:Ua,circledS:Ga,CircleMinus:Va,CirclePlus:za,CircleTimes:Ja,cir:Wa,cirE:Xa,cire:Ka,cirfnint:Ya,cirmid:Za,cirscir:Qa,ClockwiseContourIntegral:tl,CloseCurlyDoubleQuote:el,CloseCurlyQuote:nl,clubs:sl,clubsuit:ol,colon:rl,Colon:il,Colone:cl,colone:al,coloneq:ll,comma:ul,commat:hl,comp:pl,compfn:fl,complement:dl,complexes:gl,cong:ml,congdot:vl,Congruent:bl,conint:yl,Conint:wl,ContourIntegral:_l,copf:xl,Copf:El,coprod:Tl,Coproduct:kl,copy:Dl,COPY:Cl,copysr:Al,CounterClockwiseContourIntegral:Sl,crarr:Ll,cross:ql,Cross:Nl,Cscr:Ol,cscr:Rl,csub:Fl,csube:jl,csup:Bl,csupe:Ml,ctdot:Pl,cudarrl:Il,cudarrr:Hl,cuepr:$l,cuesc:Ul,cularr:Gl,cularrp:Vl,cupbrcap:zl,cupcap:Jl,CupCap:Wl,cup:Xl,Cup:Kl,cupcup:Yl,cupdot:Zl,cupor:Ql,cups:tu,curarr:eu,curarrm:nu,curlyeqprec:su,curlyeqsucc:ou,curlyvee:ru,curlywedge:iu,curren:cu,curvearrowleft:au,curvearrowright:lu,cuvee:uu,cuwed:hu,cwconint:pu,cwint:fu,cylcty:du,dagger:gu,Dagger:mu,daleth:vu,darr:bu,Darr:yu,dArr:wu,dash:_u,Dashv:xu,dashv:Eu,dbkarow:Tu,dblac:ku,Dcaron:Du,dcaron:Cu,Dcy:Au,dcy:Su,ddagger:Lu,ddarr:qu,DD:Nu,dd:Ou,DDotrahd:Ru,ddotseq:Fu,deg:ju,Del:Bu,Delta:Mu,delta:Pu,demptyv:Iu,dfisht:Hu,Dfr:$u,dfr:Uu,dHar:Gu,dharl:Vu,dharr:zu,DiacriticalAcute:Ju,DiacriticalDot:Wu,DiacriticalDoubleAcute:Xu,DiacriticalGrave:Ku,DiacriticalTilde:Yu,diam:Zu,diamond:Qu,Diamond:th,diamondsuit:eh,diams:nh,die:sh,DifferentialD:oh,digamma:rh,disin:ih,div:ch,divide:ah,divideontimes:lh,divonx:uh,DJcy:hh,djcy:ph,dlcorn:fh,dlcrop:dh,dollar:gh,Dopf:mh,dopf:vh,Dot:bh,dot:yh,DotDot:wh,doteq:_h,doteqdot:xh,DotEqual:Eh,dotminus:Th,dotplus:kh,dotsquare:Dh,doublebarwedge:Ch,DoubleContourIntegral:Ah,DoubleDot:Sh,DoubleDownArrow:Lh,DoubleLeftArrow:qh,DoubleLeftRightArrow:Nh,DoubleLeftTee:Oh,DoubleLongLeftArrow:Rh,DoubleLongLeftRightArrow:Fh,DoubleLongRightArrow:jh,DoubleRightArrow:Bh,DoubleRightTee:Mh,DoubleUpArrow:Ph,DoubleUpDownArrow:Ih,DoubleVerticalBar:Hh,DownArrowBar:$h,downarrow:Uh,DownArrow:Gh,Downarrow:Vh,DownArrowUpArrow:zh,DownBreve:Jh,downdownarrows:Wh,downharpoonleft:Xh,downharpoonright:Kh,DownLeftRightVector:Yh,DownLeftTeeVector:Zh,DownLeftVectorBar:Qh,DownLeftVector:tp,DownRightTeeVector:ep,DownRightVectorBar:np,DownRightVector:sp,DownTeeArrow:op,DownTee:rp,drbkarow:ip,drcorn:cp,drcrop:ap,Dscr:lp,dscr:up,DScy:hp,dscy:pp,dsol:fp,Dstrok:dp,dstrok:gp,dtdot:mp,dtri:vp,dtrif:bp,duarr:yp,duhar:wp,dwangle:_p,DZcy:xp,dzcy:Ep,dzigrarr:Tp,Eacute:kp,eacute:Dp,easter:Cp,Ecaron:Ap,ecaron:Sp,Ecirc:Lp,ecirc:qp,ecir:Np,ecolon:Op,Ecy:Rp,ecy:Fp,eDDot:jp,Edot:Bp,edot:Mp,eDot:Pp,ee:Ip,efDot:Hp,Efr:$p,efr:Up,eg:Gp,Egrave:Vp,egrave:zp,egs:Jp,egsdot:Wp,el:Xp,Element:Kp,elinters:Yp,ell:Zp,els:Qp,elsdot:tf,Emacr:ef,emacr:nf,empty:sf,emptyset:of,EmptySmallSquare:rf,emptyv:cf,EmptyVerySmallSquare:af,emsp13:lf,emsp14:uf,emsp:hf,ENG:pf,eng:ff,ensp:df,Eogon:gf,eogon:mf,Eopf:vf,eopf:bf,epar:yf,eparsl:wf,eplus:_f,epsi:xf,Epsilon:Ef,epsilon:Tf,epsiv:kf,eqcirc:Df,eqcolon:Cf,eqsim:Af,eqslantgtr:Sf,eqslantless:Lf,Equal:qf,equals:Nf,EqualTilde:Of,equest:Rf,Equilibrium:Ff,equiv:jf,equivDD:Bf,eqvparsl:Mf,erarr:Pf,erDot:If,escr:Hf,Escr:$f,esdot:Uf,Esim:Gf,esim:Vf,Eta:zf,eta:Jf,ETH:Wf,eth:Xf,Euml:Kf,euml:Yf,euro:Zf,excl:Qf,exist:td,Exists:ed,expectation:nd,exponentiale:sd,ExponentialE:od,fallingdotseq:rd,Fcy:id,fcy:cd,female:ad,ffilig:ld,fflig:ud,ffllig:hd,Ffr:pd,ffr:fd,filig:dd,FilledSmallSquare:gd,FilledVerySmallSquare:md,fjlig:vd,flat:bd,fllig:yd,fltns:wd,fnof:_d,Fopf:xd,fopf:Ed,forall:Td,ForAll:kd,fork:Dd,forkv:Cd,Fouriertrf:Ad,fpartint:Sd,frac12:Ld,frac13:qd,frac14:Nd,frac15:Od,frac16:Rd,frac18:Fd,frac23:jd,frac25:Bd,frac34:Md,frac35:Pd,frac38:Id,frac45:Hd,frac56:$d,frac58:Ud,frac78:Gd,frasl:Vd,frown:zd,fscr:Jd,Fscr:Wd,gacute:Xd,Gamma:Kd,gamma:Yd,Gammad:Zd,gammad:Qd,gap:tg,Gbreve:eg,gbreve:ng,Gcedil:sg,Gcirc:og,gcirc:rg,Gcy:ig,gcy:cg,Gdot:ag,gdot:lg,ge:ug,gE:hg,gEl:pg,gel:fg,geq:dg,geqq:gg,geqslant:mg,gescc:vg,ges:bg,gesdot:yg,gesdoto:wg,gesdotol:_g,gesl:xg,gesles:Eg,Gfr:Tg,gfr:kg,gg:Dg,Gg:Cg,ggg:Ag,gimel:Sg,GJcy:Lg,gjcy:qg,gla:Ng,gl:Og,glE:Rg,glj:Fg,gnap:jg,gnapprox:Bg,gne:Mg,gnE:Pg,gneq:Ig,gneqq:Hg,gnsim:$g,Gopf:Ug,gopf:Gg,grave:Vg,GreaterEqual:zg,GreaterEqualLess:Jg,GreaterFullEqual:Wg,GreaterGreater:Xg,GreaterLess:Kg,GreaterSlantEqual:Yg,GreaterTilde:Zg,Gscr:Qg,gscr:tm,gsim:em,gsime:nm,gsiml:sm,gtcc:om,gtcir:rm,gt:im,GT:cm,Gt:am,gtdot:lm,gtlPar:um,gtquest:hm,gtrapprox:pm,gtrarr:fm,gtrdot:dm,gtreqless:gm,gtreqqless:mm,gtrless:vm,gtrsim:bm,gvertneqq:ym,gvnE:wm,Hacek:_m,hairsp:xm,half:Em,hamilt:Tm,HARDcy:km,hardcy:Dm,harrcir:Cm,harr:Am,hArr:Sm,harrw:Lm,Hat:qm,hbar:Nm,Hcirc:Om,hcirc:Rm,hearts:Fm,heartsuit:jm,hellip:Bm,hercon:Mm,hfr:Pm,Hfr:Im,HilbertSpace:Hm,hksearow:$m,hkswarow:Um,hoarr:Gm,homtht:Vm,hookleftarrow:zm,hookrightarrow:Jm,hopf:Wm,Hopf:Xm,horbar:Km,HorizontalLine:Ym,hscr:Zm,Hscr:Qm,hslash:tv,Hstrok:ev,hstrok:nv,HumpDownHump:sv,HumpEqual:ov,hybull:rv,hyphen:iv,Iacute:cv,iacute:av,ic:lv,Icirc:uv,icirc:hv,Icy:pv,icy:fv,Idot:dv,IEcy:gv,iecy:mv,iexcl:vv,iff:bv,ifr:yv,Ifr:wv,Igrave:_v,igrave:xv,ii:Ev,iiiint:Tv,iiint:kv,iinfin:Dv,iiota:Cv,IJlig:Av,ijlig:Sv,Imacr:Lv,imacr:qv,image:Nv,ImaginaryI:Ov,imagline:Rv,imagpart:Fv,imath:jv,Im:Bv,imof:Mv,imped:Pv,Implies:Iv,incare:Hv,in:"∈",infin:$v,infintie:Uv,inodot:Gv,intcal:Vv,int:zv,Int:Jv,integers:Wv,Integral:Xv,intercal:Kv,Intersection:Yv,intlarhk:Zv,intprod:Qv,InvisibleComma:t0,InvisibleTimes:e0,IOcy:n0,iocy:s0,Iogon:o0,iogon:r0,Iopf:i0,iopf:c0,Iota:a0,iota:l0,iprod:u0,iquest:h0,iscr:p0,Iscr:f0,isin:d0,isindot:g0,isinE:m0,isins:v0,isinsv:b0,isinv:y0,it:w0,Itilde:_0,itilde:x0,Iukcy:E0,iukcy:T0,Iuml:k0,iuml:D0,Jcirc:C0,jcirc:A0,Jcy:S0,jcy:L0,Jfr:q0,jfr:N0,jmath:O0,Jopf:R0,jopf:F0,Jscr:j0,jscr:B0,Jsercy:M0,jsercy:P0,Jukcy:I0,jukcy:H0,Kappa:$0,kappa:U0,kappav:G0,Kcedil:V0,kcedil:z0,Kcy:J0,kcy:W0,Kfr:X0,kfr:K0,kgreen:Y0,KHcy:Z0,khcy:Q0,KJcy:tb,kjcy:eb,Kopf:nb,kopf:sb,Kscr:ob,kscr:rb,lAarr:ib,Lacute:cb,lacute:ab,laemptyv:lb,lagran:ub,Lambda:hb,lambda:pb,lang:fb,Lang:db,langd:gb,langle:mb,lap:vb,Laplacetrf:bb,laquo:yb,larrb:wb,larrbfs:_b,larr:xb,Larr:Eb,lArr:Tb,larrfs:kb,larrhk:Db,larrlp:Cb,larrpl:Ab,larrsim:Sb,larrtl:Lb,latail:qb,lAtail:Nb,lat:Ob,late:Rb,lates:Fb,lbarr:jb,lBarr:Bb,lbbrk:Mb,lbrace:Pb,lbrack:Ib,lbrke:Hb,lbrksld:$b,lbrkslu:Ub,Lcaron:Gb,lcaron:Vb,Lcedil:zb,lcedil:Jb,lceil:Wb,lcub:Xb,Lcy:Kb,lcy:Yb,ldca:Zb,ldquo:Qb,ldquor:t1,ldrdhar:e1,ldrushar:n1,ldsh:s1,le:o1,lE:r1,LeftAngleBracket:i1,LeftArrowBar:c1,leftarrow:a1,LeftArrow:l1,Leftarrow:u1,LeftArrowRightArrow:h1,leftarrowtail:p1,LeftCeiling:f1,LeftDoubleBracket:d1,LeftDownTeeVector:g1,LeftDownVectorBar:m1,LeftDownVector:v1,LeftFloor:b1,leftharpoondown:y1,leftharpoonup:w1,leftleftarrows:_1,leftrightarrow:x1,LeftRightArrow:E1,Leftrightarrow:T1,leftrightarrows:k1,leftrightharpoons:D1,leftrightsquigarrow:C1,LeftRightVector:A1,LeftTeeArrow:S1,LeftTee:L1,LeftTeeVector:q1,leftthreetimes:N1,LeftTriangleBar:O1,LeftTriangle:R1,LeftTriangleEqual:F1,LeftUpDownVector:j1,LeftUpTeeVector:B1,LeftUpVectorBar:M1,LeftUpVector:P1,LeftVectorBar:I1,LeftVector:H1,lEg:$1,leg:U1,leq:G1,leqq:V1,leqslant:z1,lescc:J1,les:W1,lesdot:X1,lesdoto:K1,lesdotor:Y1,lesg:Z1,lesges:Q1,lessapprox:ty,lessdot:ey,lesseqgtr:ny,lesseqqgtr:sy,LessEqualGreater:oy,LessFullEqual:ry,LessGreater:iy,lessgtr:cy,LessLess:ay,lesssim:ly,LessSlantEqual:uy,LessTilde:hy,lfisht:py,lfloor:fy,Lfr:dy,lfr:gy,lg:my,lgE:vy,lHar:by,lhard:yy,lharu:wy,lharul:_y,lhblk:xy,LJcy:Ey,ljcy:Ty,llarr:ky,ll:Dy,Ll:Cy,llcorner:Ay,Lleftarrow:Sy,llhard:Ly,lltri:qy,Lmidot:Ny,lmidot:Oy,lmoustache:Ry,lmoust:Fy,lnap:jy,lnapprox:By,lne:My,lnE:Py,lneq:Iy,lneqq:Hy,lnsim:$y,loang:Uy,loarr:Gy,lobrk:Vy,longleftarrow:zy,LongLeftArrow:Jy,Longleftarrow:Wy,longleftrightarrow:Xy,LongLeftRightArrow:Ky,Longleftrightarrow:Yy,longmapsto:Zy,longrightarrow:Qy,LongRightArrow:tw,Longrightarrow:ew,looparrowleft:nw,looparrowright:sw,lopar:ow,Lopf:rw,lopf:iw,loplus:cw,lotimes:aw,lowast:lw,lowbar:uw,LowerLeftArrow:hw,LowerRightArrow:pw,loz:fw,lozenge:dw,lozf:gw,lpar:mw,lparlt:vw,lrarr:bw,lrcorner:yw,lrhar:ww,lrhard:_w,lrm:xw,lrtri:Ew,lsaquo:Tw,lscr:kw,Lscr:Dw,lsh:Cw,Lsh:Aw,lsim:Sw,lsime:Lw,lsimg:qw,lsqb:Nw,lsquo:Ow,lsquor:Rw,Lstrok:Fw,lstrok:jw,ltcc:Bw,ltcir:Mw,lt:Pw,LT:Iw,Lt:Hw,ltdot:$w,lthree:Uw,ltimes:Gw,ltlarr:Vw,ltquest:zw,ltri:Jw,ltrie:Ww,ltrif:Xw,ltrPar:Kw,lurdshar:Yw,luruhar:Zw,lvertneqq:Qw,lvnE:t_,macr:e_,male:n_,malt:s_,maltese:o_,Map:"⤅",map:r_,mapsto:i_,mapstodown:c_,mapstoleft:a_,mapstoup:l_,marker:u_,mcomma:h_,Mcy:p_,mcy:f_,mdash:d_,mDDot:g_,measuredangle:m_,MediumSpace:v_,Mellintrf:b_,Mfr:y_,mfr:w_,mho:__,micro:x_,midast:E_,midcir:T_,mid:k_,middot:D_,minusb:C_,minus:A_,minusd:S_,minusdu:L_,MinusPlus:q_,mlcp:N_,mldr:O_,mnplus:R_,models:F_,Mopf:j_,mopf:B_,mp:M_,mscr:P_,Mscr:I_,mstpos:H_,Mu:$_,mu:U_,multimap:G_,mumap:V_,nabla:z_,Nacute:J_,nacute:W_,nang:X_,nap:K_,napE:Y_,napid:Z_,napos:Q_,napprox:tx,natural:ex,naturals:nx,natur:sx,nbsp:ox,nbump:rx,nbumpe:ix,ncap:cx,Ncaron:ax,ncaron:lx,Ncedil:ux,ncedil:hx,ncong:px,ncongdot:fx,ncup:dx,Ncy:gx,ncy:mx,ndash:vx,nearhk:bx,nearr:yx,neArr:wx,nearrow:_x,ne:xx,nedot:Ex,NegativeMediumSpace:Tx,NegativeThickSpace:kx,NegativeThinSpace:Dx,NegativeVeryThinSpace:Cx,nequiv:Ax,nesear:Sx,nesim:Lx,NestedGreaterGreater:qx,NestedLessLess:Nx,NewLine:Ox,nexist:Rx,nexists:Fx,Nfr:jx,nfr:Bx,ngE:Mx,nge:Px,ngeq:Ix,ngeqq:Hx,ngeqslant:$x,nges:Ux,nGg:Gx,ngsim:Vx,nGt:zx,ngt:Jx,ngtr:Wx,nGtv:Xx,nharr:Kx,nhArr:Yx,nhpar:Zx,ni:Qx,nis:tE,nisd:eE,niv:nE,NJcy:sE,njcy:oE,nlarr:rE,nlArr:iE,nldr:cE,nlE:aE,nle:lE,nleftarrow:uE,nLeftarrow:hE,nleftrightarrow:pE,nLeftrightarrow:fE,nleq:dE,nleqq:gE,nleqslant:mE,nles:vE,nless:bE,nLl:yE,nlsim:wE,nLt:_E,nlt:xE,nltri:EE,nltrie:TE,nLtv:kE,nmid:DE,NoBreak:CE,NonBreakingSpace:AE,nopf:SE,Nopf:LE,Not:qE,not:NE,NotCongruent:OE,NotCupCap:RE,NotDoubleVerticalBar:FE,NotElement:jE,NotEqual:BE,NotEqualTilde:ME,NotExists:PE,NotGreater:IE,NotGreaterEqual:HE,NotGreaterFullEqual:$E,NotGreaterGreater:UE,NotGreaterLess:GE,NotGreaterSlantEqual:VE,NotGreaterTilde:zE,NotHumpDownHump:JE,NotHumpEqual:WE,notin:XE,notindot:KE,notinE:YE,notinva:ZE,notinvb:QE,notinvc:tT,NotLeftTriangleBar:eT,NotLeftTriangle:nT,NotLeftTriangleEqual:sT,NotLess:oT,NotLessEqual:rT,NotLessGreater:iT,NotLessLess:cT,NotLessSlantEqual:aT,NotLessTilde:lT,NotNestedGreaterGreater:uT,NotNestedLessLess:hT,notni:pT,notniva:fT,notnivb:dT,notnivc:gT,NotPrecedes:mT,NotPrecedesEqual:vT,NotPrecedesSlantEqual:bT,NotReverseElement:yT,NotRightTriangleBar:wT,NotRightTriangle:_T,NotRightTriangleEqual:xT,NotSquareSubset:ET,NotSquareSubsetEqual:TT,NotSquareSuperset:kT,NotSquareSupersetEqual:DT,NotSubset:CT,NotSubsetEqual:AT,NotSucceeds:ST,NotSucceedsEqual:LT,NotSucceedsSlantEqual:qT,NotSucceedsTilde:NT,NotSuperset:OT,NotSupersetEqual:RT,NotTilde:FT,NotTildeEqual:jT,NotTildeFullEqual:BT,NotTildeTilde:MT,NotVerticalBar:PT,nparallel:IT,npar:HT,nparsl:$T,npart:UT,npolint:GT,npr:VT,nprcue:zT,nprec:JT,npreceq:WT,npre:XT,nrarrc:KT,nrarr:YT,nrArr:ZT,nrarrw:QT,nrightarrow:t2,nRightarrow:e2,nrtri:n2,nrtrie:s2,nsc:o2,nsccue:r2,nsce:i2,Nscr:c2,nscr:a2,nshortmid:l2,nshortparallel:u2,nsim:h2,nsime:p2,nsimeq:f2,nsmid:d2,nspar:g2,nsqsube:m2,nsqsupe:v2,nsub:b2,nsubE:y2,nsube:w2,nsubset:_2,nsubseteq:x2,nsubseteqq:E2,nsucc:T2,nsucceq:k2,nsup:D2,nsupE:C2,nsupe:A2,nsupset:S2,nsupseteq:L2,nsupseteqq:q2,ntgl:N2,Ntilde:O2,ntilde:R2,ntlg:F2,ntriangleleft:j2,ntrianglelefteq:B2,ntriangleright:M2,ntrianglerighteq:P2,Nu:I2,nu:H2,num:$2,numero:U2,numsp:G2,nvap:V2,nvdash:z2,nvDash:J2,nVdash:W2,nVDash:X2,nvge:K2,nvgt:Y2,nvHarr:Z2,nvinfin:Q2,nvlArr:tk,nvle:ek,nvlt:nk,nvltrie:sk,nvrArr:ok,nvrtrie:rk,nvsim:ik,nwarhk:ck,nwarr:ak,nwArr:lk,nwarrow:uk,nwnear:hk,Oacute:pk,oacute:fk,oast:dk,Ocirc:gk,ocirc:mk,ocir:vk,Ocy:bk,ocy:yk,odash:wk,Odblac:_k,odblac:xk,odiv:Ek,odot:Tk,odsold:kk,OElig:Dk,oelig:Ck,ofcir:Ak,Ofr:Sk,ofr:Lk,ogon:qk,Ograve:Nk,ograve:Ok,ogt:Rk,ohbar:Fk,ohm:jk,oint:Bk,olarr:Mk,olcir:Pk,olcross:Ik,oline:Hk,olt:$k,Omacr:Uk,omacr:Gk,Omega:Vk,omega:zk,Omicron:Jk,omicron:Wk,omid:Xk,ominus:Kk,Oopf:Yk,oopf:Zk,opar:Qk,OpenCurlyDoubleQuote:tD,OpenCurlyQuote:eD,operp:nD,oplus:sD,orarr:oD,Or:rD,or:iD,ord:cD,order:aD,orderof:lD,ordf:uD,ordm:hD,origof:pD,oror:fD,orslope:dD,orv:gD,oS:mD,Oscr:vD,oscr:bD,Oslash:yD,oslash:wD,osol:_D,Otilde:xD,otilde:ED,otimesas:TD,Otimes:kD,otimes:DD,Ouml:CD,ouml:AD,ovbar:SD,OverBar:LD,OverBrace:qD,OverBracket:ND,OverParenthesis:OD,para:RD,parallel:FD,par:jD,parsim:BD,parsl:MD,part:PD,PartialD:ID,Pcy:HD,pcy:$D,percnt:UD,period:GD,permil:VD,perp:zD,pertenk:JD,Pfr:WD,pfr:XD,Phi:KD,phi:YD,phiv:ZD,phmmat:QD,phone:tC,Pi:eC,pi:nC,pitchfork:sC,piv:oC,planck:rC,planckh:iC,plankv:cC,plusacir:aC,plusb:lC,pluscir:uC,plus:hC,plusdo:pC,plusdu:fC,pluse:dC,PlusMinus:gC,plusmn:mC,plussim:vC,plustwo:bC,pm:yC,Poincareplane:wC,pointint:_C,popf:xC,Popf:EC,pound:TC,prap:kC,Pr:DC,pr:CC,prcue:AC,precapprox:SC,prec:LC,preccurlyeq:qC,Precedes:NC,PrecedesEqual:OC,PrecedesSlantEqual:RC,PrecedesTilde:FC,preceq:jC,precnapprox:BC,precneqq:MC,precnsim:PC,pre:IC,prE:HC,precsim:$C,prime:UC,Prime:GC,primes:VC,prnap:zC,prnE:JC,prnsim:WC,prod:XC,Product:KC,profalar:YC,profline:ZC,profsurf:QC,prop:tA,Proportional:eA,Proportion:nA,propto:sA,prsim:oA,prurel:rA,Pscr:iA,pscr:cA,Psi:aA,psi:lA,puncsp:uA,Qfr:hA,qfr:pA,qint:fA,qopf:dA,Qopf:gA,qprime:mA,Qscr:vA,qscr:bA,quaternions:yA,quatint:wA,quest:_A,questeq:xA,quot:EA,QUOT:TA,rAarr:kA,race:DA,Racute:CA,racute:AA,radic:SA,raemptyv:LA,rang:qA,Rang:NA,rangd:OA,range:RA,rangle:FA,raquo:jA,rarrap:BA,rarrb:MA,rarrbfs:PA,rarrc:IA,rarr:HA,Rarr:$A,rArr:UA,rarrfs:GA,rarrhk:VA,rarrlp:zA,rarrpl:JA,rarrsim:WA,Rarrtl:XA,rarrtl:KA,rarrw:YA,ratail:ZA,rAtail:QA,ratio:tS,rationals:eS,rbarr:nS,rBarr:sS,RBarr:oS,rbbrk:rS,rbrace:iS,rbrack:cS,rbrke:aS,rbrksld:lS,rbrkslu:uS,Rcaron:hS,rcaron:pS,Rcedil:fS,rcedil:dS,rceil:gS,rcub:mS,Rcy:vS,rcy:bS,rdca:yS,rdldhar:wS,rdquo:_S,rdquor:xS,rdsh:ES,real:TS,realine:kS,realpart:DS,reals:CS,Re:AS,rect:SS,reg:LS,REG:qS,ReverseElement:NS,ReverseEquilibrium:OS,ReverseUpEquilibrium:RS,rfisht:FS,rfloor:jS,rfr:BS,Rfr:MS,rHar:PS,rhard:IS,rharu:HS,rharul:$S,Rho:US,rho:GS,rhov:VS,RightAngleBracket:zS,RightArrowBar:JS,rightarrow:WS,RightArrow:XS,Rightarrow:KS,RightArrowLeftArrow:YS,rightarrowtail:ZS,RightCeiling:QS,RightDoubleBracket:tL,RightDownTeeVector:eL,RightDownVectorBar:nL,RightDownVector:sL,RightFloor:oL,rightharpoondown:rL,rightharpoonup:iL,rightleftarrows:cL,rightleftharpoons:aL,rightrightarrows:lL,rightsquigarrow:uL,RightTeeArrow:hL,RightTee:pL,RightTeeVector:fL,rightthreetimes:dL,RightTriangleBar:gL,RightTriangle:mL,RightTriangleEqual:vL,RightUpDownVector:bL,RightUpTeeVector:yL,RightUpVectorBar:wL,RightUpVector:_L,RightVectorBar:xL,RightVector:EL,ring:TL,risingdotseq:kL,rlarr:DL,rlhar:CL,rlm:AL,rmoustache:SL,rmoust:LL,rnmid:qL,roang:NL,roarr:OL,robrk:RL,ropar:FL,ropf:jL,Ropf:BL,roplus:ML,rotimes:PL,RoundImplies:IL,rpar:HL,rpargt:$L,rppolint:UL,rrarr:GL,Rrightarrow:VL,rsaquo:zL,rscr:JL,Rscr:WL,rsh:XL,Rsh:KL,rsqb:YL,rsquo:ZL,rsquor:QL,rthree:tq,rtimes:eq,rtri:nq,rtrie:sq,rtrif:oq,rtriltri:rq,RuleDelayed:iq,ruluhar:cq,rx:aq,Sacute:lq,sacute:uq,sbquo:hq,scap:pq,Scaron:fq,scaron:dq,Sc:gq,sc:mq,sccue:vq,sce:bq,scE:yq,Scedil:wq,scedil:_q,Scirc:xq,scirc:Eq,scnap:Tq,scnE:kq,scnsim:Dq,scpolint:Cq,scsim:Aq,Scy:Sq,scy:Lq,sdotb:qq,sdot:Nq,sdote:Oq,searhk:Rq,searr:Fq,seArr:jq,searrow:Bq,sect:Mq,semi:Pq,seswar:Iq,setminus:Hq,setmn:$q,sext:Uq,Sfr:Gq,sfr:Vq,sfrown:zq,sharp:Jq,SHCHcy:Wq,shchcy:Xq,SHcy:Kq,shcy:Yq,ShortDownArrow:Zq,ShortLeftArrow:Qq,shortmid:tN,shortparallel:eN,ShortRightArrow:nN,ShortUpArrow:sN,shy:oN,Sigma:rN,sigma:iN,sigmaf:cN,sigmav:aN,sim:lN,simdot:uN,sime:hN,simeq:pN,simg:fN,simgE:dN,siml:gN,simlE:mN,simne:vN,simplus:bN,simrarr:yN,slarr:wN,SmallCircle:_N,smallsetminus:xN,smashp:EN,smeparsl:TN,smid:kN,smile:DN,smt:CN,smte:AN,smtes:SN,SOFTcy:LN,softcy:qN,solbar:NN,solb:ON,sol:RN,Sopf:FN,sopf:jN,spades:BN,spadesuit:MN,spar:PN,sqcap:IN,sqcaps:HN,sqcup:$N,sqcups:UN,Sqrt:GN,sqsub:VN,sqsube:zN,sqsubset:JN,sqsubseteq:WN,sqsup:XN,sqsupe:KN,sqsupset:YN,sqsupseteq:ZN,square:QN,Square:tO,SquareIntersection:eO,SquareSubset:nO,SquareSubsetEqual:sO,SquareSuperset:oO,SquareSupersetEqual:rO,SquareUnion:iO,squarf:cO,squ:aO,squf:lO,srarr:uO,Sscr:hO,sscr:pO,ssetmn:fO,ssmile:dO,sstarf:gO,Star:mO,star:vO,starf:bO,straightepsilon:yO,straightphi:wO,strns:_O,sub:xO,Sub:EO,subdot:TO,subE:kO,sube:DO,subedot:CO,submult:AO,subnE:SO,subne:LO,subplus:qO,subrarr:NO,subset:OO,Subset:RO,subseteq:FO,subseteqq:jO,SubsetEqual:BO,subsetneq:MO,subsetneqq:PO,subsim:IO,subsub:HO,subsup:$O,succapprox:UO,succ:GO,succcurlyeq:VO,Succeeds:zO,SucceedsEqual:JO,SucceedsSlantEqual:WO,SucceedsTilde:XO,succeq:KO,succnapprox:YO,succneqq:ZO,succnsim:QO,succsim:tR,SuchThat:eR,sum:nR,Sum:sR,sung:oR,sup1:rR,sup2:iR,sup3:cR,sup:aR,Sup:lR,supdot:uR,supdsub:hR,supE:pR,supe:fR,supedot:dR,Superset:gR,SupersetEqual:mR,suphsol:vR,suphsub:bR,suplarr:yR,supmult:wR,supnE:_R,supne:xR,supplus:ER,supset:TR,Supset:kR,supseteq:DR,supseteqq:CR,supsetneq:AR,supsetneqq:SR,supsim:LR,supsub:qR,supsup:NR,swarhk:OR,swarr:RR,swArr:FR,swarrow:jR,swnwar:BR,szlig:MR,Tab:PR,target:IR,Tau:HR,tau:$R,tbrk:UR,Tcaron:GR,tcaron:VR,Tcedil:zR,tcedil:JR,Tcy:WR,tcy:XR,tdot:KR,telrec:YR,Tfr:ZR,tfr:QR,there4:t3,therefore:e3,Therefore:n3,Theta:s3,theta:o3,thetasym:r3,thetav:i3,thickapprox:c3,thicksim:a3,ThickSpace:l3,ThinSpace:u3,thinsp:h3,thkap:p3,thksim:f3,THORN:d3,thorn:g3,tilde:m3,Tilde:v3,TildeEqual:b3,TildeFullEqual:y3,TildeTilde:w3,timesbar:_3,timesb:x3,times:E3,timesd:T3,tint:k3,toea:D3,topbot:C3,topcir:A3,top:S3,Topf:L3,topf:q3,topfork:N3,tosa:O3,tprime:R3,trade:F3,TRADE:j3,triangle:B3,triangledown:M3,triangleleft:P3,trianglelefteq:I3,triangleq:H3,triangleright:$3,trianglerighteq:U3,tridot:G3,trie:V3,triminus:z3,TripleDot:J3,triplus:W3,trisb:X3,tritime:K3,trpezium:Y3,Tscr:Z3,tscr:Q3,TScy:t4,tscy:e4,TSHcy:n4,tshcy:s4,Tstrok:o4,tstrok:r4,twixt:i4,twoheadleftarrow:c4,twoheadrightarrow:a4,Uacute:l4,uacute:u4,uarr:h4,Uarr:p4,uArr:f4,Uarrocir:d4,Ubrcy:g4,ubrcy:m4,Ubreve:v4,ubreve:b4,Ucirc:y4,ucirc:w4,Ucy:_4,ucy:x4,udarr:E4,Udblac:T4,udblac:k4,udhar:D4,ufisht:C4,Ufr:A4,ufr:S4,Ugrave:L4,ugrave:q4,uHar:N4,uharl:O4,uharr:R4,uhblk:F4,ulcorn:j4,ulcorner:B4,ulcrop:M4,ultri:P4,Umacr:I4,umacr:H4,uml:$4,UnderBar:U4,UnderBrace:G4,UnderBracket:V4,UnderParenthesis:z4,Union:J4,UnionPlus:W4,Uogon:X4,uogon:K4,Uopf:Y4,uopf:Z4,UpArrowBar:Q4,uparrow:tF,UpArrow:eF,Uparrow:nF,UpArrowDownArrow:sF,updownarrow:oF,UpDownArrow:rF,Updownarrow:iF,UpEquilibrium:cF,upharpoonleft:aF,upharpoonright:lF,uplus:uF,UpperLeftArrow:hF,UpperRightArrow:pF,upsi:fF,Upsi:dF,upsih:gF,Upsilon:mF,upsilon:vF,UpTeeArrow:bF,UpTee:yF,upuparrows:wF,urcorn:_F,urcorner:xF,urcrop:EF,Uring:TF,uring:kF,urtri:DF,Uscr:CF,uscr:AF,utdot:SF,Utilde:LF,utilde:qF,utri:NF,utrif:OF,uuarr:RF,Uuml:FF,uuml:jF,uwangle:BF,vangrt:MF,varepsilon:PF,varkappa:IF,varnothing:HF,varphi:$F,varpi:UF,varpropto:GF,varr:VF,vArr:zF,varrho:JF,varsigma:WF,varsubsetneq:XF,varsubsetneqq:KF,varsupsetneq:YF,varsupsetneqq:ZF,vartheta:QF,vartriangleleft:tj,vartriangleright:ej,vBar:nj,Vbar:sj,vBarv:oj,Vcy:rj,vcy:ij,vdash:cj,vDash:aj,Vdash:lj,VDash:uj,Vdashl:hj,veebar:pj,vee:fj,Vee:dj,veeeq:gj,vellip:mj,verbar:vj,Verbar:bj,vert:yj,Vert:wj,VerticalBar:_j,VerticalLine:xj,VerticalSeparator:Ej,VerticalTilde:Tj,VeryThinSpace:kj,Vfr:Dj,vfr:Cj,vltri:Aj,vnsub:Sj,vnsup:Lj,Vopf:qj,vopf:Nj,vprop:Oj,vrtri:Rj,Vscr:Fj,vscr:jj,vsubnE:Bj,vsubne:Mj,vsupnE:Pj,vsupne:Ij,Vvdash:Hj,vzigzag:$j,Wcirc:Uj,wcirc:Gj,wedbar:Vj,wedge:zj,Wedge:Jj,wedgeq:Wj,weierp:Xj,Wfr:Kj,wfr:Yj,Wopf:Zj,wopf:Qj,wp:tB,wr:eB,wreath:nB,Wscr:sB,wscr:oB,xcap:rB,xcirc:iB,xcup:cB,xdtri:aB,Xfr:lB,xfr:uB,xharr:hB,xhArr:pB,Xi:fB,xi:dB,xlarr:gB,xlArr:mB,xmap:vB,xnis:bB,xodot:yB,Xopf:wB,xopf:_B,xoplus:xB,xotime:EB,xrarr:TB,xrArr:kB,Xscr:DB,xscr:CB,xsqcup:AB,xuplus:SB,xutri:LB,xvee:qB,xwedge:NB,Yacute:OB,yacute:RB,YAcy:FB,yacy:jB,Ycirc:BB,ycirc:MB,Ycy:PB,ycy:IB,yen:HB,Yfr:$B,yfr:UB,YIcy:GB,yicy:VB,Yopf:zB,yopf:JB,Yscr:WB,yscr:XB,YUcy:KB,yucy:YB,yuml:ZB,Yuml:QB,Zacute:tM,zacute:eM,Zcaron:nM,zcaron:sM,Zcy:oM,zcy:rM,Zdot:iM,zdot:cM,zeetrf:aM,ZeroWidthSpace:lM,Zeta:uM,zeta:hM,zfr:pM,Zfr:fM,ZHcy:dM,zhcy:gM,zigrarr:mM,zopf:vM,Zopf:bM,Zscr:yM,zscr:wM,zwj:_M,zwnj:xM},EM="Á",TM="á",kM="Â",DM="â",CM="´",AM="Æ",SM="æ",LM="À",qM="à",NM="&",OM="&",RM="Å",FM="å",jM="Ã",BM="ã",MM="Ä",PM="ä",IM="¦",HM="Ç",$M="ç",UM="¸",GM="¢",VM="©",zM="©",JM="¤",WM="°",XM="÷",KM="É",YM="é",ZM="Ê",QM="ê",tP="È",eP="è",nP="Ð",sP="ð",oP="Ë",rP="ë",iP="½",cP="¼",aP="¾",lP=">",uP=">",hP="Í",pP="í",fP="Î",dP="î",gP="¡",mP="Ì",vP="ì",bP="¿",yP="Ï",wP="ï",_P="«",xP="<",EP="<",TP="¯",kP="µ",DP="·",CP=" ",AP="¬",SP="Ñ",LP="ñ",qP="Ó",NP="ó",OP="Ô",RP="ô",FP="Ò",jP="ò",BP="ª",MP="º",PP="Ø",IP="ø",HP="Õ",$P="õ",UP="Ö",GP="ö",VP="¶",zP="±",JP="£",WP='"',XP='"',KP="»",YP="®",ZP="®",QP="§",tI="­",eI="¹",nI="²",sI="³",oI="ß",rI="Þ",iI="þ",cI="×",aI="Ú",lI="ú",uI="Û",hI="û",pI="Ù",fI="ù",dI="¨",gI="Ü",mI="ü",vI="Ý",bI="ý",yI="¥",wI="ÿ",_I={Aacute:EM,aacute:TM,Acirc:kM,acirc:DM,acute:CM,AElig:AM,aelig:SM,Agrave:LM,agrave:qM,amp:NM,AMP:OM,Aring:RM,aring:FM,Atilde:jM,atilde:BM,Auml:MM,auml:PM,brvbar:IM,Ccedil:HM,ccedil:$M,cedil:UM,cent:GM,copy:VM,COPY:zM,curren:JM,deg:WM,divide:XM,Eacute:KM,eacute:YM,Ecirc:ZM,ecirc:QM,Egrave:tP,egrave:eP,ETH:nP,eth:sP,Euml:oP,euml:rP,frac12:iP,frac14:cP,frac34:aP,gt:lP,GT:uP,Iacute:hP,iacute:pP,Icirc:fP,icirc:dP,iexcl:gP,Igrave:mP,igrave:vP,iquest:bP,Iuml:yP,iuml:wP,laquo:_P,lt:xP,LT:EP,macr:TP,micro:kP,middot:DP,nbsp:CP,not:AP,Ntilde:SP,ntilde:LP,Oacute:qP,oacute:NP,Ocirc:OP,ocirc:RP,Ograve:FP,ograve:jP,ordf:BP,ordm:MP,Oslash:PP,oslash:IP,Otilde:HP,otilde:$P,Ouml:UP,ouml:GP,para:VP,plusmn:zP,pound:JP,quot:WP,QUOT:XP,raquo:KP,reg:YP,REG:ZP,sect:QP,shy:tI,sup1:eI,sup2:nI,sup3:sI,szlig:oI,THORN:rI,thorn:iI,times:cI,Uacute:aI,uacute:lI,Ucirc:uI,ucirc:hI,Ugrave:pI,ugrave:fI,uml:dI,Uuml:gI,uuml:mI,Yacute:vI,yacute:bI,yen:yI,yuml:wI},xI="&",EI="'",TI=">",kI="<",DI='"',xn={amp:xI,apos:EI,gt:TI,lt:kI,quot:DI};var Re={};const CI={0:65533,128:8364,130:8218,131:402,132:8222,133:8230,134:8224,135:8225,136:710,137:8240,138:352,139:8249,140:338,142:381,145:8216,146:8217,147:8220,148:8221,149:8226,150:8211,151:8212,152:732,153:8482,154:353,155:8250,156:339,158:382,159:376};var AI=Bt&&Bt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(Re,"__esModule",{value:!0});var We=AI(CI);function SI(t){if(t>=55296&&t<=57343||t>1114111)return"�";t in We.default&&(t=We.default[t]);var e="";return t>65535&&(t-=65536,e+=String.fromCharCode(t>>>10&1023|55296),t=56320|t&1023),e+=String.fromCharCode(t),e}Re.default=SI;var ue=Bt&&Bt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(dt,"__esModule",{value:!0});dt.decodeHTML=dt.decodeHTMLStrict=dt.decodeXML=void 0;var we=ue(_n),LI=ue(_I),qI=ue(xn),Xe=ue(Re);dt.decodeXML=En(qI.default);dt.decodeHTMLStrict=En(we.default);function En(t){var e=Object.keys(t).join("|"),n=Tn(t);e+="|#[xX][\\da-fA-F]+|#\\d+";var s=new RegExp("&(?:"+e+");","g");return function(i){return String(i).replace(s,n)}}var Ke=function(t,e){return t<e?1:-1};dt.decodeHTML=function(){for(var t=Object.keys(LI.default).sort(Ke),e=Object.keys(we.default).sort(Ke),n=0,s=0;n<e.length;n++)t[s]===e[n]?(e[n]+=";?",s++):e[n]+=";";var i=new RegExp("&(?:"+e.join("|")+"|#[xX][\\da-fA-F]+;?|#\\d+;?)","g"),a=Tn(we.default);function l(c){return c.substr(-1)!==";"&&(c+=";"),a(c)}return function(c){return String(c).replace(i,l)}}();function Tn(t){return function(n){if(n.charAt(1)==="#"){var s=n.charAt(2);return s==="X"||s==="x"?Xe.default(parseInt(n.substr(3),16)):Xe.default(parseInt(n.substr(2),10))}return t[n.slice(1,-1)]}}var gt={},kn=Bt&&Bt.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(gt,"__esModule",{value:!0});gt.escape=gt.encodeHTML=gt.encodeXML=void 0;var NI=kn(xn),Fe=Cn(NI.default),OI=je(Fe);gt.encodeXML=Sn(Fe,OI);var RI=kn(_n),Dn=Cn(RI.default),FI=je(Dn);gt.encodeHTML=Sn(Dn,FI);function Cn(t){return Object.keys(t).sort().reduce(function(e,n){return e[t[n]]="&"+n+";",e},{})}function je(t){for(var e=[],n=[],s=0,i=Object.keys(t);s<i.length;s++){var a=i[s];a.length===1?e.push("\\"+a):n.push(a)}e.sort();for(var l=0;l<e.length-1;l++){for(var c=l;c<e.length-1&&e[c].charCodeAt(1)+1===e[c+1].charCodeAt(1);)c+=1;var p=1+c-l;p<3||e.splice(l,p,e[l]+"-"+e[c])}return n.unshift("["+e.join("")+"]"),new RegExp(n.join("|"),"g")}var An=/(?:[\x80-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/g;function _e(t){return"&#x"+t.codePointAt(0).toString(16).toUpperCase()+";"}function Sn(t,e){return function(n){return n.replace(e,function(s){return t[s]}).replace(An,_e)}}var jI=je(Fe);function BI(t){return t.replace(jI,_e).replace(An,_e)}gt.escape=BI;(function(t){Object.defineProperty(t,"__esModule",{value:!0}),t.encode=t.decodeStrict=t.decode=void 0;var e=dt,n=gt;function s(p,m){return(!m||m<=0?e.decodeXML:e.decodeHTML)(p)}t.decode=s;function i(p,m){return(!m||m<=0?e.decodeXML:e.decodeHTMLStrict)(p)}t.decodeStrict=i;function a(p,m){return(!m||m<=0?n.encodeXML:n.encodeHTML)(p)}t.encode=a;var l=gt;Object.defineProperty(t,"encodeXML",{enumerable:!0,get:function(){return l.encodeXML}}),Object.defineProperty(t,"encodeHTML",{enumerable:!0,get:function(){return l.encodeHTML}}),Object.defineProperty(t,"escape",{enumerable:!0,get:function(){return l.escape}}),Object.defineProperty(t,"encodeHTML4",{enumerable:!0,get:function(){return l.encodeHTML}}),Object.defineProperty(t,"encodeHTML5",{enumerable:!0,get:function(){return l.encodeHTML}});var c=dt;Object.defineProperty(t,"decodeXML",{enumerable:!0,get:function(){return c.decodeXML}}),Object.defineProperty(t,"decodeHTML",{enumerable:!0,get:function(){return c.decodeHTML}}),Object.defineProperty(t,"decodeHTMLStrict",{enumerable:!0,get:function(){return c.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTML4",{enumerable:!0,get:function(){return c.decodeHTML}}),Object.defineProperty(t,"decodeHTML5",{enumerable:!0,get:function(){return c.decodeHTML}}),Object.defineProperty(t,"decodeHTML4Strict",{enumerable:!0,get:function(){return c.decodeHTMLStrict}}),Object.defineProperty(t,"decodeHTML5Strict",{enumerable:!0,get:function(){return c.decodeHTMLStrict}}),Object.defineProperty(t,"decodeXMLStrict",{enumerable:!0,get:function(){return c.decodeXML}})})(Oe);var MI=92,Ln="&(?:#x[a-f0-9]{1,6}|#[0-9]{1,7}|[a-z][a-z0-9]{1,31});",qn="[A-Za-z][A-Za-z0-9-]*",PI="[a-zA-Z_:][a-zA-Z0-9:._-]*",II="[^\"'=<>`\\x00-\\x20]+",HI="'[^']*'",$I='"[^"]*"',UI="(?:"+II+"|"+HI+"|"+$I+")",GI="(?:\\s*=\\s*"+UI+")",VI="(?:\\s+"+PI+GI+"?)",Nn="<"+qn+VI+"*\\s*/?>",On="</"+qn+"\\s*[>]",zI="<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->",JI="[<][?][\\s\\S]*?[?][>]",WI="<![A-Z]+\\s+[^>]*>",XI="<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",KI="(?:"+Nn+"|"+On+"|"+zI+"|"+JI+"|"+WI+"|"+XI+")",YI=new RegExp("^"+KI),ZI=/[\\&]/,Rn="[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^_`{|}~-]",QI=new RegExp("\\\\"+Rn+"|"+Ln,"gi"),t7='[&<>"]',Ye=new RegExp(t7,"g"),e7=function(t){return t.charCodeAt(0)===MI?t.charAt(1):Oe.decodeHTML(t)},Fn=function(t){return ZI.test(t)?t.replace(QI,e7):t},n7=function(t){try{return so(t)}catch{return t}},s7=function(t){switch(t){case"&":return"&amp;";case"<":return"&lt;";case">":return"&gt;";case'"':return"&quot;";default:return t}},he=function(t){return Ye.test(t)?t.replace(Ye,s7):t};/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */var xe;function Be(t){return xe(t)}if(String.fromCodePoint)xe=function(t){try{return String.fromCodePoint(t)}catch(e){if(e instanceof RangeError)return String.fromCharCode(65533);throw e}};else{var o7=String.fromCharCode,r7=Math.floor;xe=function(){var t=16384,e=[],n,s,i=-1,a=arguments.length;if(!a)return"";for(var l="";++i<a;){var c=Number(arguments[i]);if(!isFinite(c)||c<0||c>1114111||r7(c)!==c)return String.fromCharCode(65533);c<=65535?e.push(c):(c-=65536,n=(c>>10)+55296,s=c%1024+56320,e.push(n,s)),(i+1===a||e.length>t)&&(l+=o7.apply(null,e),e.length=0)}return l}}/*! http://mths.be/repeat v0.2.0 by @mathias */String.prototype.repeat||function(){var t=function(){try{var n={},s=Object.defineProperty,i=s(n,n,n)&&s}catch{}return i}(),e=function(n){if(this==null)throw TypeError();var s=String(this),i=n?Number(n):0;if(i!=i&&(i=0),i<0||i==1/0)throw RangeError();for(var a="";i;)i%2==1&&(a+=s),i>1&&(s+=s),i>>=1;return a};t?t(String.prototype,"repeat",{value:e,configurable:!0,writable:!0}):String.prototype.repeat=e}();var ee=n7,Ee=Fn,jn=10,Te=42,ne=95,i7=96,Bn=91,c7=93,Mn=60,a7=33,Pn=92,l7=38,In=40,ke=41,u7=58,xt=39,Et=34,Hn=Rn,be="\\\\"+Hn,h7=Ln,p7=YI,Ze=new RegExp(/^[!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~\xA1\xA7\xAB\xB6\xB7\xBB\xBF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E42\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]|\uD800[\uDD00-\uDD02\uDF9F\uDFD0]|\uD801\uDD6F|\uD802[\uDC57\uDD1F\uDD3F\uDE50-\uDE58\uDE7F\uDEF0-\uDEF6\uDF39-\uDF3F\uDF99-\uDF9C]|\uD804[\uDC47-\uDC4D\uDCBB\uDCBC\uDCBE-\uDCC1\uDD40-\uDD43\uDD74\uDD75\uDDC5-\uDDC9\uDDCD\uDDDB\uDDDD-\uDDDF\uDE38-\uDE3D\uDEA9]|\uD805[\uDCC6\uDDC1-\uDDD7\uDE41-\uDE43\uDF3C-\uDF3E]|\uD809[\uDC70-\uDC74]|\uD81A[\uDE6E\uDE6F\uDEF5\uDF37-\uDF3B\uDF44]|\uD82F\uDC9F|\uD836[\uDE87-\uDE8B]/),f7=new RegExp('^(?:"('+be+`|[^"\\x00])*"|'(`+be+"|[^'\\x00])*'|\\(("+be+"|[^()\\x00])*\\))"),d7=/^(?:<(?:[^<>\n\\\x00]|\\.)*>)/,$n=new RegExp("^"+Hn),g7=new RegExp("^"+h7,"i"),m7=/`+/,v7=/^`+/,b7=/\.\.\./g,y7=/--+/g,w7=/^<([a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/,_7=/^<[A-Za-z][A-Za-z0-9.+-]{1,31}:[^<>\x00-\x20]*>/i,x7=/^ *(?:\n *)?/,Un=/^[ \t\n\x0b\x0c\x0d]/,Qe=/^\s/,E7=/ *$/,T7=/^ */,tn=/^ *(?:\n|$)/,k7=/^\[(?:[^\\\[\]]|\\.){0,1000}\]/s,D7=/^[^\n`\[\]\\!<&*_'"]+/m,Y=function(t){var e=new z("text");return e._literal=t,e},Gn=function(t){return t.slice(1,t.length-1).trim().replace(/[ \t\r\n]+/," ").toLowerCase().toUpperCase()},C7=function(t){var e=t.exec(this.subject.slice(this.pos));return e===null?null:(this.pos+=e.index+e[0].length,e[0])},A7=function(){return this.pos<this.subject.length?this.subject.charCodeAt(this.pos):-1},S7=function(){return this.match(x7),!0},L7=function(t){var e=this.match(v7);if(e===null)return!1;for(var n=this.pos,s,i,a;(s=this.match(m7))!==null;)if(s===e)return i=new z("code"),a=this.subject.slice(n,this.pos-e.length).replace(/\n/gm," "),a.length>0&&a.match(/[^ ]/)!==null&&a[0]==" "&&a[a.length-1]==" "?i._literal=a.slice(1,a.length-1):i._literal=a,t.appendChild(i),!0;return this.pos=n,t.appendChild(Y(e)),!0},q7=function(t){var e=this.subject,n;return this.pos+=1,this.peek()===jn?(this.pos+=1,n=new z("linebreak"),t.appendChild(n)):$n.test(e.charAt(this.pos))?(t.appendChild(Y(e.charAt(this.pos))),this.pos+=1):t.appendChild(Y("\\")),!0},N7=function(t){var e,n,s;return(e=this.match(w7))?(n=e.slice(1,e.length-1),s=new z("link"),s._destination=ee("mailto:"+n),s._title="",s.appendChild(Y(n)),t.appendChild(s),!0):(e=this.match(_7))?(n=e.slice(1,e.length-1),s=new z("link"),s._destination=ee(n),s._title="",s.appendChild(Y(n)),t.appendChild(s),!0):!1},O7=function(t){var e=this.match(p7);if(e===null)return!1;var n=new z("html_inline");return n._literal=e,t.appendChild(n),!0},R7=function(t){var e=0,n,s,i,a=this.pos,l,c,p,m,_,C,R,N;if(t===xt||t===Et)e++,this.pos++;else for(;this.peek()===t;)e++,this.pos++;return e===0?null:(n=a===0?`
`:this.subject.charAt(a-1),i=this.peek(),i===-1?s=`
`:s=Be(i),_=Qe.test(s),C=Ze.test(s),R=Qe.test(n),N=Ze.test(n),l=!_&&(!C||R||N),c=!R&&(!N||_||C),t===ne?(p=l&&(!c||N),m=c&&(!l||C)):t===xt||t===Et?(p=l&&!c,m=c):(p=l,m=c),this.pos=a,{numdelims:e,can_open:p,can_close:m})},F7=function(t,e){var n=this.scanDelims(t);if(!n)return!1;var s=n.numdelims,i=this.pos,a;this.pos+=s,t===xt?a="’":t===Et?a="“":a=this.subject.slice(i,this.pos);var l=Y(a);return e.appendChild(l),(n.can_open||n.can_close)&&(this.options.smart||t!==xt&&t!==Et)&&(this.delimiters={cc:t,numdelims:s,origdelims:s,node:l,previous:this.delimiters,next:null,can_open:n.can_open,can_close:n.can_close},this.delimiters.previous!==null&&(this.delimiters.previous.next=this.delimiters)),!0},j7=function(t){t.previous!==null&&(t.previous.next=t.next),t.next===null?this.delimiters=t.previous:t.next.previous=t.previous},B7=function(t,e){t.next!==e&&(t.next=e,e.previous=t)},M7=function(t){for(var e,n,s,i,a,l,c,p,m,_,C=[],R,N=!1,I=0;I<8;I++)C[I]=t;for(n=this.delimiters;n!==null&&n.previous!==t;)n=n.previous;for(;n!==null;){var X=n.cc;if(!n.can_close)n=n.next;else{switch(e=n.previous,_=!1,X){case xt:R=0;break;case Et:R=1;break;case ne:R=2;break;case Te:R=3+(n.can_open?3:0)+n.origdelims%3;break}for(;e!==null&&e!==t&&e!==C[R];){if(N=(n.can_open||e.can_close)&&n.origdelims%3!==0&&(e.origdelims+n.origdelims)%3===0,e.cc===n.cc&&e.can_open&&!N){_=!0;break}e=e.previous}if(s=n,X===Te||X===ne)if(!_)n=n.next;else{c=n.numdelims>=2&&e.numdelims>=2?2:1,i=e.node,a=n.node,e.numdelims-=c,n.numdelims-=c,i._literal=i._literal.slice(0,i._literal.length-c),a._literal=a._literal.slice(0,a._literal.length-c);var it=new z(c===1?"emph":"strong");for(p=i._next;p&&p!==a;)m=p._next,p.unlink(),it.appendChild(p),p=m;i.insertAfter(it),B7(e,n),e.numdelims===0&&(i.unlink(),this.removeDelimiter(e)),n.numdelims===0&&(a.unlink(),l=n.next,this.removeDelimiter(n),n=l)}else X===xt?(n.node._literal="’",_&&(e.node._literal="‘"),n=n.next):X===Et&&(n.node._literal="”",_&&(e.node.literal="“"),n=n.next);_||(C[R]=s.previous,s.can_open||this.removeDelimiter(s))}}for(;this.delimiters!==null&&this.delimiters!==t;)this.removeDelimiter(this.delimiters)},P7=function(){var t=this.match(f7);return t===null?null:Ee(t.substr(1,t.length-2))},I7=function(){var t=this.match(d7);if(t===null){if(this.peek()===Mn)return null;for(var e=this.pos,n=0,s;(s=this.peek())!==-1;)if(s===Pn&&$n.test(this.subject.charAt(this.pos+1)))this.pos+=1,this.peek()!==-1&&(this.pos+=1);else if(s===In)this.pos+=1,n+=1;else if(s===ke){if(n<1)break;this.pos+=1,n-=1}else{if(Un.exec(Be(s))!==null)break;this.pos+=1}return this.pos===e&&s!==ke||n!==0?null:(t=this.subject.substr(e,this.pos-e),ee(Ee(t)))}else return ee(Ee(t.substr(1,t.length-2)))},H7=function(){var t=this.match(k7);return t===null||t.length>1001?0:t.length},$7=function(t){var e=this.pos;this.pos+=1;var n=Y("[");return t.appendChild(n),this.addBracket(n,e,!1),!0},U7=function(t){var e=this.pos;if(this.pos+=1,this.peek()===Bn){this.pos+=1;var n=Y("![");t.appendChild(n),this.addBracket(n,e+1,!0)}else t.appendChild(Y("!"));return!0},G7=function(t){var e,n,s,i,a=!1,l,c;if(this.pos+=1,e=this.pos,c=this.brackets,c===null)return t.appendChild(Y("]")),!0;if(!c.active)return t.appendChild(Y("]")),this.removeBracket(),!0;n=c.image;var p=this.pos;if(this.peek()===In&&(this.pos++,this.spnl()&&(s=this.parseLinkDestination())!==null&&this.spnl()&&(Un.test(this.subject.charAt(this.pos-1))&&(i=this.parseLinkTitle())||!0)&&this.spnl()&&this.peek()===ke?(this.pos+=1,a=!0):this.pos=p),!a){var m=this.pos,_=this.parseLinkLabel();if(_>2?l=this.subject.slice(m,m+_):c.bracketAfter||(l=this.subject.slice(c.index,e)),_===0&&(this.pos=p),l){var C=this.refmap[Gn(l)];C&&(s=C.destination,i=C.title,a=!0)}}if(a){var R=new z(n?"image":"link");R._destination=s,R._title=i||"";var N,I;for(N=c.node._next;N;)I=N._next,N.unlink(),R.appendChild(N),N=I;if(t.appendChild(R),this.processEmphasis(c.previousDelimiter),this.removeBracket(),c.node.unlink(),!n)for(c=this.brackets;c!==null;)c.image||(c.active=!1),c=c.previous;return!0}else return this.removeBracket(),this.pos=e,t.appendChild(Y("]")),!0},V7=function(t,e,n){this.brackets!==null&&(this.brackets.bracketAfter=!0),this.brackets={node:t,previous:this.brackets,previousDelimiter:this.delimiters,index:e,image:n,active:!0}},z7=function(){this.brackets=this.brackets.previous},J7=function(t){var e;return(e=this.match(g7))?(t.appendChild(Y(Oe.decodeHTML(e))),!0):!1},W7=function(t){var e;return(e=this.match(D7))?(this.options.smart?t.appendChild(Y(e.replace(b7,"…").replace(y7,function(n){var s=0,i=0;return n.length%3===0?i=n.length/3:n.length%2===0?s=n.length/2:n.length%3===2?(s=1,i=(n.length-2)/3):(s=2,i=(n.length-4)/3),"—".repeat(i)+"–".repeat(s)}))):t.appendChild(Y(e)),!0):!1},X7=function(t){this.pos+=1;var e=t._lastChild;if(e&&e.type==="text"&&e._literal[e._literal.length-1]===" "){var n=e._literal[e._literal.length-2]===" ";e._literal=e._literal.replace(E7,""),t.appendChild(new z(n?"linebreak":"softbreak"))}else t.appendChild(new z("softbreak"));return this.match(T7),!0},K7=function(t,e){this.subject=t,this.pos=0;var n,s,i,a,l=this.pos;if(a=this.parseLinkLabel(),a===0)return 0;if(n=this.subject.substr(0,a),this.peek()===u7)this.pos++;else return this.pos=l,0;if(this.spnl(),s=this.parseLinkDestination(),s===null)return this.pos=l,0;var c=this.pos;this.spnl(),this.pos!==c&&(i=this.parseLinkTitle()),i===null&&(i="",this.pos=c);var p=!0;if(this.match(tn)===null&&(i===""?p=!1:(i="",this.pos=c,p=this.match(tn)!==null)),!p)return this.pos=l,0;var m=Gn(n);return m===""?(this.pos=l,0):(e[m]||(e[m]={destination:s,title:i}),this.pos-l)},Y7=function(t){var e=!1,n=this.peek();if(n===-1)return!1;switch(n){case jn:e=this.parseNewline(t);break;case Pn:e=this.parseBackslash(t);break;case i7:e=this.parseBackticks(t);break;case Te:case ne:e=this.handleDelim(n,t);break;case xt:case Et:e=this.options.smart&&this.handleDelim(n,t);break;case Bn:e=this.parseOpenBracket(t);break;case a7:e=this.parseBang(t);break;case c7:e=this.parseCloseBracket(t);break;case Mn:e=this.parseAutolink(t)||this.parseHtmlTag(t);break;case l7:e=this.parseEntity(t);break;default:e=this.parseString(t);break}return e||(this.pos+=1,t.appendChild(Y(Be(n)))),!0},Z7=function(t){for(this.subject=t._string_content.trim(),this.pos=0,this.delimiters=null,this.brackets=null;this.parseInline(t););t._string_content=null,this.processEmphasis(null)};function Q7(t){return{subject:"",delimiters:null,brackets:null,pos:0,refmap:{},match:C7,peek:A7,spnl:S7,parseBackticks:L7,parseBackslash:q7,parseAutolink:N7,parseHtmlTag:O7,scanDelims:R7,handleDelim:F7,parseLinkTitle:P7,parseLinkDestination:I7,parseLinkLabel:H7,parseOpenBracket:$7,parseBang:U7,parseCloseBracket:G7,addBracket:V7,removeBracket:z7,parseEntity:J7,parseString:W7,parseNewline:X7,parseReference:K7,parseInline:Y7,processEmphasis:M7,removeDelimiter:j7,options:t||{},parse:Z7}}var se=4,Vn=9,t5=10,zn=62,e5=60,Jn=32,Wn=91,n5=[/./,/^<(?:script|pre|textarea|style)(?:\s|>|$)/i,/^<!--/,/^<[?]/,/^<![A-Z]/,/^<!\[CDATA\[/,/^<[/]?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[123456]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|[/]?[>]|$)/i,new RegExp("^(?:"+Nn+"|"+On+")\\s*$","i")],s5=[/./,/<\/(?:script|pre|textarea|style)>/i,/-->/,/\?>/,/>/,/\]\]>/],o5=/^(?:\*[ \t]*){3,}$|^(?:_[ \t]*){3,}$|^(?:-[ \t]*){3,}$/,r5=/^[#`~*+_=<>0-9-]/,Xn=/[^ \t\f\v\r\n]/,i5=/^[*+-]/,c5=/^(\d{1,9})([.)])/,a5=/^#{1,6}(?:[ \t]+|$)/,l5=/^`{3,}(?!.*`)|^~{3,}/,u5=/^(?:`{3,}|~{3,})(?= *$)/,h5=/^(?:=+|-+)[ \t]*$/,p5=/\r\n|\n|\r/,f5=function(t){return!Xn.test(t)},zt=function(t){return t===Jn||t===Vn},rt=function(t,e){return e<t.length?t.charCodeAt(e):-1},en=function(t){for(;t;){if(t._lastLineBlank)return!0;var e=t.type;if(!t._lastLineChecked&&(e==="list"||e==="item"))t._lastLineChecked=!0,t=t._lastChild;else{t._lastLineChecked=!0;break}}return!1},d5=function(){if(this.partiallyConsumedTab){this.offset+=1;var t=4-this.column%4;this.tip._string_content+=" ".repeat(t)}this.tip._string_content+=this.currentLine.slice(this.offset)+`
`},g5=function(t,e){for(;!this.blocks[this.tip.type].canContain(t);)this.finalize(this.tip,this.lineNumber-1);var n=e+1,s=new z(t,[[this.lineNumber,n],[0,0]]);return s._string_content="",this.tip.appendChild(s),this.tip=s,s},m5=function(t,e){var n=t.currentLine.slice(t.nextNonspace),s,i,a,l,c={type:null,tight:!0,bulletChar:null,start:null,delimiter:null,padding:null,markerOffset:t.indent};if(t.indent>=4)return null;if(s=n.match(i5))c.type="bullet",c.bulletChar=s[0][0];else if((s=n.match(c5))&&(e.type!=="paragraph"||s[1]==1))c.type="ordered",c.start=parseInt(s[1]),c.delimiter=s[2];else return null;if(i=rt(t.currentLine,t.nextNonspace+s[0].length),!(i===-1||i===Vn||i===Jn)||e.type==="paragraph"&&!t.currentLine.slice(t.nextNonspace+s[0].length).match(Xn))return null;t.advanceNextNonspace(),t.advanceOffset(s[0].length,!0),a=t.column,l=t.offset;do t.advanceOffset(1,!0),i=rt(t.currentLine,t.offset);while(t.column-a<5&&zt(i));var p=rt(t.currentLine,t.offset)===-1,m=t.column-a;return m>=5||m<1||p?(c.padding=s[0].length+1,t.column=a,t.offset=l,zt(rt(t.currentLine,t.offset))&&t.advanceOffset(1,!0)):c.padding=s[0].length+m,c},v5=function(t,e){return t.type===e.type&&t.delimiter===e.delimiter&&t.bulletChar===e.bulletChar},b5=function(){if(!this.allClosed){for(;this.oldtip!==this.lastMatchedContainer;){var t=this.oldtip._parent;this.finalize(this.oldtip,this.lineNumber-1),this.oldtip=t}this.allClosed=!0}},Kn={document:{continue:function(){return 0},finalize:function(){},canContain:function(t){return t!=="item"},acceptsLines:!1},list:{continue:function(){return 0},finalize:function(t,e){for(var n=e._firstChild;n;){if(en(n)&&n._next){e._listData.tight=!1;break}for(var s=n._firstChild;s;){if(en(s)&&(n._next||s._next)){e._listData.tight=!1;break}s=s._next}n=n._next}},canContain:function(t){return t==="item"},acceptsLines:!1},block_quote:{continue:function(t){var e=t.currentLine;if(!t.indented&&rt(e,t.nextNonspace)===zn)t.advanceNextNonspace(),t.advanceOffset(1,!1),zt(rt(e,t.offset))&&t.advanceOffset(1,!0);else return 1;return 0},finalize:function(){},canContain:function(t){return t!=="item"},acceptsLines:!1},item:{continue:function(t,e){if(t.blank){if(e._firstChild==null)return 1;t.advanceNextNonspace()}else if(t.indent>=e._listData.markerOffset+e._listData.padding)t.advanceOffset(e._listData.markerOffset+e._listData.padding,!0);else return 1;return 0},finalize:function(){},canContain:function(t){return t!=="item"},acceptsLines:!1},heading:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},thematic_break:{continue:function(){return 1},finalize:function(){},canContain:function(){return!1},acceptsLines:!1},code_block:{continue:function(t,e){var n=t.currentLine,s=t.indent;if(e._isFenced){var i=s<=3&&n.charAt(t.nextNonspace)===e._fenceChar&&n.slice(t.nextNonspace).match(u5);if(i&&i[0].length>=e._fenceLength)return t.lastLineLength=t.offset+s+i[0].length,t.finalize(e,t.lineNumber),2;for(var a=e._fenceOffset;a>0&&zt(rt(n,t.offset));)t.advanceOffset(1,!0),a--}else if(s>=se)t.advanceOffset(se,!0);else if(t.blank)t.advanceNextNonspace();else return 1;return 0},finalize:function(t,e){if(e._isFenced){var n=e._string_content,s=n.indexOf(`
`),i=n.slice(0,s),a=n.slice(s+1);e.info=Fn(i.trim()),e._literal=a}else e._literal=e._string_content.replace(/(\n *)+$/,`
`);e._string_content=null},canContain:function(){return!1},acceptsLines:!0},html_block:{continue:function(t,e){return t.blank&&(e._htmlBlockType===6||e._htmlBlockType===7)?1:0},finalize:function(t,e){e._literal=e._string_content.replace(/(\n *)+$/,""),e._string_content=null},canContain:function(){return!1},acceptsLines:!0},paragraph:{continue:function(t){return t.blank?1:0},finalize:function(t,e){for(var n,s=!1;rt(e._string_content,0)===Wn&&(n=t.inlineParser.parseReference(e._string_content,t.refmap));)e._string_content=e._string_content.slice(n),s=!0;s&&f5(e._string_content)&&e.unlink()},canContain:function(){return!1},acceptsLines:!0}},y5=[function(t){return!t.indented&&rt(t.currentLine,t.nextNonspace)===zn?(t.advanceNextNonspace(),t.advanceOffset(1,!1),zt(rt(t.currentLine,t.offset))&&t.advanceOffset(1,!0),t.closeUnmatchedBlocks(),t.addChild("block_quote",t.nextNonspace),1):0},function(t){var e;if(!t.indented&&(e=t.currentLine.slice(t.nextNonspace).match(a5))){t.advanceNextNonspace(),t.advanceOffset(e[0].length,!1),t.closeUnmatchedBlocks();var n=t.addChild("heading",t.nextNonspace);return n.level=e[0].trim().length,n._string_content=t.currentLine.slice(t.offset).replace(/^[ \t]*#+[ \t]*$/,"").replace(/[ \t]+#+[ \t]*$/,""),t.advanceOffset(t.currentLine.length-t.offset),2}else return 0},function(t){var e;if(!t.indented&&(e=t.currentLine.slice(t.nextNonspace).match(l5))){var n=e[0].length;t.closeUnmatchedBlocks();var s=t.addChild("code_block",t.nextNonspace);return s._isFenced=!0,s._fenceLength=n,s._fenceChar=e[0][0],s._fenceOffset=t.indent,t.advanceNextNonspace(),t.advanceOffset(n,!1),2}else return 0},function(t,e){if(!t.indented&&rt(t.currentLine,t.nextNonspace)===e5){var n=t.currentLine.slice(t.nextNonspace),s;for(s=1;s<=7;s++)if(n5[s].test(n)&&(s<7||e.type!=="paragraph"&&!(!t.allClosed&&!t.blank&&t.tip.type==="paragraph"))){t.closeUnmatchedBlocks();var i=t.addChild("html_block",t.offset);return i._htmlBlockType=s,2}}return 0},function(t,e){var n;if(!t.indented&&e.type==="paragraph"&&(n=t.currentLine.slice(t.nextNonspace).match(h5))){t.closeUnmatchedBlocks();for(var s;rt(e._string_content,0)===Wn&&(s=t.inlineParser.parseReference(e._string_content,t.refmap));)e._string_content=e._string_content.slice(s);if(e._string_content.length>0){var i=new z("heading",e.sourcepos);return i.level=n[0][0]==="="?1:2,i._string_content=e._string_content,e.insertAfter(i),e.unlink(),t.tip=i,t.advanceOffset(t.currentLine.length-t.offset,!1),2}else return 0}else return 0},function(t){return!t.indented&&o5.test(t.currentLine.slice(t.nextNonspace))?(t.closeUnmatchedBlocks(),t.addChild("thematic_break",t.nextNonspace),t.advanceOffset(t.currentLine.length-t.offset,!1),2):0},function(t,e){var n;return(!t.indented||e.type==="list")&&(n=m5(t,e))?(t.closeUnmatchedBlocks(),(t.tip.type!=="list"||!v5(e._listData,n))&&(e=t.addChild("list",t.nextNonspace),e._listData=n),e=t.addChild("item",t.nextNonspace),e._listData=n,1):0},function(t){return t.indented&&t.tip.type!=="paragraph"&&!t.blank?(t.advanceOffset(se,!0),t.closeUnmatchedBlocks(),t.addChild("code_block",t.offset),2):0}],w5=function(t,e){for(var n=this.currentLine,s,i,a;t>0&&(a=n[this.offset]);)a==="	"?(s=4-this.column%4,e?(this.partiallyConsumedTab=s>t,i=s>t?t:s,this.column+=i,this.offset+=this.partiallyConsumedTab?0:1,t-=i):(this.partiallyConsumedTab=!1,this.column+=s,this.offset+=1,t-=1)):(this.partiallyConsumedTab=!1,this.offset+=1,this.column+=1,t-=1)},_5=function(){this.offset=this.nextNonspace,this.column=this.nextNonspaceColumn,this.partiallyConsumedTab=!1},x5=function(){for(var t=this.currentLine,e=this.offset,n=this.column,s;(s=t.charAt(e))!=="";)if(s===" ")e++,n++;else if(s==="	")e++,n+=4-n%4;else break;this.blank=s===`
`||s==="\r"||s==="",this.nextNonspace=e,this.nextNonspaceColumn=n,this.indent=this.nextNonspaceColumn-this.column,this.indented=this.indent>=se},E5=function(t){var e=!0,n,s=this.doc;this.oldtip=this.tip,this.offset=0,this.column=0,this.blank=!1,this.partiallyConsumedTab=!1,this.lineNumber+=1,t.indexOf("\0")!==-1&&(t=t.replace(/\0/g,"�")),this.currentLine=t;for(var i;(i=s._lastChild)&&i._open;){switch(s=i,this.findNextNonspace(),this.blocks[s.type].continue(this,s)){case 0:break;case 1:e=!1;break;case 2:return;default:throw"continue returned illegal value, must be 0, 1, or 2"}if(!e){s=s._parent;break}}this.allClosed=s===this.oldtip,this.lastMatchedContainer=s;for(var a=s.type!=="paragraph"&&Kn[s.type].acceptsLines,l=this.blockStarts,c=l.length;!a;){if(this.findNextNonspace(),!this.indented&&!r5.test(t.slice(this.nextNonspace))){this.advanceNextNonspace();break}for(var p=0;p<c;){var m=l[p](this,s);if(m===1){s=this.tip;break}else if(m===2){s=this.tip,a=!0;break}else p++}if(p===c){this.advanceNextNonspace();break}}if(!this.allClosed&&!this.blank&&this.tip.type==="paragraph")this.addLine();else{this.closeUnmatchedBlocks(),this.blank&&s.lastChild&&(s.lastChild._lastLineBlank=!0),n=s.type;for(var _=this.blank&&!(n==="block_quote"||n==="code_block"&&s._isFenced||n==="item"&&!s._firstChild&&s.sourcepos[0][0]===this.lineNumber),C=s;C;)C._lastLineBlank=_,C=C._parent;this.blocks[n].acceptsLines?(this.addLine(),n==="html_block"&&s._htmlBlockType>=1&&s._htmlBlockType<=5&&s5[s._htmlBlockType].test(this.currentLine.slice(this.offset))&&(this.lastLineLength=t.length,this.finalize(s,this.lineNumber))):this.offset<t.length&&!this.blank&&(s=this.addChild("paragraph",this.offset),this.advanceNextNonspace(),this.addLine())}this.lastLineLength=t.length},T5=function(t,e){var n=t._parent;t._open=!1,t.sourcepos[1]=[e,this.lastLineLength],this.blocks[t.type].finalize(this,t),this.tip=n},k5=function(t){var e,n,s,i=t.walker();for(this.inlineParser.refmap=this.refmap,this.inlineParser.options=this.options;n=i.next();)e=n.node,s=e.type,!n.entering&&(s==="paragraph"||s==="heading")&&this.inlineParser.parse(e)},Yn=function(){var t=new z("document",[[1,1],[0,0]]);return t},D5=function(t){this.doc=new Yn,this.tip=this.doc,this.refmap={},this.lineNumber=0,this.lastLineLength=0,this.offset=0,this.column=0,this.lastMatchedContainer=this.doc,this.currentLine="",this.options.time&&console.time("preparing input");var e=t.split(p5),n=e.length;t.charCodeAt(t.length-1)===t5&&(n-=1),this.options.time&&console.timeEnd("preparing input"),this.options.time&&console.time("block parsing");for(var s=0;s<n;s++)this.incorporateLine(e[s]);for(;this.tip;)this.finalize(this.tip,n);return this.options.time&&console.timeEnd("block parsing"),this.options.time&&console.time("inline parsing"),this.processInlines(this.doc),this.options.time&&console.timeEnd("inline parsing"),this.doc};function C5(t){return{doc:new Yn,blocks:Kn,blockStarts:y5,tip:this.doc,oldtip:this.doc,currentLine:"",lineNumber:0,offset:0,column:0,nextNonspace:0,nextNonspaceColumn:0,indent:0,indented:!1,blank:!1,partiallyConsumedTab:!1,allClosed:!0,lastMatchedContainer:this.doc,refmap:{},lastLineLength:0,inlineParser:new Q7(t),findNextNonspace:x5,advanceOffset:w5,advanceNextNonspace:_5,addLine:d5,addChild:g5,incorporateLine:E5,finalize:T5,processInlines:k5,closeUnmatchedBlocks:b5,parse:D5,options:t||{}}}function kt(){}function A5(t){var e=t.walker(),n,s;for(this.buffer="",this.lastOut=`
`;n=e.next();)s=n.node.type,this[s]&&this[s](n.node,n.entering);return this.buffer}function S5(t){this.buffer+=t,this.lastOut=t}function L5(){this.lastOut!==`
`&&this.lit(`
`)}function q5(t){this.lit(t)}function N5(t){return t}kt.prototype.render=A5;kt.prototype.out=q5;kt.prototype.lit=S5;kt.prototype.cr=L5;kt.prototype.esc=N5;var O5=/^javascript:|vbscript:|file:|data:/i,R5=/^data:image\/(?:png|gif|jpeg|webp)/i,Zn=function(t){return O5.test(t)&&!R5.test(t)};function F5(t,e,n){if(!(this.disableTags>0)){if(this.buffer+="<"+t,e&&e.length>0)for(var s=0,i;(i=e[s])!==void 0;)this.buffer+=" "+i[0]+'="'+i[1]+'"',s++;n&&(this.buffer+=" /"),this.buffer+=">",this.lastOut=">"}}function M(t){t=t||{},t.softbreak=t.softbreak||`
`,this.esc=t.esc||he,this.disableTags=0,this.lastOut=`
`,this.options=t}function j5(t){this.out(t.literal)}function B5(){this.lit(this.options.softbreak)}function M5(){this.tag("br",[],!0),this.cr()}function P5(t,e){var n=this.attrs(t);e?(this.options.safe&&Zn(t.destination)||n.push(["href",this.esc(t.destination)]),t.title&&n.push(["title",this.esc(t.title)]),this.tag("a",n)):this.tag("/a")}function I5(t,e){e?(this.disableTags===0&&(this.options.safe&&Zn(t.destination)?this.lit('<img src="" alt="'):this.lit('<img src="'+this.esc(t.destination)+'" alt="')),this.disableTags+=1):(this.disableTags-=1,this.disableTags===0&&(t.title&&this.lit('" title="'+this.esc(t.title)),this.lit('" />')))}function H5(t,e){this.tag(e?"em":"/em")}function $5(t,e){this.tag(e?"strong":"/strong")}function U5(t,e){var n=t.parent.parent,s=this.attrs(t);n!==null&&n.type==="list"&&n.listTight||(e?(this.cr(),this.tag("p",s)):(this.tag("/p"),this.cr()))}function G5(t,e){var n="h"+t.level,s=this.attrs(t);e?(this.cr(),this.tag(n,s)):(this.tag("/"+n),this.cr())}function V5(t){this.tag("code"),this.out(t.literal),this.tag("/code")}function z5(t){var e=t.info?t.info.split(/\s+/):[],n=this.attrs(t);e.length>0&&e[0].length>0&&n.push(["class","language-"+this.esc(e[0])]),this.cr(),this.tag("pre"),this.tag("code",n),this.out(t.literal),this.tag("/code"),this.tag("/pre"),this.cr()}function J5(t){var e=this.attrs(t);this.cr(),this.tag("hr",e,!0),this.cr()}function W5(t,e){var n=this.attrs(t);e?(this.cr(),this.tag("blockquote",n),this.cr()):(this.cr(),this.tag("/blockquote"),this.cr())}function X5(t,e){var n=t.listType==="bullet"?"ul":"ol",s=this.attrs(t);if(e){var i=t.listStart;i!==null&&i!==1&&s.push(["start",i.toString()]),this.cr(),this.tag(n,s),this.cr()}else this.cr(),this.tag("/"+n),this.cr()}function K5(t,e){var n=this.attrs(t);e?this.tag("li",n):(this.tag("/li"),this.cr())}function Y5(t){this.options.safe?this.lit("<!-- raw HTML omitted -->"):this.lit(t.literal)}function Z5(t){this.cr(),this.options.safe?this.lit("<!-- raw HTML omitted -->"):this.lit(t.literal),this.cr()}function Q5(t,e){e&&t.onEnter?this.lit(t.onEnter):!e&&t.onExit&&this.lit(t.onExit)}function tH(t,e){this.cr(),e&&t.onEnter?this.lit(t.onEnter):!e&&t.onExit&&this.lit(t.onExit),this.cr()}function eH(t){this.lit(this.esc(t))}function nH(t){var e=[];if(this.options.sourcepos){var n=t.sourcepos;n&&e.push(["data-sourcepos",String(n[0][0])+":"+String(n[0][1])+"-"+String(n[1][0])+":"+String(n[1][1])])}return e}M.prototype=Object.create(kt.prototype);M.prototype.text=j5;M.prototype.html_inline=Y5;M.prototype.html_block=Z5;M.prototype.softbreak=B5;M.prototype.linebreak=M5;M.prototype.link=P5;M.prototype.image=I5;M.prototype.emph=H5;M.prototype.strong=$5;M.prototype.paragraph=U5;M.prototype.heading=G5;M.prototype.code=V5;M.prototype.code_block=z5;M.prototype.thematic_break=J5;M.prototype.block_quote=W5;M.prototype.list=X5;M.prototype.item=K5;M.prototype.custom_inline=Q5;M.prototype.custom_block=tH;M.prototype.esc=he;M.prototype.out=eH;M.prototype.tag=F5;M.prototype.attrs=nH;var sH=/\<[^>]*\>/;function oH(t){return t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase()}function It(t){t=t||{},this.disableTags=0,this.lastOut=`
`,this.indentLevel=0,this.indent="  ",this.esc=t.esc||he,this.options=t}function rH(t){this.buffer="";var e,n,s=t.walker(),i,a,l,c,p,m,_=this.options;for(_.time&&console.time("rendering"),this.buffer+=`<?xml version="1.0" encoding="UTF-8"?>
`,this.buffer+=`<!DOCTYPE document SYSTEM "CommonMark.dtd">
`;i=s.next();)if(l=i.entering,a=i.node,m=a.type,c=a.isContainer,p=m==="thematic_break"||m==="linebreak"||m==="softbreak",n=oH(m),l){switch(e=[],m){case"document":e.push(["xmlns","http://commonmark.org/xml/1.0"]);break;case"list":a.listType!==null&&e.push(["type",a.listType.toLowerCase()]),a.listStart!==null&&e.push(["start",String(a.listStart)]),a.listTight!==null&&e.push(["tight",a.listTight?"true":"false"]);var C=a.listDelimiter;if(C!==null){var R="";C==="."?R="period":R="paren",e.push(["delimiter",R])}break;case"code_block":a.info&&e.push(["info",a.info]);break;case"heading":e.push(["level",String(a.level)]);break;case"link":case"image":e.push(["destination",a.destination]),e.push(["title",a.title]);break;case"custom_inline":case"custom_block":e.push(["on_enter",a.onEnter]),e.push(["on_exit",a.onExit]);break}if(_.sourcepos){var N=a.sourcepos;N&&e.push(["sourcepos",String(N[0][0])+":"+String(N[0][1])+"-"+String(N[1][0])+":"+String(N[1][1])])}if(this.cr(),this.out(this.tag(n,e,p)),c)this.indentLevel+=1;else if(!c&&!p){var I=a.literal;I&&this.out(this.esc(I)),this.out(this.tag("/"+n))}}else this.indentLevel-=1,this.cr(),this.out(this.tag("/"+n));return _.time&&console.timeEnd("rendering"),this.buffer+=`
`,this.buffer}function iH(t){this.disableTags>0?this.buffer+=t.replace(sH,""):this.buffer+=t,this.lastOut=t}function cH(){if(this.lastOut!==`
`){this.buffer+=`
`,this.lastOut=`
`;for(var t=this.indentLevel;t>0;t--)this.buffer+=this.indent}}function aH(t,e,n){var s="<"+t;if(e&&e.length>0)for(var i=0,a;(a=e[i])!==void 0;)s+=" "+a[0]+'="'+this.esc(a[1])+'"',i++;return n&&(s+=" /"),s+=">",s}It.prototype=Object.create(kt.prototype);It.prototype.render=rH;It.prototype.out=iH;It.prototype.cr=cH;It.prototype.tag=aH;It.prototype.esc=he;const lH=[{slug:"12days_1",version:1,disp_title:"A list of files",dir:"night_before_christmas",emoji:"12days/12days_1",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the first day of Shell my true love gave to me<br />
A list of files in the directory tree ...
</div>
`,learn:`You've stumbled upon a festive adventure where you need to type single commands into your browser to get Christmas presents!
As a reward for your efforts, you might learn a little bit about the command line.

On just about every Unix and Unix-like operating systems there is a command named \`ls\`. <br />
\`ls\` is short for "list" and can be used to list files in your current working directory.

Try sending the command \`ls\` in the command box to list all files in the directory.
`,disp_learn:!0,example:"ls",expected_output:{lines:["night-before-christmas.txt"]},tags:["12days"]},{slug:"12days_2",version:1,disp_title:"Two lines a-laughing",dir:"night_before_christmas",emoji:"12days/12days_2",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the second day of Shell my true love gave to me<br />
Two lines a-laughing ...
</div>

---
_Hint: look for lines that contain the string "laugh"_<br /><br />
_If you aren't sure what to do, expand the "learn" section above._<br />
_You can also view user solutions by expanding "View Solutions" above_
`,learn:"What's so funny? Let's look for lines in our Christmas poem that are laughing.\n\n`grep` is the most common command-line utility for extracting text from a file.<br />\nThe syntax of the command is `grep PATTERN <file>`.<br />\n`PATTERN` is a string, and refers to a [basic regular expression](https://www.gnu.org/software/sed/manual/html_node/BRE-syntax.html).<br />\nAll you need to know for now is to set `PATTERN` to the string you are looking for.\n\nIn this example you might try:\n\n```\ngrep laugh night-before-christmas.txt\n```\n\nWhich will print every single line that contains the string \"laugh\".<br />\nThere are many options for the `grep` command, for example to do a case-insensitive search you would type:\n\n```\ngrep -i laugh night-before-christmas.txt\n```\n\nTo see all available options check out the man page by sending the command `man grep` or the help `grep --help`.\n",example:"grep laugh night-before-christmas.txt",expected_output:{lines:["That shook when he laughed, like a bowlful of jelly.","And I laughed when I saw him, in spite of myself;"]},tags:["12days"]},{slug:"12days_3",version:1,disp_title:"Three lines at the beginning",dir:"night_before_christmas",emoji:"12days/12days_3",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the third day of Shell my true love gave to me<br />
Three lines at the beginning ...
</div>
`,learn:`When you have a text file, it's common to only need to see the top N lines.
Included in most Unix-like systems is a utility named \`head\`.
By default, it will display the first 10 lines of the file.

To display the first 3 lines, you will need to use the option \`-n 3\`.

Try sending the command:

\`\`\`
head -n 3 night-before-christmas.txt
\`\`\`
`,example:"head -3 night-before-christmas.txt",expected_output:{lines:["'Twas the night before Christmas, when all through the house","Not a creature was stirring, not even a mouse;","The stockings were hung by the chimney with care"]},tags:["12days"]},{slug:"12days_4",version:1,disp_title:"Four lines at the end",dir:"night_before_christmas",emoji:"12days/12days_4",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the fourth day of Shell my true love gave to me<br />
Four lines at the end ...
</div>
`,learn:"Just like we needed to look at the beginning lines on day three, a utility called `tail` can be used to look at the bottom N lines.\nBy default it will display the last 10 lines so like before you will need to use the `-n` option.\n\n```\ntail -n 4 night-before-christmas.txt\n```\n",example:"tail -4 night-before-christmas.txt",expected_output:{lines:["He sprang to his sleigh, to his team gave a whistle,","And away they all flew like the down of a thistle.","But I heard him exclaim, ere he drove out of sight,",'"Happy Christmas to all, and to all a good-night."']},tags:["12days"]},{slug:"12days_5",version:1,disp_title:'Five lines that start with "the"',dir:"night_before_christmas",emoji:"12days/12days_5",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the fifth day of Shell my true love gave to me<br />
Five lines that start with "the" ...
</div>
`,learn:'We already used `grep` to extract a string from a file earlier so if you were thinking we would use `grep` again you are on the right track!\n\nHere we want to find all lines that start with the word "the".\nOne way you could do this is look for a capital "T" since the beginning of every sentence is capatilized.<br />\nSince `grep` is case sensitive by default, one way would be to search for the string `The`\n\nWe mentioned early that the PATTERN in `grep PATTERN <file>` refers to a [basic regular expression](https://www.gnu.org/software/sed/manual/html_node/BRE-syntax.html).<br />\nThis allows to do more than simple string matches by using the basic regular expression syntax.<br />\nOne example is the `^` character which will anchor the search to the start of every string.<br />\nThis type of character is called a [regex anchor](https://www.regular-expressions.info/anchors.html).<br />\n\nTo do a case-insenstive search for the word `the` but only match it at the _beginning_ of every line, you will need to use a combination of `-i` for case insenstive match and an `^` anchor.\n\nFor example:\n\n```\ngrep -i "^the" night-before-christmas.txt\n```\n\nTry it below!\n',example:'grep -i "^the" night-before-christmas.txt',expected_output:{lines:["The stockings were hung by the chimney with care","The children were nestled all snug in their beds,","The moon on the breast of the new-fallen snow","The prancing and pawing of each little hoof.","The stump of a pipe he held tight in his teeth,"]},tags:["12days"]},{slug:"12days_6",version:1,disp_title:"Six lines that are exciting!",dir:"night_before_christmas",emoji:"12days/12days_6",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the sixth day of Shell my true love gave to me<br />
Six lines that are exciting! ...
</div>

---
_Hint: Exciting lines end with "!"_
`,learn:"To find \"exciting\" lines we want to only print lines that end with a `!` character.<br />\nJust like how previously we learned that regular expression syntax can match strings with an anchor at the beginning of the line we can use `$` to anchor the match at the end.\n\n```\ngrep '!$' night-before-christmas.txt\n```\n\nOne important thing to be aware of is that the character `!` is a [special character](https://www.oreilly.com/library/view/learning-the-bash/1565923472/ch01s09.html) for the shell.<br />\nTo ensure that this works correctly you will need to either use single-quotes like above, or escape it with a `\\`:\n\n```\ngrep \\!$ night-before-christmas.txt\n```\n",example:"grep \\!$ night-before-christmas.txt",expected_output:{lines:["Now, Dasher! now, Dancer! now, Prancer and Vixen!","On, Comet! on, Cupid! on, Donder and Blitzen!","To the top of the porch! to the top of the wall!","Now dash away! dash away! dash away all!","His eyes--how they twinkled! his dimples how merry!","His cheeks were like roses, his nose like a cherry!"]},tags:["12days"]},{slug:"12days_7",version:1,disp_title:"Seven files that start with Santa",dir:"santa",emoji:"12days/12days_7",completions:["night-before-christmas.txt"],description:`<div class="twelve-days">
On the seventh day of Shell my true love gave to me<br />
Seven files that start with "Santa" ...
</div>
`,learn:`Now there are more than just one file in the working directory. Like the first day, we will need to use the \`ls\` command to list them.<br />
Unlike before, we need to limit the output to only files that begin with the string "Santa".<br />
To do this, we will need to use a feature of most shells that is called wildcarding or [globbing](https://tldp.org/LDP/abs/html/globbingref.html).

To create a wildcard, you will use the \`*\` character which will match zero or more characters after the string.<br />
For example, to match anything that starts with the string "Santa" you will need to send:

\`\`\`
ls Santa*
\`\`\`

If you wanted to list files that start with "Santa" or "santa" there is another feature you can use that can match multiple characters called [ranges](https://tldp.org/LDP/Bash-Beginners-Guide/html/sect_04_03.html).<br />
For example:

\`\`\`
ls [Ss]anta*
\`\`\`

Will match both files named \`Santa's hat\` and \`santa's toys\`.
`,example:"ls -1  [Ss]anta*",expected_output:{order:!1,re_sub:["^.*\\/",""],lines:["Santa's beard","Santa's belly","Santa's hat","Santa's reindeer","Santa's sleigh","Santa's toys","Santa's village"]},tags:["12days"]},{slug:"12days_8",version:2,disp_title:"Eight elves",dir:"elves",emoji:"12days/12days_8",completions:["Elves","Workshop","Hermey","Pepper Minstix","Shinny Upatree","Buddy","Wunorse Openslae","Alabaster Snowball","Bushy Evergreen","Sugarplum Mary"],description:`<div class="twelve-days">
On the eighth day of Shell my true love gave to me<br />
Eight elves in Santa's Workhop/ ...
</div>

---
_Hint: Try finding files named after Elves and moving them to the Workshop/ directory._
`,learn:'The elves are lost and only you can help them get back into Santa\'s workshop!\n\nYou can see where they are by sending the command `ls Elves/`. This will list all the files in the "Elves/" directory.\nTo move them to the `Workhop/` we will need to use the `mv` command and the `*` wildcard that was used on Day 7.\n\nThe `mv` command will move one more more files from one location to a new one. <br />\nIf you specify multiple files, all the files will be moved to the last argument which is the destination.\n\nFor example:\n\n```\nmv file1 file2 file3 destination/\n```\nWill move all three files to the folder named `destination/`\n\nTo move every file in in `Elves/` we can use a wildcard `Elves/*`, and move them by sending the following command:\n\n```\nmv Elves/* Workshop/\n```\n',example:"mv Elves/* Workshop/",expected_failures:["echo","cp Elves/* Workshop/"],tags:["12days"]},{slug:"12days_9",version:1,dir:"nine_reindeer",emoji:"12days/12days_9",completions:["Vixen","North Pole","Stable","Prancer","Comet","Cupid","Dancer","Santa's Village","Santa's Workshop","Rudolph","Dasher","Blixem","Dunder"],disp_title:"Nine Reindeer",description:`<div class="twelve-days">
On the ninth day of Shell my true love gave to me<br />
Nine names of Santa's Reindeer ...
</div>
`,learn:"Santa's nine Reindeer are lost in sub-directories, can you find them?\n\nHere we introduce a common utility called `find` which as you can probably guess, is\nused to find files. The Reindeer are hiding in sub-directories, to search for them\nin the current directory we use `.` as the first option to `find`. `.` is just another\nway of specifying the current working directory that you are in.\n\nTry sending:\n\n```\nfind .\n```\n\nThis will find both directories **and** files which is not what we want. <br />\nIn order to display only files, you will need to use the `-type f` argument to `find`:\n\n```\nfind . -type f\n```\n",example:"find . -type f",expected_output:{order:!1,re_sub:["^.*\\/",""],lines:["Dasher","Rudolph","Dancer","Prancer","Vixen","Comet","Cupid","Dunder","Blixem"]},tags:["12days"]},{slug:"12days_10",version:1,dir:"lords",emoji:"12days/12days_10",completions:["lords.txt"],disp_title:"Ten Lords",description:`<div class="twelve-days">
On the tenth day of Shell my true love gave to me<br />
Ten Lords by their names sorted ...
</div>
`,learn:"The Ten Lords are all mixed up!\n\nSorting is something we do often on the command line.\nThere is a file named `lords.txt` that contains a list of lords. We can\nuse the command `sort` to sort the contents and print them, by default\nit will sort the file in dictionary order.\n\n```\nsort lords.txt\n```\n",example:"sort lords.txt",expected_output:{lines:["Lord Asriel","Lord Buckethead","Lord Drinian","Lord Elrond","Lord Farquaad","Lord Gendry","Lord Glenarvan","Lord Macduff","Lord Palpatine","Lord Snooty"]},tags:["12days"]},{slug:"12days_11",version:1,dir:"pipers",emoji:"12days/12days_11",completions:["place-for-pipers","01","02","03","04","05","06","07","08","09","10","11","piper","not-a-piper"],disp_title:"Eleven Pipers",description:`<div class="twelve-days">
On the eleventh day of Shell my true love gave to me<br />
Eleven lines with pipers ♫ piping ♫ ...
</div>
`,learn:'The pipers are playing their pipes but also other music, can you print the piping music?\n\nHere we find ourselves in a directory with files named `piper`, each file\nwith one line matching the string "♫ piping ♫". <br />\nTo only output the lines that match "♫ piping ♫" we will need to first find\nthe files that contain the string, and then output their contents.\n\nEarlier we used the `find` command to find files, here we will use it again to\nfind files named `piper`:\n\n```\nfind . -name "piper" -type f\n```\n\nTo look for specific strings in each `find` result, the `-exec` can be used to execute a\ncommand for every file found. The special string `{}` can be used as a substitute for the\nfilename. For example:\n\n```\nfind . -name "piper" -type f -exec grep piping {} \\;\n```\n\nwill search for the string "piping" and execute `grep` in every file that find returns.\nThe `\\;` is an escaped `;` that ends the command that is executed.\n\nThere are a lot of different ways to get the same result, see the solutions for more examples.\nIt\'s even possible to play the pipers piping using a pipe!\n',example:'find . -name "piper" -exec grep piping {} \\;',expected_output:{lines:["♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫","♫ piping ♫"]},tags:["12days"]},{slug:"12days_12",disp_learn:!0,version:1,dir:"twelve_days_of_shell",emoji:"12days/12days_12",completions:["twelve-days-of-shell.txt"],disp_title:"Twelve days of Shell",description:`<div class="twelve-days">
On the twelfth day of Shell my true love gave to me<br />
Twelve Days of Shell on the terminal!
</div>
`,learn:`We have reached the twelfth day of Shell!<br />
For the final day all you need to do is print out the contents of \`twelve-days-of-shell.txt\`.

If you enjoyed these exercises [follow us on twitter](https://twitter.com/thecmdchallenge)
or try more [command line challenges](https://cmdchallenge.com)!
`,example:"cat twelve-days-of-shell.txt",expected_output:{lines:["🥁 🎵 🎶 🎵 🥁","On the twelfth day of Shell my true love gave to me","Twelve days of Shell on the terminal","Eleven lines with pipers ♫ piping ♫","Ten lords by their names sorted","Nine names of Santa's reindeer","Eight elves in Santa's Workhop/",'Seven files that start with "Santa"',"Six lines that are exciting!",'Five lines that start with "the"',"Four lines at the end","Three lines at the beginning","Two lines a-laughing","And a list of files in the directory tree","🥁 🎵 🎶 🎵 🥁"]},tags:["12days"]},{slug:"oops_cwd",emoji:"emojis/1F62D",disp_title:"current working directory",version:2,description:`A process on this computer managed to delete all of the files in
the /bin and /usr/bin directories!

---
The good news is that you still have a shell prompt, the bad news
is that you are only able to execute one command to complete each challenge.

For now, all you need to do is figure out where you are,
print the current working directory.
`,example:"pwd",expected_output:{lines:["/var/challenges/oops_cwd"]},img:"cmd-no-bin",tags:["oops"]},{slug:"oops_list_files",disp_title:"list files",version:3,emoji:"emojis/1F92F",description:`Great, now that you know which directory you are in, you want to see what else
is here. List all of the files on a single line, in the current working directory.

Hint: You won't be able to use the \`ls\` command, instead you will need to use
a bash builtin
`,expected_failures:['echo "another-file.txt my-dissertation.txt"'],expected_output:{lines:["another-file.txt my-dissertation.txt"]},example:"echo *",img:"cmd-no-bin",tags:["oops"]},{slug:"oops_print_file_contents",disp_title:"print file contents",version:2,emoji:"emojis/1F630",description:`Oh no! You now remember there is a very important file in this directory.

Display its contents before the data is lost for forever!
`,completions:["my-dissertation.txt"],example:"while read x; do echo $x; done < my-dissertation.txt",expected_output:{lines:["Rooter: A Methodology for the Typical Unification","","of Access Points and Redundancy","","Jeremy Stribling, Daniel Aguayo and Maxwell Krohn","","ABSTRACT","","Many physicists would agree that, had it not been for","congestion control, the evaluation of web browsers might never","have occurred. In fact, few hackers worldwide would disagree","with the essential uniﬁcation of voice-over-IP and public-","private key pair. In order to solve this riddle, we conﬁrm that","SMPs can be made stochastic, cacheable, and interposable.","..."]},img:"cmd-no-bin",tags:["oops"]},{slug:"oops_print_process",disp_title:"print process name",version:4,emoji:"emojis/1F627",description:`You know there is a process on machine that is deleting files, the first thing
you want to do is identify the name of it. Print the name of the process

Hint: process information is stored in /proc, maybe there is a something there
that will help?
`,example:'echo "$(</proc/42/cmdline)"',expected_output:{ignore_non_matching:!0,lines:["oops-this-will-delete-bin-dirs"]},img:"cmd-no-bin",tags:["oops"]},{slug:"oops_kill_a_process",disp_title:"kill a process",version:2,emoji:"emojis/1F625",description:`You are doing great!

You managed to save your important file.
Now that you know the process name
it will be good to kill it before it does any more damanage.

Kill the running process
`,example:"kill -9 42",expected_failures:["echo"],img:"cmd-no-bin",tags:["oops"]},{slug:"hello_world",emoji:"emojis/1F40C",disp_title:"hello world",version:5,author:"cmdchallenge",description:`Your first challenge is to print "hello world" on the terminal in a single command.

Hint: There are many ways to print text on the command line, one way is with the 'echo' command.
Try it below and good luck!
`,completions:["place your advertisement here!"],example:"echo 'hello world'",expected_failures:['echo "nope"'],expected_output:{lines:["hello world"]}},{slug:"current_working_directory",emoji:"emojis/1F98B",disp_title:"cwd",version:5,author:"cmdchallenge",description:`Print the current working directory.
`,example:"pwd",expected_failures:['echo "nope"'],expected_output:{lines:["/var/challenges/current_working_directory"]}},{slug:"list_files",emoji:"emojis/1F41B",disp_title:"list files",version:8,author:"cmdchallenge",description:`List names of all the files in the current directory, one file per line.
`,example:"ls",expected_output:{order:!1,lines:["01-take.txt","02-the.txt","03-command.txt","04-challenge.txt"]},expected_failures:['echo -e "01-take.txt\\n02-the.txt\\n03-command.txt\\n04-challenge.txt"']},{slug:"print_file_contents",emoji:"emojis/1F41C",disp_title:"file contents",version:5,author:"cmdchallenge",description:"There is a file named `access.log` in the current directory. Print the contents.\n",completions:["access.log"],example:"cat access.log",expected_output:{lines:['163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240','75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116','69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471','225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477','207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116','199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477','55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471','251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477','101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477','200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471']}},{slug:"last_lines",emoji:"emojis/1F578",version:5,author:"cmdchallenge",disp_title:"last lines",description:`Print the last 5 lines of "access.log".
`,completions:["access.log"],example:"tail -n 5 access.log",expected_output:{lines:['199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477','55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471','251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477','101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477','200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471']}},{slug:"create_file",emoji:"emojis/1F433",disp_title:"Create a file",version:2,author:"cmdchallenge",description:"Create an empty file named `take-the-command-challenge` in the current working directory.\n",completions:["take-the-command-challenge"],example:"touch take-the-command-challenge",expected_failures:["echo","echo ' ' > take-the-command-challenge"]},{slug:"create_directory",emoji:"emojis/1F40B",disp_title:"Create a directory",version:2,author:"cmdchallenge",description:'Create a directory named `tmp/files` in the current working directory\n---\n_Hint: The directory "`tmp/`" doesn\'t exist, with one command you need to create both "`tmp/`" and "`tmp/files`"_\n',completions:["take-the-command-challenge","tmp/files"],example:"mkdir -p tmp/files",expected_failures:["mkdir tmp | mkdir tmp/files","echo"]},{slug:"copy_file",emoji:"emojis/1F42C",disp_title:"copy file",version:3,author:"cmdchallenge",description:"Copy the file named `take-the-command-challenge` to the directory `tmp/files`\n",completions:["take-the-command-challenge","tmp/files"],example:"cp take-the-command-challenge tmp/files/.",expected_failures:["echo","mv take-the-command-challenge tmp/files"]},{slug:"move_file",emoji:"emojis/1F41F",disp_title:"move file",version:1,author:"cmdchallenge",description:"Move the file named `take-the-command-challenge` to the directory `tmp/files`\n",completions:["take-the-command-challenge","tmp/files"],example:"mv take-the-command-challenge tmp/files/.",expected_failures:["echo"]},{slug:"create_symlink",emoji:"emojis/1F420",disp_title:"create symlink",version:1,author:"cmdchallenge",description:"A symbolic link is a type of file that is a reference to another file.\n\nCreate a symbolic link named `take-the-command-challenge` that points to the\nfile `tmp/files/take-the-command-challenge`.\n",completions:["take-the-command-challenge","tmp/files/take-the-command-challenge"],example:"ln -s /var/challenges/create_symlink/tmp/files/take-the-command-challenge",expected_failures:["echo"]},{slug:"delete_files",emoji:"emojis/1F421",disp_title:"delete files",version:7,author:"cmdchallenge",description:'Delete all of the files in this challenge directory including all subdirectories and their contents.\n---\n_Hint: There are files and directories that start with a dot "`.`", "`rm -rf *`" won\'t work here!_\n',example:"find . -delete",expected_failures:["find . -exec rm {} \\;","rm -rf /var/challenges/delete_files"]},{slug:"remove_files_with_extension",emoji:"emojis/1F43A",version:6,author:"cmdchallenge",disp_title:"remove files with extension",description:`There are files in this challenge with different file extensions.
Remove all files with the .doc extension recursively in the current working directory.
`,example:"rm **/*.doc",expected_failures:["echo","rm -R .* *"]},{slug:"find_string_in_a_file",emoji:"emojis/1F41D",disp_title:"find string",version:5,author:"cmdchallenge",description:'There is a file named `access.log` in the current working directory. Print all lines in this file that contains the string "GET".\n',completions:["access.log"],example:"grep 'GET' access.log",expected_output:{lines:['163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240','75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116','69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471','225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477','207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116','199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477','251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477','200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471']}},{slug:"search_for_files_containing_string",emoji:"emojis/1F41E",disp_title:"search for string",version:6,author:"cmdchallenge",description:`Print all files in the current directory, one per line (not the path, just the filename) that contain the string "500".
`,completions:["access.log"],example:"grep -l 500 *",expected_failures:["ls *[^2]"],expected_output:{order:!1,lines:["access.log","access.log.1"]}},{slug:"search_for_files_by_extension",emoji:"emojis/1F997",disp_title:"search for extension",version:5,author:"cmdchallenge",description:`Print the relative file paths, one path per line for all filenames that start with "access.log" in the current directory.
`,completions:["access.log"],example:"find . -name 'access.log*'",expected_output:{order:!1,re_sub:["^\\./",""],lines:["access.log","access.log.1","access.log.2"]}},{slug:"search_for_string_in_files_recursive",emoji:"emojis/1F577",disp_title:"search recursive",version:5,author:"cmdchallenge",description:`Print all matching lines (without the filename or the file path) in all files under the current directory that start with "access.log" that contain the string "500".

Note that there are no files named \`access.log\` in the current directory, you will need to search recursively.
`,completions:["access.log"],example:"grep -h 500 **/access.log*",expected_output:{order:!1,lines:['69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471','225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477','2.71.250.27 - - [09/Jan/2017:22:41:26 +0100] "GET /pages/create HTTP/1.0" 500 2477']}},{slug:"extract_ip_addresses",emoji:"emojis/1F982",disp_title:"find ip address",version:5,author:"cmdchallenge",description:`Extract all IP addresses from files that start with "access.log" printing one IP address per line.
`,completions:["access.log"],example:"grep -Pho '^\\d+\\.\\d+\\.\\d+\\.\\d+' **/access.log*",expected_output:{re_sub:["^[\\w/.]*?:",""],order:!1,lines:["163.56.115.58","75.113.188.234","69.16.40.148","225.219.54.140","207.243.19.2","199.37.62.156","55.74.240.123","251.111.109.143","101.163.230.250","200.19.168.148","108.68.174.15","17.2.20.139","28.151.137.59","199.150.241.179","2.71.250.27","17.137.186.194","151.84.119.34","4.180.204.195","9.230.96.54","157.143.233.21"]}},{slug:"count_files",emoji:"emojis/1FAB0",disp_title:"count files",version:8,author:"cmdchallenge",description:`Count the number of files in the current working directory. Print the number of files as a single integer.
`,example:"find -L . -type f | wc -l",expected_failures:["echo 2"],expected_output:{re_sub:["^\\s+",""],lines:["2"]}},{slug:"simple_sort",emoji:"emojis/1FAB1",disp_title:"simple sort",version:5,author:"cmdchallenge",description:`Print the contents of access.log sorted.
`,completions:["access.log"],example:"sort access.log",expected_output:{lines:['101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477','163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240','199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477','200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471','207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116','225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477','251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477','55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471','69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471','75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116']}},{slug:"count_string_in_line",emoji:"emojis/1F9A0",disp_title:"count the strings",version:6,author:"cmdchallenge",description:`Print the number of lines in access.log that contain the string "GET".
`,completions:["access.log"],example:'grep -c "GET" access.log',expected_failures:["echo 8"],expected_output:{re_sub:["^\\s+",""],lines:["8"]}},{slug:"split_on_a_char",emoji:"emojis/1F435",disp_title:"split on a char",version:5,author:"cmdchallenge",description:"The file split-me.txt contains a list of numbers separated by a `;` character.\n\nSplit the numbers on the `;` character, one number per line.\n",completions:["split-me.txt"],example:"tr ';' '\\n' < split-me.txt",expected_output:{lines:["1","2","3","4","5","6","7","8","9","10"]}},{slug:"print_number_sequence",emoji:"emojis/1F436",disp_title:"generate a number sequence",version:5,author:"cmdchallenge",description:`Print the numbers 1 to 100 separated by spaces.
`,example:"echo $(seq 1 100)",expected_output:{lines:["1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100"]}},{slug:"replace_text_in_files",emoji:"emojis/1F98A",disp_title:"replace text in files",version:6,author:"cmdchallenge",example:"sed -i 's/challenges are difficult//g' **/*.txt",expected_failures:["echo"],description:`This challenge has text files (with a .txt extension) that contain the phrase "challenges are difficult".  Delete this phrase from all text files recursively.

Note that some files are in subdirectories so you will need to search for them.
`},{slug:"sum_all_numbers",emoji:"emojis/1F431",disp_title:"sum the numbers",version:6,author:"cmdchallenge",example:"paste -sd+ sum-me.txt | bc",expected_failures:["echo 42"],description:`The file sum-me.txt has a list of numbers, one per line. Print the sum of these numbers.
`,expected_output:{lines:["42"]}},{slug:"just_the_files",emoji:"emojis/1F981",disp_title:"only the filenames",version:5,author:"cmdchallenge",description:`Print all files in the current directory recursively without the leading directory path.
`,example:"find -type f -printf '%f\\n'",expected_output:{order:!1,lines:["animi.doc","corporis.xls","odit.doc","beatae.flac","error.doc","libero.xls","necessitatibus.doc","totam"]}},{slug:"remove_extensions_from_files",emoji:"emojis/1F42F",disp_title:"remove extensions",version:5,author:"cmdchallenge",description:`Rename all files removing the extension from them in the current directory recursively.
`,example:'for f in $(find . -type f -name "*.*"); do mv "$f" "${f%.*}"; done',expected_failures:["echo"]},{slug:"replace_spaces_in_filenames",emoji:"emojis/1F434",disp_title:"replace spaces",version:5,author:"cmdchallenge",description:`The files in this challenge contain spaces.
List all of the files (filenames only) in the current directory but replace all spaces with
a '.' character.
`,example:"ls | tr ' ' '.'",expected_output:{order:!1,lines:["Adam.Simpson","Alexis.Stein","Allison.Brown","Amy.Anderson","Angel.Saunders","Brad.Michael","Briana.Wilson","Carrie.Alexander","Christine.Valdez","Christopher.Miller","Claudia.Mccormick","Corey.Bird","Courtney.Miller","Crystal.Dunn","Crystal.Valdez","Erica.Richardson","James.Harper","James.Roberts","Jared.Hill.DVM","John.Nguyen","Jorge.Ross","Joseph.Hurst","Karen.Ramirez","Kevin.Price","Kimberly.Parker","Lori.Macias","Luke.Mason","Lynn.Robinson","Mallory.Peterson","Marie.Gutierrez","Matthew.Romero","Michaela.Hobbs","Molly.Stevens","Mr..James.Lopez","Mr..Shawn.Martin","Mrs..Jade.Clark","Olivia.Irwin","Parker.Gilbert","Robert.Gregory","Robert.Hill","Sarah.Hill","Scott.Rice","Sheri.Bishop","Tamara.Anderson","Tammy.Galloway","Terri.Young","Thomas.Parks","Thomas.Washington","Tiffany.Clark","Yvonne.Myers"]}},{slug:"dirs_containing_files_with_extension",emoji:"emojis/1F984",disp_title:"directories containing files",version:2,author:"cmdchallenge",description:`In this challenge there are some directories containing files with different extensions.
Print all directories, one per line without duplicates that contain one or more files with a ".tf" extension.
`,completions:["terraform","main.tf","modules","load_balancer","main.tf","virtual_machine","outputs.tf","main.tf","vpn","main.tf","files","bootstrap.sh","templates","config.template","bin","dostuff.sh"],example:'find . -name "*.tf" -type f -exec dirname {} \\; | sort | uniq',expected_output:{order:!1,re_sub:["^\\./",""],lines:["terraform","terraform/modules/load_balancer","terraform/modules/virtual_machine","terraform/modules/vpn"]}},{slug:"files_starting_with_a_number",emoji:"emojis/1F42E",disp_title:"files starting with a number",version:5,author:"cmdchallenge",description:`There are a mix of files in this directory that start with letters and numbers.
Print the filenames (just the filenames) of all files that start with a number recursively in the current directory.
`,completions:["757Robert Marquez","Mr. James Lopez","974Michael Bowman","477Thomas Pierce MD","04Carrie Alexander","42Robert Hill","737Jeffrey Davis","778Holly Archer","402Nancy Henson","436Teresa Owens","48Thomas Allen","001dir","exercitationem.mp3","3maxime.mp3","Jorge Ross","540Katherine Jones","682Terri Jones","639Charles Ferguson","25Brandon Mcdonald","132Rebecca Rubio","78Michelle Spencer","Matthew Romero","670James Jacobs","dir","provident.avi","99blanditiis.avi","sit.avi","nisi.avi","totam.avi","293Linda Bennett","335John Joseph","593Brett Martin","388Andrew Carter","tmp","511Tammy Welch","Sheri Bishop"],example:"find . -type f -name '[[:digit:]]*' -printf '%f\\n'",expected_output:{order:!1,lines:["974Michael Bowman","540Katherine Jones","436Teresa Owens","04Carrie Alexander","778Holly Archer","3maxime.mp3","682Terri Jones","511Tammy Welch","293Linda Bennett","670James Jacobs","737Jeffrey Davis","42Robert Hill","25Brandon Mcdonald","402Nancy Henson","78Michelle Spencer","132Rebecca Rubio","639Charles Ferguson","335John Joseph","99blanditiis.avi","477Thomas Pierce MD","757Robert Marquez","388Andrew Carter","48Thomas Allen","593Brett Martin"]}},{slug:"print_nth_line",emoji:"emojis/1F437",disp_title:"nth line",version:5,author:"cmdchallenge",description:`Print the 25th line of the file faces.txt
`,example:"sed -n '25p' faces.txt",expected_output:{lines:["¯\\_(ツ)_/¯"]}},{slug:"reverse_readme",emoji:"emojis/1F42D",disp_title:"reverse",version:5,author:"cmdchallenge",description:`Print the lines of the file \`reverse-me.txt\` in this directory in reverse line order so that the last line is printed first and the first line is printed last.

\`\`\`
~~~~~~~~~~~~~~~~~~~~~
In the future
Environmental destruction will be the norm
No longer can it be said that
My peers and I care about this earth
It will be evident that
My generation is apathetic and lethargic
It is foolish to presume that
There is hope
~~~~~~~~~~~~~~~~~~~~~
-Jonathan Reed "The Lost Generation"
\`\`\`
`,example:"tac reverse-me.txt",expected_output:{lines:['-Jonathan Reed "The Lost Generation"',"~~~~~~~~~~~~~~~~~~~~~","There is hope","It is foolish to presume that","My generation is apathetic and lethargic","It will be evident that","My peers and I care about this earth","No longer can it be said that","Environmental destruction will be the norm","In the future","~~~~~~~~~~~~~~~~~~~~~"]}},{slug:"remove_duplicate_lines",emoji:"emojis/1F439",disp_title:"remove duplicates",version:5,author:"cmdchallenge",description:`Print the file faces.txt, but only print the first instance of each duplicate line, even if the duplicates don't appear next to each other.

Note that order matters so don't sort the lines before removing duplicates.
`,example:"awk '!x[$0]++' faces.txt",expected_output:{lines:["(◕‿◕)","(^̮^)","ʘ‿ʘ","ಠ_ಠ","ಠ⌣ಠ","ಠ‿ಠ","(ʘ‿ʘ)","(ಠ_ಠ)","¯\\_(ツ)_/¯","(ಠ⌣ಠ","ಠಠ⌣ಠ)","(ಠ‿ಠ)","٩◔̯◔۶","ヽ༼ຈل͜ຈ༽ﾉ","♥‿♥","◔̯◔","⊙﹏⊙","(¬_¬)","(；一_一)","(͡° ͜ʖ ͡°)","(° ͜ʖ °)","¯\\(°_o)/¯","( ﾟヮﾟ)","(︺︹︺)"]}},{slug:"find_primes",emoji:"emojis/1F43B",disp_title:"finding prime numbers",version:2,author:"cmdchallenge",example:'for num in $(cat random-numbers.txt); do [[ $num == $(factor $num | cut -d" " -f2) ]] && echo $num; done | sort | uniq | wc -l',expected_failures:["echo 12"],completions:["random-numbers.txt"],description:"The file `random-numbers.txt` contains a list of 100 random integers.\nPrint the number of unique prime numbers contained in the file.\n",expected_output:{lines:["12"]}},{slug:"print_common_lines",emoji:"emojis/1F43C",version:5,author:"amboar",disp_title:"print common lines",example:"comm -12 <(cut -d' ' -f1 access.log.1 | sort) <(cut -d' ' -f1 access.log.2 | sort)",completions:["access.log.1","access.log.2"],description:"`access.log.1` and `access.log.2` are http server logs.\n\nPrint the IP addresses common to both files, one per line.\n",expected_output:{order:!1,lines:["108.68.174.15","17.137.186.194","2.71.250.27","28.151.137.59"]}},{slug:"print_line_before",emoji:"emojis/1F423",disp_title:"print line before match",version:5,author:"mmr",example:"awk '/404/{print a}{a=$0}' **/access.log*",description:`Print all matching lines (without the filename or the file path) in all files under the current directory that start with "access.log", where the next line contains the string "404".

Note that you will need to search recursively.
`,completions:["access.log"],expected_output:{order:!1,lines:['251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477','17.137.186.194 - - [09/Jan/2017:22:43:17 +0100] "GET /pages/create HTTP/1.0" 200 1116','89.148.148.238 - - [09/Jan/2017:22:33:09 +0100] "GET /posts/1/display HTTP/1.0" 502 2477','138.212.253.84 - - [09/Jan/2017:22:53:54 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471']}},{slug:"print_files_if_different",emoji:"emojis/1F99A",version:5,author:"anonymous",disp_title:"files that are different",example:"for i in $(ls *.bin); do if [[ `cmp base.bin $i` ]]; then echo $i; fi; done",description:"Print all files with a `.bin` extension in the current directory that are different than the file named base.bin.\n",expected_output:{order:!1,lines:["test2.bin","test4.bin","test5.bin","test7.bin"]}},{slug:"nested_dirs",emoji:"emojis/1F438",disp_title:"tricky file",version:6,author:"gitunique",description:`
There is a file: \`./.../  /. .the flag.txt\`

Show its contents on the screen.
`,example:"cat ./.../\\ \\ /.\\ .the\\ flag.txt",expected_failures:["echo you got it!"],expected_output:{lines:["you got it!"]}},{slug:"find_tabs_in_a_file",emoji:"emojis/1F432",version:6,disp_title:"find tabs in file",author:"anonymous",description:"How many lines contain tab characters in the file named `file-with-tabs.txt` in the current directory.\n",example:"grep -P '\\t' file-with-tabs.txt | wc -l",expected_failures:["echo 3"],expected_output:{lines:["3"]}},{slug:"remove_files_without_extension",emoji:"emojis/1F338",version:5,author:"bryfry",disp_title:"Remove files without extension.",description:`There are files in this challenge with different file extensions.

Remove all files without the .txt and .exe extensions recursively in the current working directory.
`,example:'find . -type f -regextype posix-extended ! -regex ".*(\\.txt|\\.exe)$" -exec rm {} +',expected_failures:["echo"]},{slug:"remove_files_with_a_dash",emoji:"emojis/1F339",version:5,author:"anonymous",disp_title:"Remove files that start with a dash",description:`There are some files in this directory that start with a dash in the filename.  Remove those files.
`,example:"rm ./-*",expected_failures:["echo"]},{slug:"print_sorted_by_key",emoji:"emojis/1F33A",version:5,author:"verovan",disp_title:"Print the content sorted by PID",description:`There are two files in this directory, ps-ef1 and ps-ef2.  Print the contents of both files sorted by PID and delete repeated lines.
`,example:"cat ps-ef1 > aux; sed '1 d' ps-ef2 >> aux; cat aux | sort -nk2,2 | uniq",expected_output:{lines:["UID        PID  PPID  C STIME TTY          TIME CMD","root         1     0  0 mar04 ?        00:00:13 /sbin/init","root         2     0  0 mar04 ?        00:00:00 [kthreadd]","root         3     2  0 mar04 ?        00:01:07 [ksoftirqd/0]","user         5     2  0 mar04 ?        00:00:00 [kworker/0:0H]","user         7     2  0 mar04 ?        00:07:06 [rcu_sched]","user         8     2  0 mar04 ?        00:00:00 [rcu_bh]","root         9     2  0 mar04 ?        00:00:00 [migration/0]","root        10     2  0 mar04 ?        00:00:04 [watchdog/0]","user        11     2  0 mar04 ?        00:00:04 [watchdog/1]","root        12     2  0 mar04 ?        00:00:00 [migration/1]","root        13     2  0 mar04 ?        00:00:59 [ksoftirqd/1]","user        15     2  0 mar04 ?        00:00:00 [kworker/1:0H]","user        16     2  0 mar04 ?        00:00:04 [watchdog/2]","root        17     2  0 mar04 ?        00:00:00 [migration/2]","root        18     2  0 mar04 ?        00:00:59 [ksoftirqd/2]","root        20     2  0 mar04 ?        00:00:00 [kworker/2:0H]","user        21     2  0 mar04 ?        00:00:04 [watchdog/3]","root        22     2  0 mar04 ?        00:00:00 [migration/3]","root        23     2  0 mar04 ?        00:01:29 [ksoftirqd/3]"]}},{slug:"IPv4_listening_ports",emoji:"emojis/1F33B",version:5,author:"TaTo69",disp_title:"print the ports",description:`In the current directory there is a file called netstat.out.

Print all the IPv4 listening ports sorted from the higher to lower.
`,example:`egrep  "tcp\\ .*:**LISTEN" netstat.out | awk '{print $4}' | sed -e 's/.*\\://g' | sort -nr`,expected_output:{lines:["45922","9090","8080","1723","1254","1244","1234","111","80","22"]}}],b=window.jQuery=window.$;vn.registerLanguage("bash",Ws);const De=window.location.hostname.split("."),ye=De.filter(t=>!["oops","12days"].includes(t)).join("."),uH='<img src="img/emojis/1F92D.png" alt="" />',hH='<img src="img/cmdchallenge-round.png" alt="" />',pH='<img src="img/emojis/1F384.png" alt="" />',nn={CMD:"//"+ye,OOPS:"//oops."+ye,XMAS:"//12days."+ye},tt={CMD:"cmdchallenge",OOPS:"oops",XMAS:"12days"},Jt=["oops","12days"].includes(De[0])?De[0]:"cmdchallenge",fH="/c/r",dH="/c/s",gH=Jt===tt.OOPS?["echo","read"]:["find","echo","awk","sed","perl","wc","grep","cat","sort","cut","ls","tac","jq","paste","tr","rm","tail","comm","egrep"],Me="correct_answers",ft={incorrect:"incorrect",correct:"correct",error:"error"};let oe,V=null,lt=lH,Pt;const Dt=function*(t){for(;;)yield*t},mH=Dt(["emojis/1F63F.png"]),vH=Dt(["emojis/E282.png","emojis/1F645-200D-2640-FE0F.png","emojis/1F645-200D-2642-FE0F.png","emojis/1F940.png"]),bH=Dt(["emojis/1F471-200D-2640-FE0F.png","emojis/1F471-200D-2642-FE0F.png"]),yH=Dt(["emojis/1F9D4.png","emojis/1F468-200D-1F9B1.png","emojis/1F468-200D-1F9B0.png","emojis/1F468-200D-1F33E.png","emojis/1F468-200D-1F52C.png","emojis/1F468-200D-1F373.png","emojis/1F468-200D-1F393.png"]),wH=Dt(["emojis/1F478.png","emojis/1F482.png","emojis/1F9DD.png","emojis/1F9DD-200D-2640-FE0F.png","emojis/1F680.png"]),_H=Dt(["emojis/1F600.png","emojis/1F604.png","emojis/1F970.png","emojis/1F60D.png","emojis/1F929.png"]),xH=Dt(["emojis/1F936.png","emojis/1F385.png","emojis/1F36D.png","emojis/2603.png"]),EH=new C5,TH=new M,Qn=function(t){const e=EH.parse(t);return TH.render(e)},kH=function(){V&&(Pt=re("0","green"))},Pe=function(t){let e;try{e=JSON.parse(localStorage.getItem(t))}catch{e=[]}return e===null&&(e=[]),e.filter((n,s,i)=>i.indexOf(n)===s)},DH=function(t,e,n){let s;const i=Pe(e);i.includes(t)||(s=JSON.stringify(i.concat([t])),localStorage.setItem(e,s)),typeof n=="function"&&n()},Ce=function(){if(pe().length===0){switch(Jt){case tt.OOPS:b(".title .won").html('🎉 Congrats, you completed the challenge! 🎉 Try <a href="'+nn.CMD+'">even more challenges!</a>').show();break;case tt.CMD:b(".title .won").html("🎉 Congrats, you completed the challenge! 🎉").show();break;case tt.XMAS:b(".title .won").html('🎄 Congrats, you completed all 12 days! 🎄 Try <a href="'+nn.CMD+'">even more challenges!</a>').show();break}return!0}else return b(".title .won").hide(),!1},re=function(t,e,n){return n||(n=""),"[["+n+";"+e+";black]"+t+"]"},CH=function(){const t=V.slug;lt.forEach(function(e){t===e.slug?(b("#"+e.slug).removeClass("active-challenge inactive-challenge").addClass("active-challenge"),b(".img-container."+e.slug).removeClass("active-badge inactive-badge").addClass("active-badge")):(b("#"+e.slug).removeClass("active-challenge inactive-challenge").addClass("inactive-challenge"),b(".img-container."+e.slug).removeClass("active-badge inactive-badge").addClass("inactive-badge"))})},AH=function(){return RH().concat(pe()[0]||[])},SH=function(t){const e={};lt.forEach(function(n){const s=n.slug;e["/"+s]=function(){V=n,sn(),Ae(),Ce()}}),e["*"]=function(){V=pe()[0]||lt[0],sn(),Ae(),Ce()},ae(e),typeof t=="function"&&t()},Ae=function(t){b("div#badges").html(""),AH().forEach(function(e){const n=e.slug,s=e.disp_title;b("div#badges").append("<div tabindex='-1' class='img-container "+n+"'><a title='"+s+"' id='badge_"+n+"' href='#/"+n+"'><img class='badge' src='img/"+e.emoji+".png' alt='"+n+"'/></a></li>"),b("a#badge_"+n).on("click",function(i){i.preventDefault(),i.stopPropagation(),oe.focus(),ae("/"+n)})}),jH(),CH(),b("#learn").html(""),V.learn&&FH(),typeof t=="function"&&t()},LH=function(t){switch(Jt){case tt.OOPS:t(lt.filter(e=>(e.tags||[]).includes("oops")));break;case tt.XMAS:t(lt.filter(e=>(e.tags||[]).includes("12days")));break;case tt.CMD:t(lt.filter(e=>!e.tags));break}},qH=function(t){const e={cmd:btoa(t),slug:V.slug,version:V.version,img:V.img||"cmd"};b.ajax({type:"POST",url:fH,async:!0,data:e,success:function(n){MH(b.parseJSON(n))},error:function(n){const s=n.responseText||"Unknown Error :(";Pt="☠️",jt(s,ft.error)}})},NH=function(){b("#challenge-output").text("").hide()},jt=function(t,e){b("#info-box .text").html(t);const n=lt.indexOf(V);let s;switch(e){case ft.correct:switch(Jt){case tt.OOPS:s=_H.next().value;break;case tt.CMD:n<4?s=bH.next().value:n>=4&&n<20?s=yH.next().value:s=wH.next().value;break;case tt.XMAS:s=xH.next().value;break}b("#info-box .gradient").removeClass("incorrect correct error").addClass("correct"),b("#info-box .img").html("<img src='img/"+s+"' alt='correct' />");break;case ft.incorrect:b("#info-box .gradient").removeClass("incorrect correct error").addClass("incorrect"),b("#info-box .img").html("<img src='img/"+vH.next().value+"' alt='incorrect' />");break;case ft.error:b("#info-box .gradient").removeClass("incorrect correct error").addClass("error"),b("#info-box .img").html("<img src='img/"+mH.next().value+"' alt='correct' />");break;default:throw new Error("Invalid status: "+e)}b("#info-box").show(),oe&&oe.resume()},sn=function(){const t=Qn(V.description);b("#challenge-desc .img-container").html("<img src='img/"+V.emoji+".png' alt='"+V.disp_title+"' />"),b("#challenge-desc .desc-container").html(t)},OH=function(t){const e=t.split(`
`);b("#challenge-output").text(""),e.forEach(function(n){b("#challenge-output").append("<span>"+n+"</span>")}),b("#challenge-output").show()},pe=function(){const t=Pe(Me);return lt.filter(e=>!t.includes(e.slug))},RH=function(){const t=Pe(Me);return lt.filter(e=>t.includes(e.slug))},FH=function(){V.disp_learn?b("#chck2").prop("checked",!0):b("#chck2").prop("checked",!1),b("#learn").html(Qn(V.learn)),b("#learn-box").show()},jH=function(){b.ajax({dataType:"json",url:dH,data:{slug:V.slug},success:function(t){if(t.length===0){b("#solutions-status").html("No solutions yet for this challenge");return}b("#solutions-status").html(""),b("#solutions").html("").show(),t.cmds.forEach(function(e){b("#solutions").append(BH(e)+`
`)}),vn.highlightElement(document.getElementById("solutions"))},error:function(){b("#solutions").html("").hide(),b("#solutions-status").html("Unable to fetch solutions")}})},BH=function(t){return t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;").replace(/\n/g,`
  `)},MH=function(t){t.ExitCode===0?Pt=re(t.ExitCode,"green"):Pt=re(t.ExitCode,"red"),t.Output&&OH(t.Output),t.Correct?DH(V.slug,Me,function(){Ae(),V=pe()[0]||lt[0],Ce()?jt("Correct! You have completed all of the challenges, but feel free to keep on going!",ft.correct):jt("Correct! You have a new challenge!",ft.correct),ae("/"+V.slug)}):t.Error?jt(t.Error+" - try again",ft.incorrect):jt("Incorrect answer, try again",ft.incorrect)};switch(Jt){case tt.OOPS:document.title="Oops, I deleted my bin/ dir :(",b("#header-img").html(uH),b("#header-text").html("Oops I deleted my bin/ dir :(");break;case tt.XMAS:document.title="🎄 Twelve Days of Shell 🎄",Ys.load({custom:{families:["Snowburst One","Princess Sofia"],urls:["/fonts/fonts.css"]},active:function(){b("#header-img").html(pH),b("#header-text").addClass("snowburst"),b("#header-text").html("Twelve Days of Shell")}});break;case tt.CMD:document.title="Command Challenge!",b("#header-text").html("Command Challenge"),b("#header-img").html(hH);break}b("#header-img").show();b("#header-text").show();Pt=re("0","green");b(document).keydown(function(t){const e=t.target.nodeName.toLowerCase();if((e!=="input"&&e!=="textarea"||b(t.target).attr("readonly")||t.target.getAttribute("type")==="checkbox")&&t.keyCode===8)return!1});LH(function(t){lt=t,b("#term-challenge").terminal(function(e,n){e=e.replace(/^\s+|\s+$/g,""),e!==""?(ae("/"+V.slug),b("#info-box").hide(),NH(),b("#chck1").prop("checked",!1),/tail\s+-[Ff]/.test(e)?jt("<code>tail -f</code> will wait for additional data to be appended to the file, try removing the -f option",ft.incorrect):(n.pause(),qH(e))):n.clear()},{greetings:"",name:"cmdchallenge",outputLimit:1,convertLinks:!0,linksNoReferrer:!0,onBeforeCommand:function(e){b(".terminal").hide(),b("#term-spinner").show()},onAfterCommand:function(e){b("#term-spinner").hide(),b(".terminal").show()},prompt:function(e){e("("+Pt+")> ")},completion:function(e,n){return Array.prototype.concat(gH,V.completions||[])},doubleTab:function(e,n,s){b("#completions").html(n.join("<span style='color: grey;'> | </span>")).show().fadeOut(5e3)},onClear:kH}),oe=b.terminal.active(),SH()});
